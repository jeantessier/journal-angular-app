import { Journal } from "./journal";

export const JOURNAL: Journal = {
  "title": "Jean's Journal",
  "entries": [
    {
      date: "2022-06-03",
      pretty_date: "June 03, 2022",
      body: "Last day at [Forge](https://forgeglobal.com/).",
    },
    {
      date: "2022-05-30",
      pretty_date: "May 30, 2022",
      body: "Worked through some basic [Angular](https://angular.io/) tutorials.  My \"blog\"\nis an old [AngularJS](https://angularjs.org/) app that needs modernizing.  I\ncould rewrite it using [React](https://reactjs.org/), but this could be an\nopportunity to learn some basic Angular.  It was easy to include some of the old\nAngularJS in an existing HTML page.\n\nI feel that the new Angular will be more like an entire app, similar to how the\n[BookReviews](https://github.com/jeantessier/book-reviews-react-app) React app\nis its own set of files with its own `index.html` entrypoint.  I was able to\nforce the React entrypoint by setting `homepage` in `package.json` and then\ncopy its `index.html` to [`Books.html`](Books.html) to install multiple versions\nof the app with different datasets.  I don't know if Angular can do the same to\nreplace the current [`Journal.html`](Journal.hml).",
    },
    {
      date: "2022-05-27",
      pretty_date: "May 27, 2022",
      body: "I finally started watching\n[Severance](https://en.wikipedia.org/wiki/Severance_(TV_series)) and lo and\nbehold, it was filmed at\n[Holmdel](https://en.wikipedia.org/wiki/Bell_Labs_Holmdel_Complex).  I worked in\nthat building between 1995 and 1998, when I was working for AT&T Labs.  There\nwas no severed floor, back then, to my knowledge.  I'm glad the building has\nbeen restored and is back in use.",
    },
    {"pretty_date":"May 24, 2022","date":"2022-05-24","body":"I found a new tool to render code snippets using some form of syntax\nhighlighting.  This one is called [hilite.me](https://hilite.me/) and it\ngenerates HTML that you can embed in webpages.\n\nHere is what my snippet from [2020-04-23](#2020-04-23) looks like.  I had to\nmake minor adjustments to the HTML because it is embedded in Markdown, and then\nthe Tufte stylesheet wiped out the syntax highlighting.\n\n<!-- HTML generated using hilite.me -->\n<div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\"> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23</pre></td><td><pre style=\"margin: 0; line-height: 125%\"><span style=\"color: #003366; font-weight: bold\">RSpec</span><span style=\"color: #333333\">.</span>describe <span style=\"color: #003366; font-weight: bold\">SomeClassUnderTest</span> <span style=\"color: #008800; font-weight: bold\">do</span>\n    describe <span style=\"background-color: #fff0f0\">&#39;#some_method_under_test&#39;</span> <span style=\"color: #008800; font-weight: bold\">do</span>\n        subject { described_class<span style=\"color: #333333\">.</span>new<span style=\"color: #333333\">.</span>some_method_under_test input_value }\n        &nbsp;\n        <span style=\"color: #333333\">[</span>\n            <span style=\"color: #333333\">[</span> <span style=\"background-color: #fff0f0\">&#39;a string&#39;</span>, <span style=\"background-color: #fff0f0\">&#39;123&#39;</span>, <span style=\"background-color: #fff0f0\">&#39;123.00&#39;</span> <span style=\"color: #333333\">]</span>,\n            <span style=\"color: #333333\">[</span> <span style=\"background-color: #fff0f0\">&#39;an integer&#39;</span>, <span style=\"color: #0000DD; font-weight: bold\">123</span>, <span style=\"background-color: #fff0f0\">&#39;123.00&#39;</span> <span style=\"color: #333333\">]</span>,\n            <span style=\"color: #333333\">[</span> <span style=\"background-color: #fff0f0\">&#39;a float&#39;</span>, <span style=\"color: #0000DD; font-weight: bold\">123</span><span style=\"color: #333333\">.</span><span style=\"color: #0000DD; font-weight: bold\">0</span>, <span style=\"background-color: #fff0f0\">&#39;123.00&#39;</span> <span style=\"color: #333333\">]</span>,\n            <span style=\"color: #333333\">[</span> <span style=\"background-color: #fff0f0\">&#39;a negative number&#39;</span>, <span style=\"color: #333333\">-</span><span style=\"color: #0000DD; font-weight: bold\">123</span>, <span style=\"background-color: #fff0f0\">&#39;-123.00&#39;</span> <span style=\"color: #333333\">]</span>,\n            <span style=\"color: #333333\">[</span> <span style=\"background-color: #fff0f0\">&#39;nil&#39;</span>, <span style=\"color: #003388; font-weight: bold\">nil</span>, <span style=\"background-color: #fff0f0\">&#39;nil&#39;</span> <span style=\"color: #333333\">]</span>,\n        <span style=\"color: #333333\">].</span>each <span style=\"color: #008800; font-weight: bold\">do</span> <span style=\"color: #333333\">|</span>variation, input, expected_output<span style=\"color: #333333\">|</span>\n            describe <span style=\"background-color: #fff0f0\">&#39;when the input is #{variation}&#39;</span> <span style=\"color: #008800; font-weight: bold\">do</span>\n                let(<span style=\"color: #AA6600\">:input_value</span>) { input }\n                it { is_expected<span style=\"color: #333333\">.</span>to eq(expected_output) }\n            <span style=\"color: #008800; font-weight: bold\">end</span>\n        <span style=\"color: #008800; font-weight: bold\">end</span>\n        &nbsp;\n        describe <span style=\"background-color: #fff0f0\">&#39;when the input is invalid&#39;</span> <span style=\"color: #008800; font-weight: bold\">do</span>\n            let(<span style=\"color: #AA6600\">:input_value</span>) { <span style=\"background-color: #fff0f0\">&#39;invalid&#39;</span> }\n            it { expect { subject }<span style=\"color: #333333\">.</span>to raise_error }\n        <span style=\"color: #008800; font-weight: bold\">end</span>\n    <span style=\"color: #008800; font-weight: bold\">end</span>\n<span style=\"color: #008800; font-weight: bold\">end</span>\n</pre></td></tr></table></div>\n\nHere is a screen grab from the [hilite.me](https://hilite.me/) website.\n\n![data-driven-rspec](data-driven-rspec_hilite_me.png)\n\nI like that the embedded HTML is not an image, so readers can cut-and-paste the\ncode or search for keywords.\n\nCompare that with [Carbon](https://carbon.now.sh/), which is an image.\n\n![data-driven-rspec](data-driven-rspec_carbon.png)\n\nOr with [GitHub Gist](https://gist.github.com/), which uses a `<script>` tag.\n\n![data-driven-rspec](data-driven-rspec_github_gist.png)\n\n> (I've had to use a screen grab, here, because the Markdown engine I'm using\n> doesn't play well with `<script>` tags.  The script from GitHub normally lets\n> you search the code, and select and copy it.)"},{"body":"[This article](https://logicmag.io/clouds/agile-and-the-long-crisis-of-software/)\nnicely retraces the history of _software engineering_ and agile methodologies.\nIt speaks to the core of conflict between developers and management.  Developers\nwant the dignity and autonomy of human beings.  Management is beholden to the\nbottom line and wants control and predictability over the means of production.\nI have seen the means of Agile, like stand-ups and story points, be weaponized\nand used against the developers.  Often, it is done by middle managers who mean\nwell but are caught between the reality of software development and the\naspirations of management.  (And other times, it is done by sociopaths.)","date":"2022-05-08","pretty_date":"May 08, 2022"},{"pretty_date":"May 05, 2022","date":"2022-05-05","body":"Found two websites that analyze your site and tell you how to make it better:\n\n- [WebPageTest](https://webpagetest.org/)\n- [web.dev](https://web.dev/measure/) (uses Lighthouse)\n\nBoth give you a nice breakdown of what is happening on your page and some\nsuggestions on how to make it better."},{"body":"A (younger) co-worker compared me to\n[Richard Stallman](https://en.wikipedia.org/wiki/Richard_Stallman), today, as we\nwere discussing Emacs and I was using lots of shell commands to do a deployment.\nI should be flattered, I guess??  The man is a legend and software development\nowes a lot to him.  But, he also had his share of controversies, and he has\nsome, let us say, _strongly held opinions_.  I thought it was funny, especially\nin light of his portrayal by [xkcd](https://xkcd.com/225/) as a sword-wielding\ndefender of coders.","date":"2022-04-28","pretty_date":"April 28, 2022"},{"body":"A nice article digging into the roots of\n\"[make it work, make it right, make it fast](https://www.sicpers.info/2022/02/aphorism-considered-harmful/)\".","date":"2022-02-23","pretty_date":"February 23, 2022"},{"pretty_date":"February 17, 2022","date":"2022-02-17","body":"GitHub now lets us\n[create diagrams straight from within Markdown](https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/).\nThey are using [Mermaid](https://mermaid-js.github.io/mermaid/#/), a JavaScript\nlibrary that supports a number of diagrams.  Their UML class and sequence\ndiagram look a lot like [PlantUML](https://plantuml.com/).  They can also track\ncommits and branches to create \"Git graphs\"."},{"pretty_date":"February 12, 2022","date":"2022-02-12","body":"Dan North has fleshed out some of his thoughts on\n[CUPID](https://dannorth.net/2022/02/10/cupid-for-joyful-coding/) into a\nstandalone narrative.  He talks again about how using _properties_ instead of\n_principles_ leads to \"centered sets\" with a goal to move towards.  I've been\nusing a football analogy lately were there is not just one goal at the center,\nbut an entire endzone.  Anywhere in endzone is valid, and there are many ways to\nget in the endzone.  Specific players specialize in specific paths to the\nendzone, and sometimes they lose perspective that other paths can be just as\nvalid as theirs, depending on context and circumstances."},{"pretty_date":"February 10, 2022","date":"2022-02-10","body":"[Htmx](https://htmx.org/) is a new framework for frontend.  It does\neverything through HTML tags."},{"body":"An episode of\n[Agile for Humans](https://www.youtube.com/channel/UCZYWqpkc-YzAndAt90arxTA)\npodcast is dealing with\n[commitments in Scrum](https://youtu.be/-F18J3o_gO4?t=71).  They draw a\ndistinction between _commitment_ as dedication and _commitment_ as\nresponsibility.  And they are very clear that, in their view, Scrum teams should\nnever commit to scope.\n\nI have had experiences in the past where a team lead would pick stories from the\nproduct backlog to create the current sprint's sprint backlog, and treat it as a\ncommitment.  Whatever we decided to do, we had to deliver.\n\nI find it foolish to make such a commitment, when there are a large number of\nunknowns that might make you miss on some of these stories: they may be more\ncomplicated than they apprear, team members may be sick or otherwise\nunavailable, other work may infringe on the time you can dedicate to the sprint.\nMany of these things are beyond our control and may be completely unforeseen at\nthe beginning of the sprint.\n\nIt is more realistic to treat the spring backlog as aspirational.  We'll try our\nbest, but we cannot guarantee everything will get delivered.  Our commitment to\nthe scope is to the extent that we'll dedicate out time and resources to its\npursuit.  We cannot promise the final outcome, though.","date":"2022-02-08","pretty_date":"February 08, 2022"},{"pretty_date":"January 26, 2022","date":"2022-01-26","body":"Gee Paw Hill wrote a thread on Twitter on\n[the well of geek joy](https://twitter.com/GeePawHill/status/1478950180904972293).\nIn this thread, he talks about how the biggest problems facing software\nengineers in their career are not technical.  They have to do with how their\njob will slowly grind away at the joy they once found in programming.  To\ncounter this, they must find ways to stay connected (or reconnect) to the well\nof geek joy that set them on this path in the first place.  If not during office\nhours, then maybe after hours.\n\nUnrelated, but here is a nice article on some\n[bad patterns in exception handling](https://xp123.com/articles/code-smells-in-exceptions/).\nThe article targets Java, but I feel it is just as applicable in Ruby and maybe\nother languages with catchable exceptions too."},{"pretty_date":"January 21, 2022","date":"2022-01-21","body":"Someone at work circulated an HBR article on\n[phrases to remove from our vocabulary during meetings](https://hbr.org/2022/01/please-stop-using-these-phrases-in-meetings).\nWhile I disagree with pretty much everything the author said, one interesting\ntrick was to ask participants to write down their objectives while they wait for\neveryone to assemble.  These notes are private but can help ground them for the\nmeeting.\n\n_You're on mute_ is short and to the point and is immediately actionable by the\nrecipient.  The suggested: _If you're speaking, I can't hear you._ takes too\nlong and requires the receiver to diagnose what might be the problem; most of\nthe time, it's the mute button.\n\n_Building the plane while flying_ is not a recommendation to be reckless.  On\nthe contrary, it says to make sure you can keep sustaining flight as you are\nmaking changes.  I've heard it as: _changing the engines while flying_, which\nentails that you do them one at a time, using the remaining engines to keep you\naloft.  It also means you cannot do it on a single engine airplane.  The whole\nidea is that you want to make improvements, but you have to do it without\ndisrupting ongoing business."},{"body":"After recent problems with Log4J, James Shore wrote an interesting blog post on\n[the benefits of using open source software](https://www.jamesshore.com/v2/blog/2022/javascript-colors-and-the-corruption-of-buy-vs-build)\nversus the cost and risks it might entail.  Reminds me a little of the `leftpad`\ndebacle from a few years back.\n\nJames Shore has an interesting heuristic when deciding\nwhether to use an  open source library versus rolling up his own.\n\nThere seems to be a trend of open source authors who are removing their\ncontributions, lately, like the JavaScript version of\n[Faker](https://www.npmjs.com/package/faker).  Whe you put your code out there\nand tell people to use it, it's a very dick move to yank it back and suddenly\nbreak all these other projects.  Especially with something like NPM or Bundler\nor Maven where people repeatedly download libraries all the time to refresh\ntheir dependencies.  When a contributor yanks back their project, not only are\nthey messing up all those people who were depending on it, but they also\nreduce confidence in open source code from all other contributors, too.  They\ndamage the entire community.  If they want to get paid for the code they write,\nthey should create commercial licenses for it.  There are many outfits out there\nthat let individuals use their code for non-commercial purposes (tinkering,\npersonal projects, proof-of-concepts) and demand a licensing fee for commercial\nuse.  Most commercial companies want to comply and will pay the licensing fee as\npart of their compliance efforts.\n\nThis [YouTube video](https://youtu.be/ctkGh7RpgQ8) goes a little further into\nthe controversy around Faker in NPM, and our reliance on open source software.\nThe commenter advocates for a more level-headed approach when it comes to\nincluding dependencies and their upgrades.  It might be possible to inspect the\ndirect changes to a dependent library, but you will not be able to keep track of\nall transitive  dependencies, too.","date":"2022-01-16","pretty_date":"January 16, 2022"},{"pretty_date":"December 27, 2021","date":"2021-12-27","body":"Explored [`rails_event_store`](https://railseventstore.org/) a little more.  It\nseparates pub/sub features from event streaming features.  Handlers subscribe\nto one or more event _types_, or all events.  Publishers can publish events to\na _named stream_, but handlers only care about their types.  It is possible to\nreplay a stream.  It is also possible to put the same event on multiple streams\nat the same time.  This way, you can have a `users` stream of all user events\nand at the same time have a `user-1234` stream that is a subset of events\nrelating only to `User` with ID `1234`.  They even show how to use a handler\nto _link_ events to other streams as part of their handling."},{"body":"Discovered [`rails_event_store`](https://railseventstore.org/), yet another way\nto do event-based development in Ruby on Rails.  This time, the events are\npersisted to the database, so you can replay them, after a fashion.","date":"2021-11-29","pretty_date":"November 29, 2021"},{"body":"Discovered [Conduktor](https://www.conduktor.io/), a management UI for Kafka.  I\nlike that they have a free tier for developers, but I wish I didn't have to\nregister an account with them to do so.  It's nice of them to they let you use\nall paid features for the first fourteen days.  It connects to a locally running\nKafka setup just fine, but I wish it could find a way to connect to one running\nin Docker Compose without having to expose ports.","date":"2021-11-24","pretty_date":"November 24, 2021"},{"body":"First day at [Forge](https://forgeglobal.com/).","date":"2021-11-15","pretty_date":"November 15, 2021"},{"body":"Last day at [Gusto](https://gusto.com/).","date":"2021-10-15","pretty_date":"October 15, 2021"},{"pretty_date":"October 05, 2021","date":"2021-10-05","body":"Catching up on Dan North's [CUPID](https://youtu.be/knNaUSLhx-U) as a response\nto Uncle Bob's SOLID.  I like how he positions his properties against the SOLID\nprinciples.  Properties define a _center_ and a distance from that center, as\nopposed to principles that define an all-or-nothing _boundary_.  Of course, you\ndon't have choose only one approach.  They are not mutually exclusive."},{"pretty_date":"September 24, 2021","date":"2021-09-24","body":"[Sy Brand](https://www.youtube.com/watch?v=52h43quURsc&list=PLZ6bj_Y5hFUV1zamnL7NSNcR3nHeltP0a)\nhas a series of funny videos that explain computer science topics with their\ncats."},{"pretty_date":"August 18, 2021","date":"2021-08-18","body":"Some libraries for doing events in Ruby:\n\n- [Dry::Events](https://dry-rb.org/gems/dry-events)\n- [Ma](https://gitlab.com/kris.leech/ma)\n- [Wisper](https://github.com/krisleech/wisper) (replaced by Ma)"},{"body":"My office expects us to continue working from home until 2021-10-18, at the\nearliest.","date":"2021-08-09","pretty_date":"August 09, 2021"},{"body":"I always thought the median of a list of numbers had to be a member of the list\nitself.  If the list has an odd number of elements, it is easy: sort them and\ntake the middle one as the median.  But if the list has an even number of\nelements, things are more complicated: there are two values in the middle, so\nwhich one should I choose?\n\nToday, I was checking my understanding of medians when  I read two definitions\nthat went against what I had always believed.  Both\n[MathIsFun](https://www.mathsisfun.com/definitions/median.html) and\n[Wikipedia](https://en.wikipedia.org/wiki/Median) say to \n**average the two middle values** when the list has an even number of elements.\n\nOf course, that can only apply to lists of things that can be averaged.  A list\nof strings can be sorted alphabetically, but I cannot average the two middle\nvalues.  There, I'm back to my earlier problem of which one of the two do I\npick as the median.","date":"2021-06-17","pretty_date":"June 17, 2021"},{"body":"California is lifting restrictions regarding COVID-19, after fifteen months.  My\noffice expects us to continue working from home until 2021-09-13, at the\nearliest.","date":"2021-06-15","pretty_date":"June 15, 2021"},{"body":"I upgraded Docker Desktop from `3.3.3` to `3.4.0` and it wiped out all my Docker\nimages and their data, including my local MySQL and MongoDB images.  I didn't\nlose anything that I cannot recreate, but it is still annoying.  For a few\nthings that interest me, like Redis and RabbitMQ and Kafka, I have dedicated\n`docker-compose.yml` files.  But for these databases, I had created the image\nmanually some time ago.  I thought I had set them up to use mounted volumes for\nstorage, but I can't seem to find where these folders would have been; they are\nnot in the usual places.  Maybe I will have learned my lesson and I will set\nthem up under Docker Compose, this time.\n\nOn a separate note, I learned about [AsyncAPI](https://www.asyncapi.com/), a way\nto document event-based APIs, similar to what\n[OpenAPI](https://www.openapis.org/), formerly [Swagger](https://swagger.io/),\ndoes for REST endpoints.","pretty_date":"June 14, 2021","date":"2021-06-14"},{"date":"2021-05-06","pretty_date":"May 06, 2021","body":"I saw [this tweet](https://twitter.com/vaidehijoshi/status/1390080613223260163)\ntoday:\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">i realize now that being a manager of people at a company means existing at the intersection of humanity and capitalism</p>&mdash; Vaidehi Joshi (@vaidehijoshi) <a href=\"https://twitter.com/vaidehijoshi/status/1390080613223260163?ref_src=twsrc%5Etfw\">May 5, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nThe people who report to you need your humanity.  They want to be treated like\nhuman beings, each with their individual quirks and aspirations.  The company's\nmanagement wants you to treat your reports like resources, based on arbitrary\ncriteria that are meant to serve the company, irrespective of the individual."},{"pretty_date":"May 03, 2021","date":"2021-05-03","body":"I was talking about UML with a colleague the other day.  I was recommending they\nlearn the basics of it so they can use the notation when explaining or\ndocumenting their code.  It just so happened that this morning, I saw two\narticles on why we don't hear much about UML anymore:\n[Why UML \"Really\" Died](https://buttondown.email/hillelwayne/archive/why-uml-really-died)\nand\n[Can Formal Methods Succeed where UML Failed?](https://buttondown.email/hillelwayne/archive/can-formal-methods-succeed-where-uml-failed)\n\nI looked at the specification of UML 2.0 the other day and I was astounded by\nthe complexity I found.  I don't believe in doing code generation from a\ndiagram;  the amount of detail that is necessary is much better expressed in\ntextual code.  Plus, it is very hard to put diagrams under version control and\nthere is no good way to merge diffs, so we cannot collaborate or evolve a\ndiagram over time.  But there is still a lot of value in skething using UML.  It\nhelps my think better by raising the level of abstraction.  I find it useful\nwhen documenting a design for the same reason.  It lets us take in the forrest\nbefore we start looking at each tree.  This is definitely a case where 20% of\nthe notation takes us 80% of the way."},{"body":"I just realized that [Kafka](https://kafka.apache.org/)\n[originated at LinkedIn](https://blog.linkedin.com/2011/01/11/open-source-linkedin-kafka).\nIt was well after my time there, though.","date":"2021-05-01","pretty_date":"May 01, 2021"},{"pretty_date":"April 30, 2021","date":"2021-04-30","body":"As a fallout of the change in company culture at Basecamp, their employees are\nleaving in droves.  Twitter is filled with messages where people are announcing\nthey are leaving and explicitly mention the change in company policy.  Basecamp\nis not a large company.  I foresee some hard times ahead as the people left\nbehind scramble to pick up the work of those who left.  I guess there will be\nopportunities for those who've always dreamt of working with DHH and Jason Fried\nand still want to."},{"date":"2021-04-26","pretty_date":"April 26, 2021","body":"Jason Fried and DHH made a sensation today by\n[redefining the culture at Basecamp](https://world.hey.com/jason/changes-at-basecamp-7f32afc5).\nThey want employees to be able to focus on their work without feeling coerced\ninto the social reckoning that is happening everywhere nowadays.  Needless to\nsay, the Internet and the Twitterverse didn't take kindly to it.  They are being\naccused of sitting on their privilege.  They are being called insensitive to the\nrealities of minorities in their employees.  I've suspected for a long time that\nthese two \"mavericks\" read too much in their singular experience at Basecamp and\ndidn't really have a leg to stand on.  Now, a lot more people are catching on.\nWhile I can relate to their desire to just lose themselves into their work, the\nway they are going about it is insensitive.\n\nI did like Jason Fried's quote of Aldous Huxley about how even though we try to\nrelate and empathize with one another, we're still alone in our heads.\n\n> We live together, we act on, and react to, one another; but always and in all\n> circumstances we are by ourselves.  The martyrs go hand in hand into the\n> arena; they are crucified alone.  Embraced, the lovers desperately try to fuse\n> their insulated ecstasies into a single self-transcendence; in vain.  By its\n> very nature every embodied spirit is doomed to suffer and enjoy in solitude.\n> <footer>The Doors of Perception</footer>\n\nThough, from what I've gathered, it seems to come from one of Huxley's less\nthought out works.  Its contents came to him in psychedelic and exalted states."},{"body":"Someone brought up\n[this thread on burn out](https://twitter.com/Eeyun___/status/1379111649441878018).\nI find it interesting that it coincides with\n[this New York Times article](https://www.nytimes.com/2021/04/07/opinion/google-job-harassment.html)\nabout someone who has also had enough with the tech industry.\n\nSomeone also brought up\n[this other thread on exceptionalism](https://twitter.com/searls/status/1379461145799618564),\nwhere we think our own business is so special that it requires custom, bespoke\nsolutions.  We couldn't possibly rely on something that works for everyone \nelse.  What would be special in that?","date":"2021-04-07","pretty_date":"April 07, 2021"},{"pretty_date":"March 31, 2021","date":"2021-03-31","body":"First time I hear about [Wisper](https://github.com/krisleech/wisper), a Ruby\ngem for doing event-based development.\n"},{"date":"2021-03-27","pretty_date":"March 27, 2021","body":"[This blog post](https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/)\nextolls the virtues of mob programming (apparently now being called\n_ensemble_) over PR reviews, and even over pair programming."},{"body":"[This blog post](https://hyperbo.la/w/nemawashi/) talks about _nemawashi_, a\nJapanese term about consensus building.  The Ruby community sure loves using \nJapanese terms for its cultural constructs: _omakase_, etc.\n\nSomeone brought up Jim Wierich, his\n[Grand Unified Theory of Software Design](https://vimeo.com/10837903), and his\nideas about coupling & [connascence](https://en.wikipedia.org/wiki/Connascence):\nknowledge that one part of the system has about another part of the system.","date":"2021-03-22","pretty_date":"March 22, 2021"},{"body":"This [very funny meme](https://twitter.com/agile_memes/status/1372868915236278273)\nreally captures my feelings about [SAFe](https://scaledagileframework.com/).\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Save on consultancy fees with this secret: <a href=\"https://t.co/rGpcRUD6y9\">pic.twitter.com/rGpcRUD6y9</a></p>&mdash; I Can Haz Agile? (@agile_memes) <a href=\"https://twitter.com/agile_memes/status/1372868915236278273?ref_src=twsrc%5Etfw\">March 19, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>","date":"2021-03-19","pretty_date":"March 19, 2021"},{"body":"Dan North is mounting an assault on SOLID.  He wrote an interesting article\nwhere he [criticizes SOLID](https://dannorth.net/2021/03/16/cupid-the-back-story/),\ngoes back to the root problem that each rule addresses, and suggests different,\nless dogmatic ways to deal with these root problems.  It's a nice reminder that\nunderlying principles are more important than the specific rules.\n\nLately, it's become fashionable to argue against Unble Bob and many of his\nteachings.  I don't care for his politics, and I always thought his creed needed\na pinch of salt.  So, I'm curious what alternatives people are bringing up and\nwhat else I can learn from these.","pretty_date":"March 16, 2021","date":"2021-03-16"},{"pretty_date":"March 12, 2021","date":"2021-03-12","body":"Today marks one year of working from home because of the COVID-19 pandemic.  I\nwas worried, at first, about being at home all the time.  But, I am fortunate to\nhave a decent home office setup.  With Zoom, I have been able to maintain\ncontact with my colleagues.  I do miss the daily bike commute, though, even when\nit was raining."},{"pretty_date":"March 09, 2021","date":"2021-03-09","body":"Looking at [Racecar](https://github.com/zendesk/racecar#racecar) for writing\nKafka consumers in Rails apps.  I am used to having all consumers in the same\nprocess.  It makes development easier since I only launch one process and all\nconsumers become active.  But Racecar works differently.  You tell it which\nconsumer to run, [one at a time](https://github.com/zendesk/racecar/issues/21).\nIf my application has 20 different consumers, I need to run at least 20\ndifferent processes.  More if I want to separate on individual partitions.  I\nmight make sense for a production environment, but in development?!?  I guess it\nforces developers to use Docker Compose to run their local environment."},{"body":"The Atom feeds for my blog and reading lists send contents as Markdown.  I read\nthem on [Feedly](http://feedly.com), but it does not handle Markdown.  Worse, it\njust smooshes all the text together and I loose any paragraph structure.  It\nwould be better if the contents were HTML instead.  I generate these Atom feeds\nfrom CGI scripts written in Perl, so I need a Perl library to convert Markdown\nto HTML.  Maybe [`Text::Markdown`](https://metacpan.org/pod/Text::Markdown) or\n[`Text::MultiMarkdown`](https://metacpan.org/pod/Text::MultiMarkdown).","date":"2021-01-16","pretty_date":"January 16, 2021"},{"date":"2021-01-07","pretty_date":"January 07, 2021","body":"A nice series of articles that visually explain various functions in Ruby that\nare at the heart of a functional programming style of writing code:\n\n- [`reduce`](https://medium.com/@baweaver/reducing-enumerable-part-one-the-journey-begins-ddc1d4108490)\n- [`map`](https://medium.com/@baweaver/reducing-enumerable-part-two-chartreuse-master-of-map-7bc7fb3e6768)\n- [`select`](https://medium.com/@baweaver/reducing-enumerable-part-three-indigo-master-of-select-332d8eb0b0bd)\n- [`find`](https://medium.com/@baweaver/reducing-enumerable-part-four-violet-master-of-find-436864d1712f)\n- [`tally_by`](https://medium.com/@baweaver/reducing-enumerable-part-five-cerulean-master-of-tally-by-9d5f9e430bc2)\n- [and beyond](https://medium.com/@baweaver/reducing-enumerable-part-six-a-final-lesson-from-scarlet-425462e6a976)"},{"date":"2021-01-06","pretty_date":"January 06, 2021","body":"This article\n[combines DDD and event-driven design](https://medium.com/walmartglobaltech/did-domain-driven-design-help-me-to-ease-out-the-approach-towards-event-driven-architecture-b52e770ebcc).\nDDD helps tease out the nouns in the domain, and events help tease out the verbs\nin the domain.  Together, they can help identify boundaries in the domain.  The\nauthor highly recommends event storming, where stakeholders come together and\nroleplay the system.\n\nThis other article\n[provides isolation in Rails applications](https://medium.com/airtribe/enforcing-modularity-inside-a-rails-monolith-f856adb54e1d)\nusing Rails engines.  At work, we've been tring to break down a Rails monolith\nwith engines, but the friction they add to the development process is proving to\nbe too much.  I've been reading\n[_Component-Based Rails Applications_](Books.html#Component_Based_Rails_Applications)\nwhere the author advocates a lighter approach using unpacked gems, with less\ncomplexity but still quite a bit of friction.  Lately, we've been looking at\nusing Shopify's [Packwerk](https://github.com/Shopify/packwerk) as a cheap way\nto group chunks of code together and at the very least track the boundary\ntransgressions.  It is very low friction, and we can set future objectives\naround dealing with the transgressions progressively."},{"pretty_date":"December 21, 2020","date":"2020-12-21","body":"This [article](https://kevlinhenney.medium.com/out-of-control-97ed6efa2818) by\nKevlin Henney shows how _code_, _data_, and _config_ are all valuable aspects of\na program.  Each one guides how we think about a problem and can lead to\ndifferent insights.  It's not that one is always better than the others, but\nsometimes it can help to consider a different viewpoint.\n\nThe article also references Philippe Krutchen's \"4+1\" architecture.  I remember\nhim from the old days of RUP.  That was a blast from the past."},{"date":"2020-12-15","pretty_date":"December 15, 2020","body":"This [video](https://youtu.be/_sUvKvoK9I8) (in French) talks about geek culture,\nGamergate, and the concept of\n[hegemonic masculinity](https://en.wikipedia.org/wiki/Hegemonic_masculinity).\nIt posits that video games enabled a class that was left out from the mechanisms\nof power to subvert definitions of masculinity to create a new pathway to power\nin society.  I found it through\n[this episode](https://binge.audio/podcast/les-couilles-sur-la-table/des-ordis-des-souris-et-des-hommes)\nof a French feminist podcast that looks at multiple aspects of male identities.\n\nCompletely unrelated, I discovered [Cypress](https://www.cypress.io/), a Node\nframework for end-to-end testing.  It drives the browser to exercise an\napplication the same way a user would.  In this manner, it shares similarities\nwith [Selenium](https://en.wikipedia.org/wiki/Selenium_(software)) and\n[Capybara](https://en.wikipedia.org/wiki/Capybara_(software))."},{"body":"A while back, someone sent me\n[this article on the Outbox pattern](https://debezium.io/blog/2019/02/19/reliable-microservices-data-exchange-with-the-outbox-pattern/).\nThe basic idea is to do a double write to the database: one to write the actual\ndata and another to create a change message in an `outbox` table.  A separate\nthread or process monitors the `outbox` table and copies new messages to a\nmessage broker like Kafka or RabbitMQ.  It provides transactional\ncharacteristics; if the database transaction fails, both the written data and\nthe outbound message get removed together.\n\nIt is an interesting take on the Change Data Capture pattern from Newman's\n[_Monolith to Microservices_](Books.html#Monolith_to_Microservices).  This CDC\npattern attaches directly to the database's change log.  It is tightly coupled\nto the choice of database.\n\nThe article comes from [Debezium](https://debezium.io/), a CDC tool.  They use a\nneat trick where they create the message and delete it in the same transaction.\nThe table will remain empty, but the database's change log will have a record of\nthe `INSERT` statement.  It's interesting from the point of view of managing the\nsize of the table.  But, it doesn't help with retrying messages that fail being\nsent.  Either the CDC needs to track where it is in the log across a restart, or\nelse we can add columns in the `outbox` table to track how messages are being\nhandled.  Depending on how familiar you are with your database, it may be easier\nto monitor a database table than a database change log.","date":"2020-11-25","pretty_date":"November 25, 2020"},{"pretty_date":"November 20, 2020","date":"2020-11-20","body":"I found an interesting feature of\n[Apollo's GraphQL federation](https://www.apollographql.com/docs/federation/).\nOne service can extend a type to add a field that is computed from other fields\non that type, where these other fields come from outside the service.  I noticed\nit while I was looking at the\n[code samples for federation in Ruby](https://github.com/Gusto/apollo-federation-ruby/blob/401ab8eadb4acf1a612c91432f5044c0dbfe6da2/example/inventory.rb#L7-L10).\n\nAs an example, I created a `users` service that has a user's name and email\naddress, and a `signatures` service that adds a formated signature to the `User`\ntype.  The `signatures` service doesn't have data of its own; it uses the name\nand email address it obtains from the `users` service.\n\nThere are some limitations.  The source fields can only come from the source\nservice, the one that resolves `@key` for that type.  And I haven't found a way\nto have source fields of complex types.  I've only been able to make it work for\nfields of scalar types: strings and integers."},{"body":"I came upon this quote, which is attributed to Wernher von Braun, while I was\nwatching [a video on measures and calibration](https://youtu.be/_k9egfWvb7Y):\n\n> One test result is worth one thousand expert opinions.","date":"2020-11-14","pretty_date":"November 14, 2020"},{"date":"2020-09-30","pretty_date":"September 30, 2020","body":"First time I see MERN (MongoDB, Express, React, Node.js).  There is also a MEVN\nout there for [Vue.js](https://vuejs.org/)."},{"body":"[IDEALS](https://www.infoq.com/articles/microservices-design-ideals/?utm_source=email&utm_medium=editorial&utm_campaign=ArchitectNL&utm_content=09252020)\nis the new SOLID, but this time for the world of microservices.  The principles\nof [Clean Code](Books.html#Clean_Code) have been attracting quite\n[a bit of criticism](https://qntm.org/clean), as of late.  I kinda like many of\nthe ideas behind \"clean code\", but I filter them based on circumstances.","date":"2020-09-26","pretty_date":"September 26, 2020"},{"pretty_date":"September 06, 2020","date":"2020-09-06","body":"Finished migrating all my content to Markdown.  The Book Reviews React app now\nuses [`react-markdown`](https://www.npmjs.com/package/react-markdown) to render\nthe book reviews.  The Journal AngularJS app uses\n[Showdown](https://www.npmjs.com/package/showdown) to render the blog.\n\nAll that was left were the Atom feeds.  They publish content in XHTML, so I\nwould have to either find a way to convert Markdown to XHTML, or else, find a\nway to embed the Markdown in the Atom feeds.  The\n[Atom specification](https://tools.ietf.org/html/rfc4287#section-4.1.3) mentions\nvarious types of contents, and it includes all the `text/*` MIME types.  If\naggregators can understand `text/markdown`, I can use that to embed the Markdown\ndirectly into the feed.  It may not be as _structured_ as using XHTML, but it\nmight be a lot easier.\n\nI no longer need the bespoke wiki files."},{"date":"2020-09-05","pretty_date":"September 05, 2020","body":"Looking at what it would take to migrate to Markdown, again.\n\nI looked at [Showdown](https://www.npmjs.com/package/showdown) (290k weekly\ndownloads).  I have a proof-of-concept with an\n[AngularJS](https://angularjs.org/) app.  The documentation talks about using\nit with [Angular](https://angular.io/), but my Book Reviews app is in\n[React](https://reactjs.org/).  I guess it's simple enough to use that I could\nwork it into my React app.\n\nOr, I could use\n[`react-markdown`](https://www.npmjs.com/package/react-markdown) instead (523k\nweekly downloads).  It is made for React and it is even simpler to use.\n\nI might have to make do with using Showdown on the blog, which is still in\nAngularJS, and `react-markdown` with the reading lists.  There is a small risk\nthat their Markdown implementations will diverge on the fringes, but I doubt it\nwill impact me.  What I need is pretty minimal.\n\nI only converted the files for `/Books.html` and `/BooksBackLog.html` first,\nfollowed by  `/SoftwareEngineering/Books.html` and\n`/SoftwareEngineering/BooksBackLog.html`.  I used a somewhat simple Perl script\nto convert these files.\n\nI can only convert the data for `/SoftwareEngineering/Journal.html`\nafter I've upgraded its Angular app to use Markdown too."},{"pretty_date":"August 24, 2020","date":"2020-08-24","body":"Migrated my [mLab](https://mlab.com/) MongoDB sample databases to\n[MongoDB Atlas](https://www.mongodb.com/cloud/atlas).  I was glad to see there\nwas a free tier there too, though it was slightly more involved to setup.\nMongoDB Atlas makes things like clusters and availability zones more explicit,\nso you have to make some choices even for the simplest of setups.\n\nI tried to set them up in a West Coast datacenter, but in order to use their\nmigration tool to move my data from mLab, they had to be in the same\navailability zone.  So for now, my sample databases are still on the East Coast."},{"body":"Came upon the term _descriptive feedback_.\n\nI've always thought of critique and criticism as encompassing both negative and\npositive opinions.  An artistic critique could be just as much about why someone\nliked a piece of art as it could be about why they didn't like it.  For any\ncomplex experience, there are bound to be parts that resonate with you and you\nthought were well done, and parts that didn't and you thought could have been\ndifferent.\n\nBut, at least in American English, it is usually reserved for the negative\nopinions only.  I remember Harry Connick Jr. being a judge on _American  Idol_\nsaying how he had liked a specific performance and therefore he didn't want to\ncritique it.  I was shocked that he would not elaborate about how that\nperformance had been so successful.  It was a missed opportunity to provide\nfeedback to the artist, to point out what specifically had made the performance\nwork so well.\n\nMaybe I can lean on the term _descriptive feedback_ as a better descriptor of\nhaving a more measured evaluation of some action or product and dig into the\ndetails of what works and what maybe doesn't work.","date":"2020-08-16","pretty_date":"August 16, 2020"},{"pretty_date":"July 13, 2020","date":"2020-07-13","body":"The new [Micronaut Launch](https://launch.micronaut.io/) site lets you create\nMicronaut projects without having to install Micronaut a priori.  It works\nsimilar to the [Grails Application Forge](http://start.grails.org/).  You pick\nall your configuration options and it gives you a ZIP file with the initial app\nthat the framework would have generated.\n\nYou can use `curl` (or [HTTPie](https://httpie.org/)) to call it from a\nscript.\n\nI have a handful of starter Micronaut apps that I use to try out various\nfeatures (GORM, Data, RabbitMQ).  I try to upgrade them every time Micronaut\ndeploys a new version.  Each time, I'll create a blank app with the old version,\na blank app  with the new version, and use `diff` to see what's changed.  I try\nmy best to apply the changes to my starter apps.  I have scripts to automate the\nmore tedious parts, but they require that I have both versions of Micronaut\ninstalled.  With Micronaut Launch, I could simply download the blank apps\ninstead of creating them locally.\n\nOne current limitation is that Micronaut Launch only does version 2.0 of\nMicronaut.  I took a quick look at the Swagger docs but I couldn't find a way to\npass in the target version of Micronaut."},{"date":"2020-04-24","pretty_date":"April 24, 2020","body":"I tried different ways to render the Ruby code snippet from yesterday.  Once\nwith [Carbon](https://carbon.now.sh/) and another way with a\n[GitHub Gist](https://gist.github.com/).\n\nHere is the result with Carbon:\n\n![data-driven-rspec](data-driven-rspec_carbon.png)\n\nIt looks nice, but it's an image.  That means it will not match keyword searches\nand people cannot cut-and-paste it into their code.\n\nI tried to embed the\n[Gist](https://gist.github.com/jeantessier/c514cbb2071bf7badbc6356fc4210313)\ninto this blog, but this is done with a `<script>` tag.  This blog happens\nto be a small [AngularJS](https://angularjs.org/) app that sanitizes data, so\nit scrubs out the tag to prevent XSS exploits.\n\n    <script src=\"https://gist.github.com/jeantessier/c514cbb2071bf7badbc6356fc4210313.js\"></script>\n\n<script src=\"https://gist.github.com/jeantessier/c514cbb2071bf7badbc6356fc4210313.js\"></script>\n\nI looked for ways to mark the blog content as trusted HTML, or even to turn off\nsanitization altogether, but no success.  This is AngularJS, old technology.  I\ncould rewrite the app using [Angular](https://angular.io/).  Maybe the\nsanitization controls are easier to operate there.  And, there is always\n[React](https://reactjs.org/)."},{"body":"I found a way to do data-driven tests in [RSpec](http://rspec.info/).  I was\ndoing a code review for a colleague when I noticed a series of separate tests\nfor various inputs: a string, an integer, a float, a negative value, etc.  My\ncolleague could rewrite their tests much more succinctly with a table showing\nvarious inputs and their expected results.\n\n```ruby\nRSpec.describe SomeClassUnderTest do\n    describe '#some_method_under_test' do\n        subject { described_class.new.some_method_under_test input_value }\n        \n        [\n            [ 'a string', '123', '123.00' ],\n            [ 'an integer', 123, '123.00' ],\n            [ 'a float', 123.0, '123.00' ],\n            [ 'a negative number', -123, '-123.00' ],\n            [ 'nil', nil, 'nil' ],\n        ].each do |variation, input, expected_output|\n            describe 'when the input is #{variation}' do\n                let(:input_value) { input }\n                it { is_expected.to eq(expected_output) }\n            end\n        end\n        \n        describe 'when the input is invalid' do\n            let(:input_value) { 'invalid' }\n            it { expect { subject }.to raise_error }\n        end\n    end\nend\n```\n\nI have to remind myself that the Ruby interpreter is running while Ruby is\nparsing its own program.  This gives a lot of opportunities for the program to\ngenerate itself.  Sounds dangerous, but it is also _very_ powerful.\n\nI drew inspiration from\n[an old Stack Overflow article](https://stackoverflow.com/questions/8754582/best-way-to-organize-tests-in-rspec-that-have-a-combinations-of-factor).\nIt also has another example that uses `shared_examples`.","date":"2020-04-23","pretty_date":"April 23, 2020"},{"body":"I'm working on a piece of code in a Node Express server (in TypeScript) that\ncalls a gRPC service in the middle of processing requests.  The gRPC-generated\nclient code is asynchronous and uses callbacks.  So, I used `promisify` to make\nthe callbacks play well with `async/await`, and to ease error handling.\n\nThen, I tried writing some tests using [Jest](https://jestjs.io/).  It has\nvery nice support for data-driven tests via its\n[`it.each`](https://jestjs.io/docs/en/api#testeachtablename-fn-timeout)\nmethod.\n\nMocking the gRPC calls for the unit tests, through `promisify`, was quite a\nchallenge to get right.  In the end, less proved to be more.  Instead of\nbuilding a mocked version of `promisify` that return a mocked version of the\ngRPC classes, I only needed a mocked version of `promisify` that returns\nsomething that behaves like the gRPC: a simple stub.","pretty_date":"April 16, 2020","date":"2020-04-16"},{"date":"2020-03-20","pretty_date":"March 20, 2020","body":"First time I heard about\n[Data Distribution Service](https://en.wikipedia.org/wiki/Data_Distribution_Service)\n(DDS) as an alternative to doing messaging with other technologies, like\n[RabbitMQ](https://www.rabbitmq.com/).  DDS comes from OMG, the same people\nwho gave us\n[CORBA](https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture),\nback in the 90's, and somewhat builds on top of CORBA-related artifacts.  CORBA\nwas overly complex and its binary aspect made it very difficult to debug.  I\nsuspect that DDS suffers from the same ailments.\n\nHere is a [slide deck](https://docs.huihoo.com/opensplice/DDS-vs-AMQP.pdf)\nthat compares DDS with AMQP (the model and protocol behind RabbitMQ)."},{"body":"Started working from home because of the COVID-19 pandemic.  I was not worried\nabout commuting by train and being in a large office, but the State of\nCalifornia has been posting recommendations and my employer highly recommended\nwe all start working from home.","date":"2020-03-12","pretty_date":"March 12, 2020"},{"date":"2020-02-12","pretty_date":"February 12, 2020","body":"I'm writing a Ruby on Rails class that generates [JWTs](https://jwt.io/) based\non some business logic.  I created some helper methods to deal with the actual\nJWT generation (using the `json-jwt` gem) and I put these methods in a helper\nclass.  I used constructor injection to pass the helper class in my code.\n\nA colleague is arguing that since my helper methods are all stateless, I could\nhave made them class methods instead.  This way, the caller wouldn't have to\nhold on to an instance of the helper class.  It would just call the class\nmethods directly.\n\nMy main objection had to do with testability.  I have been programming in Java\nfor a long time.  And in Java, it is very difficult to mock class methods.  With\ninstance methods on a helper object, I can inject a mock of the helper object\nand program the method that's being called.  My tests can inject a test double\nto simulate the production of JWTs without having to bother with all the details\nthat are not relevant to the test at hand.\n\nCalling class methods also rubs against my perception of object-oriented systems\nas collections of objects that exchange messages amongst them.  The _class_ is\nan abstract concept, constructs, to describe the participants in the system.\nThey are not, technically speaking, participants themselves. See\n[Alan Kay on Messaging](https://wiki.c2.com/?AlanKayOnMessaging)\n\nMore often than not, statics are globals in disguise.  See the Singleton Pattern\nand [why they are bad](https://wiki.c2.com/?SingletonsAreEvil).\n\nBut the Ruby language is so malleable that is is easy for tests to replace even\na class method with their own stub.  Using them doesn't quite feel like passing\nmessages between participating objects, but at least mocking them is not an\nundue burden on the unit tests."},{"date":"2020-02-06","pretty_date":"February 06, 2020","body":"Today was a good day.  I drew a quick diagram on the whiteboard to illustrate\na [gRPC](https://grpc.io/) concept and received lots of praise for it.\nDoesn't look like much, but it felt good nonetheless."},{"date":"2019-12-21","pretty_date":"December 21, 2019","body":"[Gall's Law](https://en.wikipedia.org/wiki/John_Gall_(author)#Gall's_law):\n\n> A complex system that works is invariably found to have evolved from a simple\n> system that worked.  A complex system designed from scratch never works and\n> cannot be patched up to make it work.  You have to start over with a working\n> simple system."},{"date":"2019-12-17","pretty_date":"December 17, 2019","body":"Built a\n[sample Rails app](https://github.com/jeantessier/rails-cancancan-example) to\nexplore how to do authorization in Rails.  A popular gem for doing this is\n[`CanCanCan`](https://github.com/CanCanCommunity/cancancan) and it is what we\nare using at work.\n\nIn Grails, we use Spring Security Core, which assigns roles and lets you\nspecify, in each controller and view, which actions are permitted and which view\nelements are visible.  `CanCanCan` does it differently.  It puts all these\ncontrols in a centralized location.  It is also finer grained in that you can\napply it to domain objects, or models, too.  This gets injected into database\nqueries to filter result sets to what the user is allowed to see."},{"pretty_date":"December 12, 2019","date":"2019-12-12","body":"Built a\n[sample federated GraphQL schema](https://github.com/jeantessier/united-federation-of-jean).\nI wanted to test what would happen if the same field name was used in multiple\nunderlying servers.  The short answer appears to be that Apollo's implementation\nof federation does not allow it."},{"pretty_date":"December 09, 2019","date":"2019-12-09","body":"The tools for developing [GraphQL](https://graphql.org/) APIs are not quite\nthere, yet.  I'm working with a GraphQL server and it is quite difficult to\nsend it simple requests to try things out.  With REST services, we'd used `curl`\ninitially, until [HTTPie](https://httpie.org/) and\n[Postman](https://www.postman.com/) came along and made it much easier to call\nREST endpoints.\n\nBut now, with GraphQL, things are complicated again.  Between CSRF and\nauthentication, most servers will deny any queries that doesn't have its\ncredentials just right.  REST tools have shortcuts for formatting parameters\ninto JSON payloads.  They are of little help when it comes to GraphQL.\n\nSome GraphQL platforms expose their own tool, like\n[GraphiQL](https://www.electronjs.org/apps/graphiql) and\n[Playground](https://github.com/prisma-labs/graphql-playground).  They run in\nthe browser and are served side-by-side with the application itself.  This way,\nthey can take advantage of the app's authentication mechanisms.  They are useful\nwhen debugging an application under development, but much less so when we're\ntrying to figure out the API of a third-party.  If they don't provide you with a\nbuilt-in API tool, like GraphiQL or Playground or an equivalent, you're out of\nluck.  The [`graphql`](https://rubygems.org/gems/graphql) gem in Rails bundles\nGraphiQL with it.  The\n[`apollo-server`](https://www.npmjs.com/package/apollo-server) package in Node\nbundles Playground.  This\n[article on calling GraphQL endpoints](https://blog.apollographql.com/4-simple-ways-to-call-a-graphql-api-a6807bcdb355)\ncompares GraphiQL to `curl` to straight JavaScript code."},{"pretty_date":"December 06, 2019","date":"2019-12-06","body":"Found [another article](https://chris.beams.io/posts/git-commit/) that talks\nabout crafting Git commit messages.  This one is more about specific details,\nlike line length and punctuation.  But it's still a nice reminder to mind those\nwho will read your commit messages."},{"body":"Managed to build a [React](https://reactjs.org/) equivalent to the\n[AngularJS](https://angularjs.org/) app I use to publish my book reviews.\nThis one even says when it is loading data.","date":"2019-11-29","pretty_date":"November 29, 2019"},{"date":"2019-11-23","pretty_date":"November 23, 2019","body":"Found a very interesting article by Paul Grapham on\n[a theory of genius](http://paulgraham.com/genius.html).  He reflects on how\nthe distributions of talent and the distribution of genius do not match.  He\nthen submits a hypothesis as to why that is.  \"People who've done great work\",\nthat exhibit genius, also have \"an obsessive interest in a particular topic.\"\nNow, many people have obsessive interests in particular topics, but not all of\nthem are geniuses.\n\nMy key takeaways:\n\n1. You cannot tell ahead of time which paths are promising and which ones aren't.\n1. The odds that an obsessive interest in a particular topic will lead to a breakthrough are pretty low.\n1. \"It's more promising if you're creating something, rather than just consuming something someone else creates.\"\n\nFor Paul Graham, \"working to understand the natural world counts as creating\nrather than consuming.\"  So, Darwin and Newton were on the right track."},{"body":"[Martin Fowler](MartinFowler.html) published\n[an article on waterfall software development](https://martinfowler.com/bliki/WaterfallProcess.html).\nHe tries really hard to find the positive in the waterfall process and not\ndismiss it outright.  The\n[comments on Twitter](https://twitter.com/martinfowler/status/1194649511609733129)\nare not so kind.  One commenter brought up a memory of RUP, to which another\ncommenter added Rational Rose nightmares.  In the 90's, I was looking hard into\nRUP and I was an avid user of Rational Rose.  I might have outgrown these\nchildish things, but I can still find a flicker of them in\n[SAFe](https://scaledagileframework.com/).","pretty_date":"November 13, 2019","date":"2019-11-13"},{"body":"I learned much more than I ever cared to know about the `file(1)` Unix command.\n\n[This article](https://fatbusinessman.com/2019/my-favourite-git-commit) talks\nabout crafting Git commit messages, but I lost myself in the example that they\ngive.  The author of that commit was using `find(1)` and `file(1)` to make sure\nall their files were good.  I applied the same treatment to my website and found\nsome interesting tidbits.  Some files had non-ASCII characters.  One text file\ncame up as C++ because one line started with the word \"class\".  Some text files\ncame up as HTML because they had snippets in them.  I got to read up on how\n`file(1)` uses _magic_ files to try and guess the types of files.  And I also\ngot to search for ways to coax it to the correct answer, sometimes.","date":"2019-11-08","pretty_date":"November 08, 2019"},{"pretty_date":"October 21, 2019","date":"2019-10-21","body":"First day at [Gusto](https://gusto.com/).  I finally got myself into a Ruby on\nRails shop."},{"body":"I managed to fix my\n[`micronaut-data`](https://github.com/micronaut-projects/micronaut-data)\nsample application.  First, I need to specify that it is a Groovy application.\nThe documentation mentions a dependency in `build.gradle` that looks like:\n\n    annotationProcessor \"io.micronaut.data:micronaut-data-processor:1.0.0.M1\"\n\nBut this dependency is for Java applications.  It is immediately followed by an\ninformation box that talks about how this dependency needs to be rewritten in\nKotlin or Groovy  applications.  I had skipped the information box upon first\nreading.  Once I changed the dependency to the Groovy-friendly:\n\n    compileOnly \"io.micronaut.data:micronaut-data-processor:1.0.0.M1\"\n\nEverything fell into place and now the application works just fine.","date":"2019-09-22","pretty_date":"September 22, 2019"},{"body":"Trying to understand [Hibernate JPA](https://hibernate.org/orm/).  There sure\nis a lot of boilerplate code.  I found\n[examples in Java](https://www.javahelps.com/2015/08/jpa-hello-world-using-hibernate.html),\nbut they require a lot of code to use the entities defined with Hibernate.\n\nI'm trying to get a sample application working with\n[`micronaut-data`](https://github.com/micronaut-projects/micronaut-data).  It\ncan either use a JPA configuration or straight SQL, without Hibernate.  I'm\ntrying to figure out which would be easiest to use, but I can't quite get them\nto work right.  I picked up some JPA configuration from the `hibernate-jpa`\nfeature in Micronaut, but I'm still getting some errors:\n\n> _Interface method reference: `CrudRepository.findAll()`, is in an indirect\n> superinterface_\n\nthat I can't quite shake off.","date":"2019-09-11","pretty_date":"September 11, 2019"},{"body":"I was reading\n[an article on cultural fit](https://hackernoon.com/not-a-cultural-fit-bf398bc0e99b)\nwhere they talked about the gig economy and how \"individual employees [...]\nshould think of themselves as businesses.\"  This brought to my mind Reid\nHoffman's [The Start-Up of You](http://amzn.com/0307888908).  But the article\nshowed that the idea went back much farther, mentioning the\n[Mount Pelerin Society](https://en.wikipedia.org/wiki/Mont_Pelerin_Society),\na liberal group of philosophers that started in 1947.  An interesting discovery.","date":"2019-08-15","pretty_date":"August 15, 2019"},{"body":"Micronaut Predator gets renamed to\n[Micronaut Data](https://github.com/micronaut-projects/micronaut-data).  Read\nthe [full announcement.](https://objectcomputing.com/news/2019/07/26/micronaut-predator-renamed-micronaut-data)","pretty_date":"July 26, 2019","date":"2019-07-26"},{"pretty_date":"July 25, 2019","date":"2019-07-25","body":"More information on\n[Micronaut + JWT](https://guides.micronaut.io/micronaut-token-propagation/guide/index.html).\nIt looks like Micronaut can read JWTs right out of the box."},{"body":"[Nerdstagram](http://nerdstagram.com/)\n\n> [**shanselman**](https://twitter.com/shanselman)  \n> I explained in several paragraphs what @github is to my niece.  \n> Niece: \"So, it's Nerdstagram?\"  \n> Me: \"That's fair.\"  \n> <span style=\"font-size: smaller\">2:30 PM - 21 Jul 2019</span>\n\nHe then proceeded to buy the domain `nerdstagram.com` and point it to\n[GitHub](https://github.com/).  Now, you can take all your GitHub links and\nhave them be Nerdstagram links too!!","date":"2019-07-22","pretty_date":"July 22, 2019"},{"body":"The folks who gave us [Grails](http://grails.org/) and\n[Micronaut](http://micronaut.io) are at it again.  This time, it is a project\ncalled [Predator](https://github.com/micronaut-projects/micronaut-predator),\nfor _pre-compiled data layer_.  If provides a lot of the magic that you can get\nfrom [GORM](http://gorm.grails.org/), but whereas GORM operates at runtime,\nPredator does its magic at compile-time.  It is particularly well suited for\nMicronaut, to keep the executable small and the application start time fast.","pretty_date":"July 18, 2019","date":"2019-07-18"},{"pretty_date":"July 15, 2019","date":"2019-07-15","body":"I stumbled upon\n[a one year old Medium article](https://medium.com/@jackskeels/will-management-succeed-at-killing-agile-7126e8d16843)\non agile software development.  The author, Jack Skeels, describes his journey\nof discovery of the principles behind the initial agile methodologies and what\nhe calls\n[Humanist Agile](https://medium.com/@jackskeels/the-humanist-agile-manifesto-1f9000d00fd7).\nI like how his solution is to massively empower teams by removing management.\nIt is the complete opposite of Taylor's Scientific Management and\n_plan-and-control_ hierarchies.  I would not have believed that it could work if\nI had not been exposed to a similar approach at Google, years ago."},{"pretty_date":"July 13, 2019","date":"2019-07-13","body":"There have been competing threads on Twitter about \"10x engineers\", the\nsupposedly superhuman developers who are so much better than _ordinary_ ones.\n\n[One thread is so bad](https://twitter.com/skirani/status/1149302828420067328),\nI don't know if the author was being sarcastic or if they really believes what\nthey said.  What I do know is that there are people out there who agree with\ntheir toxic description of 10x engineers.  The author lists a bunch of traits of\nassholes who can't be bothered to work with other people.  I wouldn't want to\nbe anywhere near the people they describe.\n\n[Another thread](https://twitter.com/jaymaymo/status/1149893214037368837) is\nmuch more in line with what I want to see in my fellow software engineers.  The\ndesired traits are all about collaborating with others and uplifting everyone.\nThat is what I aspire to be.  Now, I try to be helpful and compassionate, but\nyou also need an environment where such attitudes are welcomed and supported.\nIf everyone has large egos and cannot afford to look weak, it will be very\ndifficult to build a team spirit where everyone helps each other.\n\n[And yet another thread](https://twitter.com/onealexharms/status/1150180506056744961)\nwas also very positive, but focused more on how 10x engineers have a lot of\nknowledge and experience from read the docs and learning all they can about the\ntools they are using."},{"pretty_date":"July 11, 2019","date":"2019-07-11","body":"Reading up on [Fastify](https://www.fastify.io/) as a replacement for the\n[Express](http://expressjs.com/) framework.  Some people say Fastify is a more\nmodern web application framework that makes use of the latest JavaScript\nlanguage additions.  I also found a nice\n[cheatsheet](https://devhints.io/fastify)."},{"body":"I was watching a video on [SQL vs. NoSQL](https://youtu.be/ZS_kXvOeQ5Y) and\nthe presenter kept talking about standalone collections in MongoDB.  In his\nexample, there is a `Users` collection where each document describes a user\nfully.  There is also an `Orders` collection where each order has a user.  I'm\nused to simply having the user's ID in that `user` field and let the calling\ncode merge the order and user documents.  Like you'd do in a relational database\nwith a `JOIN` statement.  But in their example, `user` field was an actual\nsubset of the matching user document, with just the parts that are needed when\ndealing with an order.\n\nFor example, if the user is:\n\n    {\n        \"id\": 1234,\n        \"name\": \"Jean Tessier\",\n        \"username\": \"jeantessier\",\n        \"password\": \"xxxxxxxxxxxx\"\n    }\n\nThe order might not need things like `username` and `password`, so it would\nlook like:\n\n    {\n        \"id\": 5678,\n        \"user\": {\n            \"id\": 1234,\n            \"name\": \"Jean Tessier\"\n        },\n        // other stuff related to the order\n    }\n\nThis way, when I load an order, I don't need to merge it with anything else.\nThis is great for read-intensive applications.\n\nOf course, if the user changes their name, now you have to find all of that\nuser's orders and update them.  This is not so great for write-intensive\napplications.\n\nI'm used to thinking in terms of normalized data.  But this is an interesting\napplication of denormalized data for read-intensive applications.","date":"2019-06-07","pretty_date":"June 07, 2019"},{"date":"2019-05-08","pretty_date":"May 08, 2019","body":"I found out about [Redis Pub/Sub](https://redis.io/topics/pubsub).  So far,\nI've been doing all my publish-subscribe work using RabbitMQ, which has a very\nrich feature set.  It's nice to see a different vision that is more minimalist.\nIn RabbitMQ, you can setup queues so they accumulate messages even when there\nare no active subscribers.  It looks to me that you cannot do the same in Redis;\nif the subscriber is not there when the message is published, they don't\nreceive it.\n\nSome publish-subscribe technologies I've played with:\n\n- [RabbitMQ](https://www.rabbitmq.com/)\n- [ActiveMQ](http://activemq.apache.org/)\n- [Amazon SNS](https://aws.amazon.com/sns/)\n\nI like the decoupling between senders and receivers that I get when I use\npublish-subscribe.  Seems much easier to me than relying on a service locator."},{"body":"I've been tinkering with Node as part of my\n[book reviews](https://github.com/jeantessier/book-reviews) project.  I can\nnow cover the following needs:\n\n- Node\n- MongoDB\n- REST\n- JSON\n- JWT\n\nI'm still missing the frontend and unit tests.  I read something about Mocha and\nChai and Sinon and `sinon-mongoose` to do BDD, but I'm still struggling to make\nthem all work together.  And I know there is an AMQP plugin, but I haven't tried\nit out, yet.\n\nI'm also looking at the Micronaut angle, especially for a microservice-based\nsolution.  I have separate bits of code for the following combinations:\n\n- Micronaut + GORM\n- Micronaut + MongoDB\n- Micronaut + JWT\n- Micronaut + RabbitMQ\n\nBut I haven't tried to put them all together at once.  The MongoDB integration\nis still struggling to put UUIDs in JSON payloads, so I'll probably have to stay\nwith MySQL for the time being.","pretty_date":"March 26, 2019","date":"2019-03-26"},{"pretty_date":"February 16, 2019","date":"2019-02-16","body":"Took another swing at making [Micronaut](http://micronaut.io) and\n[RabbitMQ](https://www.rabbitmq.com/) work together.  Now, there is an\nexperimental integration named `micronaut-rabbitmq` to help out.  The project\ncreator doesn't put a version number on the `micronaut-rabbitmq` and because\nonly a milestone version is currently on Maven, you have to put its version\nnumber explicitly in your `build.gradle` file.\n\nIt is not quite as absolutely awesome as the `rabbitmq-native` plugin for\n[Grails](http://grails.org/); it's missing the super easy declarative topic\nand queue management, it relies heavily on annotations.\n\nMy trivial integration is on GitHub at\n[`jeantessier/micronaut-rabbitmq-test`](https://github.com/jeantessier/micronaut-rabbitmq-test)."},{"body":"New term going around: [JAMstack](https://cobwwweb.com/wtf-is-jamstack).  It\nstands for JavaScript, APIs, and Markdown.  It describes a philosophy for\nbuilding _static_ websites, but using modern site-building tools.  For example:\n\n- [Jekyll](https://jekyllrb.com/) for building from Markdown\n- [Forestry](https://forestry.io/) for CMS to create contents\n- [Netlify](https://www.netlify.com/) for refreshing the website after commits\n\nYou can create content using Markdown, keep it under source control using a Git\nrepository hosted somewhere, and trigger automatic rebuilds when you commit your\nchanges.\n\nThe toolset is getting better integrated.  I used to balk at the amount of setup\nthat I would need to do.  But newer solutions are taking up more and more of\nthat hassle.  Maybe one day I'll finally move off of my custom wiki notation and\nbe able to just do Markdown instead.","date":"2019-01-27","pretty_date":"January 27, 2019"},{"pretty_date":"January 16, 2019","date":"2019-01-16","body":"I'm in the middle of re-reading\n[_Refactoring_](Books.html#Refactoring_Second_Edition) and Martin Fowler\nmentions [Language Servers](https://langserver.org/).  It is a new technology\nto help tools parse various languages by moving the language analysis to a\ntool-neutral server.  It is maintained by the people at\n[Sourcegraph](https://sourcegraph.com/), a browser-based code navigation tool."},{"body":"Each time a new version of [Grails](http://grails.org/) has been coming out,\nI would go through my projects and create an empty Grails application at the\nproject's current version and another empty application at Grails latest\nversion.  I would then compare both empty applications and apply the differences\nto my project to \"upgrade\" it to the latest Grails version.  It is a little\nlabor intensive.\n\nI've now found the\n[Grails Profiles Versions](https://github.com/grails-profiles-versions) GitHub\naccount that does it all for me.  It has separate projects for each Grails\nprofile, like\n[`rest-api`](https://github.com/grails-profiles-versions/rest-api-versions) or\n[`web`](https://github.com/grails-profiles-versions/web-versions).  Just\nplug in the versions to compare as tags, and off you go.  All in the beautiful\nGitHub UI.  It's like magic!","pretty_date":"January 15, 2019","date":"2019-01-15"},{"date":"2019-01-08","pretty_date":"January 08, 2019","body":"Came upon an article on Medium about\n[someone trying out management](https://medium.com/gusto-engineering/i-didnt-want-to-be-a-manager-anymore-and-the-world-didn-t-end-e92427fe8b55)\nand deciding on a career outside of management.  The bits about management had\nechoes of [_Radical Candor_](../Books.html#Radical_Candor), and I liked how\nthe author also took time to describe contributors and technical leaders as\nhighly valuable career choices too.\n\nHowever, I didn't like how the author saw the manager as this super person, who\nmaybe knows more or knows better than the people who report to them, who can get\nthem unstuck by their brilliant insights, who knows how they can get better.\nWhen it comes to technical or creative work, I much prefer a manager that\ncreates the right environment for the team and team members to solve their own\nproblems.  People need to find their own answers, not get them handed from above\nby someone who is potentially increasingly getting out of touch.  The manager\nneeds to understand the nature of the work, but should leave the getting lost in\nit to their team."},{"body":"Came upon another great episode of the\n[Greater Than Code](http://www.greaterthancode.com/2018/10/31/103-the-org-you-were-born-into-with-marcus-blankenship/)\npodcast that talked about \"the org you were born into\" and how the corporate\nculture at your first job shapes your expectations for the remainder of your\ncareer.  Its progression doesn't have to be one dimension and force you into\nmanagement.  And it doesn't help that many of us have very misguided ideas of\nwhat management really is.  The company can provide progressions paths that\ncater to each employee's goals.  This is similar to what Kim Scott is saying in\n[_Radical Candor_](../Books.html#Radical_Candor).","date":"2019-01-07","pretty_date":"January 07, 2019"},{"body":"Finished updating to the latest\n[Tufte CSS](https://github.com/edwardtufte/tufte-css).  They replaced the\n`code` CSS class in favor of using the `<code>` tag instead.","pretty_date":"December 10, 2018","date":"2018-12-10"},{"date":"2018-12-07","pretty_date":"December 07, 2018","body":"Looking at the latest update to\n[Tufte CSS](https://github.com/edwardtufte/tufte-css).  They brought back\nbullets on unordered lists, but they also made changes to some of the HTML tags."},{"pretty_date":"October 31, 2018","date":"2018-10-31","body":"I watched another great [talk on microservices](https://youtu.be/j6ow-UemzBc),\nthis time by Michael Bryzek of [Flow](https://www.flow.io/).  They take\ndevelopment based on microservices to the next level.  They start by defining\nartifacts (APIs, events, etc.) using language-agnostic descriptors in JSON and\nusing code generation to automate all the glue code.  Very impressive."},{"body":"Came upon a great episode of the\n[Greater Than Code](http://www.greaterthancode.com/2018/08/29/095-cleaning-house-with-heidi-waterhouse/)\npodcast that talked a lot about empathy and personal space (in code).  During\nthe podcast, they referenced\n[_the Origins of Opera and the Future of Programming_](https://the-composition.com/the-origins-of-opera-and-the-future-of-programming-bcdaf8fbe960)\nwhere Jessica Kerr compares the emergence of the Arts during the Renaissance to\nthe current rise of software.  She describes _symmathesy_, evolving systems that\ninclude both people and technology, such as a development team and the software\nit maintains.  She also describes _purple people_ who have a full mental model\nof the software, can perform as 10x engineers, and how they have to help other\nteam members gain better understanding, instead of hoarding that knowledge.","date":"2018-10-25","pretty_date":"October 25, 2018"},{"pretty_date":"October 15, 2018","date":"2018-10-15","body":"I learned about\n[_Progressive Web Apps_](https://en.wikipedia.org/wiki/Progressive_Web_Apps)\n (PWA), today.  It seems the qualifying criteria are enabling work offline and\nthe use of push notifications."},{"pretty_date":"October 09, 2018","date":"2018-10-09","body":"I have been trying to wrap my head around [React](https://reactjs.org/) for\nthe longest time.  Somehow, it always rebuffs my attempts at understanding what\nI'm looking at.  But I finally found a\n[really great explanation](https://reactjs.org/docs/hello-world.html)\nthat walks me through all the concepts in a way that I can grok them.  I'm still\nmissing some of the setup to allow me to play with it on my own, but at least I\ncan read it now."},{"body":"I watched a great [talk on microservices](https://youtu.be/E8-e-3fRHBw) by\nRandy Shoup of Stitch Fix (at the time).  The talk was recorded back in 2017,\nbut I only found it today.\n\nSome highlights:\n\n- eBay's monolith: [now that's a monolith](https://youtu.be/E8-e-3fRHBw?t=16m38s).\n- [Isolated persistence](https://youtu.be/E8-e-3fRHBw?t=20m33s).\n- [Events as first-class constructs](https://youtu.be/E8-e-3fRHBw?t=23m2s).\n- [Single system of record](https://youtu.be/E8-e-3fRHBw?t=32m6s), with every other copy is a read-only, non-authoritative cache.\n- [Materialize the View](https://youtu.be/E8-e-3fRHBw?t=37m52s) instead of using `join`.\n- [Workflows and sagas](https://youtu.be/E8-e-3fRHBw?t=41m44s), just like financial systems.\n\nAt Directly, we've had events as first-class constructs since 2011-02-02.  We\nworked hard on isolating persistence and managing read-only cache copies when we\nextracted our first microservice, back in September 2016.","date":"2018-08-29","pretty_date":"August 29, 2018"},{"body":"I tried to create a trivial [Micronaut](http://micronaut.io) app to test what\nwas the minimal code I would need to write to have a server handle an HTTP call.\nAt first, Micronaut wouldn't work at all and gave me some blank error message.\nLucky for me,\n[isssue 486](https://github.com/micronaut-projects/micronaut-core/issues/486)\nin the [GitHub project](https://github.com/micronaut-projects/micronaut-core)\nhad a fix that worked out fine for me.\n\nOnce I had my trivial server up and running, I looked at the documentation for\nmessage-driven architecture.  At work, I've been working with\n[RabbitMQ](https://www.rabbitmq.com/) quite a bit.  The Micronaut\ndocumentation says that it is common for microservices to work with RabbitMQ or\n[Kafka](https://kafka.apache.org/), but it only provides instructions on how\nto connect to Kafka.  I spent 5 minutes trying to setup a Kafka server using\n`docker-compose`, but I couldn't quite get it right.  Some other time, perhaps.","pretty_date":"August 16, 2018","date":"2018-08-16"},{"body":"It is confirmed that Microsoft is acquiring GitHub.  :-(\n\n- [GitHub blog](https://blog.github.com/2018-06-04-github-microsoft/)\n- [Microsoft blog](https://news.microsoft.com/2018/06/04/microsoft-to-acquire-github-for-7-5-billion/)","date":"2018-06-04","pretty_date":"June 04, 2018"},{"date":"2018-06-03","pretty_date":"June 03, 2018","body":"I learned\n[Microsoft was acquiring GitHub](https://twitter.com/samnewman/status/1003432099855167488)\nthrough a tweet from Sam Newman.  I only see second hand mentions on the\nInternet; nothing on the GitHub blog.  I'm not sure if I should believe it.  I\nknow I don't want to believe it.\n\nIt started with\n[rumors from The Verge](https://www.theverge.com/2018/6/3/17422752/microsoft-github-acquisition-rumors)."},{"body":"One more note on pull vs. push management.  This\n[HBR article on scaling agile](https://hbr.org/2018/05/agile-at-scale)\ncontrasts _creative teams_ with _command-and-control groups_.  Agile teams have\nmore autonomy, push decisions closer to people doing the work, leaders remove\nobstacles.  Looks like pull management to me.  Traditional teams have layers of\ncontrol, chain-of-command bureaucracies, top-down plans, leaders that delegate\nto subordinates.  Push management, anyone?","date":"2018-05-31","pretty_date":"May 31, 2018"},{"pretty_date":"May 12, 2018","date":"2018-05-12","body":"Back when I started working at Google, their philosophy was that people closer\nto the work were best to make decisions about the work.  As a result,\ncontributors, and not managers, were in charge of technical decisions.  Managers\nwere there to help coordinate and remove obstacles.\n\nIt's probably still an important part of the Google engineering culture, though\nI'm not sure how prevalent it is nowadays.  They've grown a lot since I was\nthere and not all the new managers subscribe to this approach.\n\nI have been looking for this kind of culture ever since I left Google.  It looks\nto me that over 90% of workplaces subscribe to the older model where\n_the boss knows best_.  The manager makes the decisions and tells their\nsubordinates what to do.  These are relegated to the role of simple, dare I say\nmindless, executants.  This may stroke the ego of the manager, who finds they\nhave power over others, but it leaves very little room for employees to exercise\ntheir creativity.\n\nI was reading\n[Beyond \"Outcomes Over Outputs\"](https://hackernoon.com/beyond-outcomes-over-outputs-6b2677044214),\nan article that discusses whether it is better to appear busy, even if this\nbusyness is not completely aligned with the company's objectives.  The article\nmentioned _pull vs. push management_.  A quick search yielded\n[a LinkedIn posting](https://www.linkedin.com/pulse/20140913233240-52078660-push-versus-pull-management/)\nthat explains it, and I was glad to finally be able to put a name on the culture\nI had experienced at Google, where managers _pull_ solutions from their teams,\nas opposed to the old way of doing things, where managers _push_ solutions onto\ntheir subordinates.  There are short-term gains to the _push_ model, but you\nrisk high turnover as talented contributors tire of being told what to do.  The\n_pull_ model lets you tap your team's greater potential, but it requires more\ntrust that they will step up to the challenge.  I know quite a few managers who\ndo not trust their subordinates and who do not feel comfortable until they can\nmicromanage their employees directly and at all times.  \"How can I manage a\nremote employee if I cannot see what they are doing?\"  To me, it just looks like\na lack of trust between the two.\n\nI am seeking out _pull management_ environments.  I am not interested in the\npush model.  Or its proponents, for that matter."},{"body":"The [test app](https://afternoon-cliffs-9951.herokuapp.com/Books.html) I wrote\non [2016-01-02](#2016-01-02), when playing with the MEAN stack, has stopped working.  The\nendpoint that returns public data still works, but the endpoints for logging in\nor signing up no longer work.  Something must have changed in one or more of the\ndependencies.  I guess I will have to work my way through updated\n[Passport](http://www.passportjs.org/) tutorials to track down what has\nchanged.  I did notice a\n[`passport-local-mongoose`](https://www.npmjs.com/package/passport-local-mongoose)\nstrategy that seems to offer better integration with\n[Mongoose](http://mongoosejs.com/).  It also mentions moving from SHA-1 to\nSHA-256, which makes me wonder if my app stopped working because of some\nsecurity fix somewhere in the chain of dependencies.\n\nI installed\n[`npm-check-updates`](https://www.npmjs.com/package/npm-check-updates), or\n`ncu`, to help me manage package versions.  I read about it\n[here](http://www.hostingadvice.com/how-to/update-npm-packages/).  It updated\nquite a few of my dependencies, but the `/login` and `/register` endpoints are\nstill not working.","pretty_date":"February 23, 2018","date":"2018-02-23"},{"pretty_date":"February 03, 2018","date":"2018-02-03","body":"Found a new tool for formatting code snippets:\n[Carbon](https://carbon.now.sh/).  Before, there was GitHub\n[Gist](https://gist.github.com/) to render code with syntax highlighting.  But\nthe snippet was hosted on GitHub and the embedded view was branded by GitHub.\nWith Carbon, you get an unbranded image that you can host anywhere and load\nwith a simple `<img>` tag.  They cover an expansive list of languages and\nhave multiple styles; though most are dark, I prefer \"Solarized (Light)\".\n\n![handlers](handlers.png)\n\nIn the past, I thought you needed a separate gist for each code snippet.  But\nthe latest GitHub UI lets you put multiple files in a single gist."},{"pretty_date":"January 25, 2018","date":"2018-01-25","body":"Looked into [Semantic UI](https://semantic-ui.com/) for a bit for work.  Feels\nstrange to need a build tool even for a static HTML page.  I didn't need one for\neither [Bootstrap](https://getbootstrap.com/) or even\n[Tufte CSS](https://github.com/daveliepmann/tufte-css)."},{"body":"Another\n[nice article](https://hackernoon.com/how-css-grid-beats-bootstrap-85d5881cf163)\non [Grid Layout](https://www.w3schools.com/css/css_grid.asp) that shows the\ndifference with [Bootstrap](https://getbootstrap.com/).  One nice thing for\nGrid Layout is that it is already in the browser, so it doesn't need an\nadditional library.","pretty_date":"December 02, 2017","date":"2017-12-02"},{"body":"Getting back into [Angular](https://angular.io/).  I'm slowly making my way\nthrough their basic [tutorial](https://angular.io/tutorial).  It hints at\nbeing a lot of what I need for my\n[book reviews](https://github.com/jeantessier/book-reviews) project: a\ndata-driven application with a few pages for managing entities.","pretty_date":"November 29, 2017","date":"2017-11-29"},{"pretty_date":"November 23, 2017","date":"2017-11-23","body":"Reformatting my resume.  I have been trying to replace HTML tables with proper\n`div` and `span` elements, but I can't get them to flow quite right.  Friends\nsuggested I look into\n[Flexbox](https://www.w3schools.com/css/css3_flexbox.asp).  I found\n[a handy tutorial](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\nand I was able to clean up the hand-crafted HTML for my resume.  No more\n`float: right` mysteries.\n\nThere is also some nice documentation for the\n[Grid Layout](https://www.w3schools.com/css/css_grid.asp) and it has its own\n[handy tutorial](https://css-tricks.com/snippets/css/complete-guide-grid/)\ntoo."},{"body":"I found\n[an example](https://www.djamware.com/post/5a10b5f580aca75eadc12d6c/grails-3-angular-5-profile-crud-web-application-example)\nthat combines a server written in Grails 3.3.1 and auto-generated REST\nscaffolding that is then used by an Angular 5 app.  The example only builds\nsimple screens to list, create, show, edit, and delete a single type of entity,\nbut the work is pretty trivial.","date":"2017-11-20","pretty_date":"November 20, 2017"},{"pretty_date":"September 14, 2017","date":"2017-09-14","body":"Yet another article on\n[psychological safety](https://hbr.org/2017/08/high-performing-teams-need-psychological-safety-heres-how-to-create-it),\nthis time from Harvard Business Review, that follows from\n[Google's Project Aristotle](https://rework.withgoogle.com/guides/understanding-team-effectiveness/steps/introduction/),\nwhere they had set out to answer the question: _What makes a great manager?_\nThis latest article focuses on nurturing a sense of safety even in situations of\nconflict at work.  It takes empathy and self-awareness to treat others like we\nwould like to be treated."},{"body":"Martin Fowler tweeted another article on\n[psychological safety](https://blog.intercom.com/psychological-safety/)\nwritten by John Looney, a former Google SRE.  It feeds off the same research\nthat inspired a [NY Times article](http://nyti.ms/20Vn3sz) that I mentioned\non [2016-02-26](#2016-02-26).","date":"2017-08-27","pretty_date":"August 27, 2017"},{"body":"I learned about [Prettier](https://github.com/prettier/prettier), a code\nformatter for JavaScript that is a little less opinionated than\n[JavaScript Standard Style](https://standardjs.com/).  It has a really nice\nintegration with the Atom editor.  And it lets me fine tune some of the rules\n(that's what I mean by _less opinionated_).  It won't automatically convert your\ncallbacks to ES6 arrow functions, though.","date":"2017-08-17","pretty_date":"August 17, 2017"},{"body":"I found an interesting article titled\n[Programming As If Domain Mattered](https://twitter.com/carlopescio/status/890182579634221057?lang=en).\nIn it, the author takes a sample problem (whiteboard interview style) with an\noptimized solution (in Haskell).  His contention is that while optimal, the\nsolution is so removed from the problem domain that any change in the problem\nrequires a complete overhaul of the solution.  A less optimized solution that\nmodels the domain more closely may be easier to modify as the domain changes,\nespecially for large code bases dealing with real world problem, where it would\nbe impractical to start over.\n\nInterestingly enough, the article looks like it was written with\n[LaTeX](https://www.latex-project.org/).  It's been a while since I've seen\nsomeone using LaTeX.  The typography is really good and the printout is really\neasy to read.  Much better that other printouts in typical fonts used on the\nWeb.","pretty_date":"July 28, 2017","date":"2017-07-28"},{"body":"Catching up on Groovy news, I found an\n[article about Grain](https://yermilov.github.io/blog/2017/06/27/groovy-static-sites-with-grain/).\nIt is a Groovy equivalent to [Jekyll](http://jekyllrb.com/).  You download a\npre-configured theme with a `grainw` wrapper that automatically downloads the\nright version of Grain.  I had to upgrade its Gradle version from 1.8 to 4.0.1\nto get it to work, but otherwise it was fine.  It can generate the all-static\nwebsite and it can also automate its deployment to GitHub Pages.\n\nThe article also mentions [Travis](https://travis-ci.org/), a kind of free\nJenkins that's integrated with GitHub.  It can monitor your project and trigger\nactivity on commits.  It is getting easier and easier to develop pet projects\nfor free but still with top of the line infrastructure: repo, CI, etc.","date":"2017-07-21","pretty_date":"July 21, 2017"},{"body":"Coraline Ada Ehmke described a\n[somewhat toxic environment](http://where.coraline.codes/blog/my-year-at-github/)\nwhen she worked at GitHub.  It is not as scathing as Susan Fowler's\n[experience at Uber](https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber),\nbut Coraline's manager definitely had it in for her.  According to her, the\nmanager discounted her later efforts to improve.  And by the time she got put on\nthe performance improvement plan, it was clear that the manager was just going\nthrough the motions to get her terminated.  It's very sad.  I am so impressed\nwith GitHub's product, it is disappointing to hear some of the goings on behind\nthe scene.\n\nCoraline's website had another interesting article on\n[meritocracy](https://modelviewculture.com/pieces/the-dehumanizing-myth-of-the-meritocracy)\nand its supposed benefits, which may only be a means for the people in power to\nremain in power and exclude everyone else.\n\nAnd following links, I found a piece about\n[_core group dynamics_](https://authenticengine.com/2016/who-really-matters-core-group-theory-introduction/),\nwhereby a tight inner group concentrates power and privileges in an organization\nunto themselves.  There seems to be only one book about it, so I'm not sure it\nisn't a fluke or something.  Still an interesting concept, though.","date":"2017-07-05","pretty_date":"July 05, 2017"},{"date":"2017-06-08","pretty_date":"June 08, 2017","body":"I was listening to a\n[podcast](https://lescastcodeurs.com/2016/10/03/lcc-155-java-ee-et-l-ardoise-magique/)\nand I stumbled upon [`ngrok`](https://ngrok.com/), a tunneling service that\nlets you expose any application on any port on `localhost` to a public address\non the Internet.  This is very useful to test webhooks: run the hook on your\ndevelopment machine, expose it on the Internet using `ngrok`, and tell the\nservice that you're integrating with to call your webhook on the `ngrok`\naddress.  Boom!  An external service is calling code running on your laptop."},{"body":"Played a little bit with Grails 3.3.0.M1 and explored some of the latest\nfeatures, such as URL rewriting to hyphenated or snake case for URL elements\n(`/someAction` vs. `/some-action` vs. `/some_action`) and the latest `async` plugin\nfor dealing with instance of `Promise` instead of the regular Java `Future`\nclass.  This must me the third mechanism for asynchronous processing, not\ncounting the `spring-event` plugin we used back in Grails 1.x.  The new `async`\nplugin also has a new event model, with annotations to drive the logic.","pretty_date":"May 23, 2017","date":"2017-05-23"},{"body":"At the [API Mixtape conference](http://apimixtape.com/), everybody was talking\nabout [GraphQL](http://graphql.org/) as the latest favorite way to build\nservice APIs.  Today, [GitHub](https://github.com/) announced that\n[their service API now uses GraphQL](https://developer.github.com/v4/).  They\neven include an Explorer that lets you issue queries and inspect results.  Or,\nyou can use `curl` or Postman with an OAuth token.","date":"2017-05-22","pretty_date":"May 22, 2017"},{"pretty_date":"May 17, 2017","date":"2017-05-17","body":"Spent the day at the [API Mixtape conference](http://apimixtape.com/).  It was\na first-time conference on people building web APIs to connect services.  There\nwere speakers from:\n\n- [Slack](https://slack.com/)\n- [GitLab](https://about.gitlab.com/)\n- Facebook's [GraphQL](http://graphql.org/)\n- [Keen IO](https://keen.io/)\n- Lyft's move from a monolith to microservices\n\nThe conference was organized by [ReadMe](https://readme.io/), a company whose\ntools help you document APIs and manage that documentation.  They did a live\ndemo of their [`api`](https://www.npmjs.com/package/api) open source API\nrunner that was pretty cool.  It versioned the API and automatically documented\neverything, including code snippets to call endpoints.\n\nMy biggest takeaway from the conference was the importance of customer feedback\nin the early stages, when you're defining the API.  It will inform your vision\nand make sure you're building something that people will want to use and find\nuseful.  You must not get stuck in your own head.\n\nAlso, I read a great Harvard Business Review article on\n[mistakes by new executives](https://hbr.org/2017/05/the-biggest-mistakes-new-executives-make)\n(and many leadership positions too).  I have struggled with people who come into\na team and don't have the humility to listen first.  They are so convinced that\nthey know better that they completely dismiss the institutional knowledge.  This\nis condescending to their new underlings.  How could they possibly know better\nwhen they are coming from the outside, when they have no clue to what their\npeople know or how they've been operating?  Unless the organization is a\ncomplete disaster, they've been doing _some_ things right.  Right?"},{"pretty_date":"May 10, 2017","date":"2017-05-10","body":"A friend of mine recommended I read [Radial Candor](http://a.co/65Lo0qh) by\nKim Scott.  I'm not sure if there's isn't a hidden message in this\nrecommendation.  The premise seems interesting: have the courage to give\ncriticism, as long as it's about things that you care about.\n\nI also found a\n[BuzzFeed article](https://www.buzzfeed.com/jonnyensall/this-is-radical-candor?utm_term=.xhaBpxN2B#.tbwb46Mqb)\non the approach where the reporter observed it in a software company in London,\nand also talked to a sociologist about the merits of \"too much candor\".  They\nwere not as optimistic, since people do need their privacy and basic diplomacy\nstill helps lubricate communication.  The sessions described in the article\nwhere participants share criticism they have received seemed pretty narcissistic\nand self-centered.  I think we must be careful not to burden others with our own\nfailings (or overly subjective opinions).  If **I** have a problem with something,\nit could be unfair of me to dump it on someone else, especially if there is\nnothing they can do about it.\n\nI might have to read the book to figure it out for myself.  It seems pretty\nshort, so it wouldn't take too long.  But I'm already fearing that it will be\nlightweight and anecdotal, like\n[_Rework_](Books.html#Rework) and\n[_Remote_](Books.html#Remote_Office_Not_Required), which I've read\nrecently."},{"pretty_date":"May 09, 2017","date":"2017-05-09","body":"Re-reading a Martin Fowler article on\n[agile software development](https://martinfowler.com/articles/newMethodology.html).\nThe substance of the article goes back to the year 2000, with some updates until\n2005, but it has survived the test of time surprisingly well.  It talks at\nlength to the fallacy of predictive development in software, and is very\nhumanistic in putting people at the center of the process.  For this last part,\nhe uses quotes by Alistair Cockburn.  It is a great re-read."},{"body":"I read an article that recommended using the\n[JavaScript Standard Style](https://standardjs.com/).  It's just a name, there\nis no wildly accepted standard for JavaScript.  But it comes with a tool that\nverifies compliance for you, which I thought was interesting.  So, I installed\nit and tried it out on my JavaScript samples.  I like omitting semicolons and\nusing the ES6 arrow functions.  I don't like using single quotes or two-space\nindents.\n\nAt first, I put `/* global angular */` at the top of each file, to suppress\nthe angular-not-defined messages.  Then, I switched to calling\n`standard --global angular` instead.  I still had to use a specially formatted\ncomment to suppress errors around the\n[Showdown](https://github.com/showdownjs/showdown) library, though.\n\nIn the end, the Angular apps (Books, Journal, etc.) started complaining with the\n_standardized_ JavaScript code, so I reverted it.","date":"2017-04-10","pretty_date":"April 10, 2017"},{"date":"2017-04-05","pretty_date":"April 05, 2017","body":"A new edition of the [ThoughtWorks](https://www.thoughtworks.com/) \n[Technology Radar](https://assets.thoughtworks.com/assets/technology-radar-vol-16-en.pdf)\nis out.  It is still very favorable to [Ember.js](http://emberjs.com/) and\nmuch less so for [AngularJS](https://angularjs.org/), though still curious\nabout [Angular 2](https://angular.io/)."},{"body":"I found out there is now a\n[formal definition of Markdown](http://commonmark.org/).  It means to address\nsome of the ambiguities in the\n[original definition of Markdown](http://daringfireball.net/projects/markdown/).\nThere is a reference implementation in JavaScript and implementations in Java\nand Perl, too.  This might make it easier for me to move off of my custom wiki\nnotation and use something more standard, instead of\n[Showdown](https://github.com/showdownjs/showdown).","pretty_date":"March 25, 2017","date":"2017-03-25"},{"date":"2017-02-27","pretty_date":"February 27, 2017","body":"A colleague pointed me to the newly published\n[US government web design standards](https://standards.usa.gov/).  Their 1.0\nversion came out on 2017-02-23.  It is a product of\n[18F](https://18f.gsa.gov/), a government agency that promotes agile and open\nsource in government software.  These new standards are not groundbreaking, but\nthey do a good job of incorporating state-of-the-art web design principles.  I\nthink that having a large software user like the government standardize on grid\nlayouts and caring about typography will make it easier to advocate for these\nthings on other, smaller web projects."},{"body":"Susan Fowler described a\n[very toxic environment](https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber)\nwhen she worked at Uber.  It exploded all over the Internet.","date":"2017-02-19","pretty_date":"February 19, 2017"},{"body":"More LDAP fun.  Finally figured out how to represent user roles in my LDAP\nserver so that Spring Security will pick them up.  Also figured out a test\nschema for user entries that will let me actually login.\n\nI extracted the generic details of my Grails microservice into an\n[example application on GitHub](https://github.com/jeantessier/grails-3-ldap-example).","pretty_date":"February 16, 2017","date":"2017-02-16"},{"body":"I'm writing a microservice for work.  It does its main communication through\nRabbitMQ, but it also has a small admin UI.  I am building the microservice is\nwith Grails and I am using _scaffolding_ to generate the admin UI automatically.\n\nWe want to limit access to the admin UI, but we also want to keep the\nmicroservice as simple as possible.  I don't want to duplicate user management\nor maintain a separate set of user credentials.  So I figured I could connect\nto the company's LDAP server instead.  Grails has plugins built on top of\nSpring Security to interface with LDAP.\n\nI am running a local LDAP server using\n[OpenLDAP on Docker](https://hub.docker.com/r/osixia/openldap/), and I found\ntwo free LDAP clients,\n[Apache Directory Studio](https://directory.apache.org/studio/) and\n[jXplorer](http://jxplorer.org/), to help me set it up.  But, I am still at\na loss to understand how to setup user accounts and groups that will map to\nusers and roles in Grails.\n\nWhen I connect to the company's LDAP server, I can sign in with my company\ncredentials, but I am not picking up roles from the LDAP data.  I still have\nwork to do to setup a local system to test against.  LDAP is not so simple;\nit's X.500 roots are showing.  The only thing more convoluted than \"designed by\ncommittee\" is \"designed by _international_ committee\".  (For full disclosure: I\nworked on [X.462](https://www.itu.int/rec/T-REC-X.462/en), part of the ITU suite\nof standards for managing X.400 email.)","date":"2017-02-14","pretty_date":"February 14, 2017"},{"pretty_date":"February 09, 2017","date":"2017-02-09","body":"I was listening to the\n[Agile for Humans](http://ryanripley.com/agile-for-humans/) podcast and I came\nupon a great episode:\n\n- [HR Insights with Esther Derby and Stacy Johnston](http://ryanripley.com/hr-insights-with-esther-derby-and-stacy-johnston/)\n\nIn it, they discuss the role of managers in a post-factory work setting.  They\ntalk the importance of trust in the workplace culture, both between the manager\nand the employee, and between the team members themselves.  This reminds me of\nmy earlier thoughts on [2016-02-26](#2016-02-26) about _psychological safety_.\n\nExcerpt about performance:\n\n> **Ryan Ripley**: We hire somebody.  We onboard them.  They might get a few\n> days of training around corporate history and culture, if they're lucky.\n> Then, they're thrown into the fire of \"Here, now you need to be productive.\"\n> And we may or may not define that for them.  And then, at the end of the year,\n> we'll ask them how they think they did, and them we'll sit them down and give\n> them the right answer.\n> \n> **Ester Derby**: Oh!  That just sounds painful when you describe it that way.\n> <footer>at 4'00\"</footer>\n\nI have been on the receiving end of this more than once, and it rarely ended\nwell."},{"body":"Discovered [Surge](https://surge.sh/), a tool and site where you can publish\nany static website and/or Single Page Apps.  It integrates with popular frontend\ndevelopment technologies so it can become part of the development workflow.  It\nis pretty cool how they setup projects as subdomains of `surge.sh`.  This way,\nyou can host your project at a mostly readable URL without having to purchase a\ndomain and pay for hosting.  It can also host your site if you purchased a\ndomain name and you just need some place to host it.  In my case, I already pay\nfor hosting with Dreamhost, and I have unlimited subdomains for\n`*.jeantessier.com`, so all I would need, really, is the automation.  I already\njury-rigged a GitHub automation that updates my main website with every\n`git push` to the repository, but it relies on a GitHub webhook and a custom CGI\nscript.\n\nSurge uses the `.sh` TLD.  It is for\n[Saint Helena](https://en.wikipedia.org/wiki/Saint_Helena,_Ascension_and_Tristan_da_Cunha),\na group of British islands in the South Atlantic.","date":"2016-12-26","pretty_date":"December 26, 2016"},{"body":"Changed the styling on my website.  I brought it closer in style to the Edward\nTufte I'm using on my reading lists and journal.","date":"2016-12-08","pretty_date":"December 08, 2016"},{"body":"Looking at [RxJava](https://github.com/ReactiveX/RxJava) and\n_reactive computing_.  It is a very elegant model, especially when coupled with\nJava 8's lambda expressions.  Here is\n[a nice tutorial](http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/).\n\nThere is also a Groovy binding,\n[RxGroovy](https://github.com/ReactiveX/RxGroovy), but the documentation is\nstill sparse.\n\nAt work, I developed a somewhat-reactive framework inside Grails using Spring\nEvents.  Any piece of code can publish a _notification_.  Services can register\nthemselves as _notification listeners_ and define handlers with a _match_\nclosure and a _handle_ closure.  Handlers which return `true` from their _match_\nclosure get their _handle_ closure called.\n\n    handlers.findAll { name, handler ->\n        handler.match notification\n    }.each { name, handler ->\n        handler.handle notification\n    }\n\nThe handlers are named in a `Map` to help with debugging.\n\nWe even added an _origin_ for the notifications and made it an optional\nparameter to the closures.\n\n    handlers.findAll { name, handler ->\n        if (handler.match.maximumNumberOfParameters == 1) {\n            handler.match notification\n        } else {\n            handler.match notification, origin\n        }\n    }.each { name, handler ->\n        if (handler.handle.maximumNumberOfParameters == 1) {\n            handler.handle notification\n        } else {\n            handler.handle notification, origin\n        }\n    }\n\nThe nice thing here is that publishers and consumers are completely decoupled.\nThe RxJava examples I have seen so far are all wired together explicitly.  The\nelements in my framework are only connected through the Spring Event system.\nAnd the services are called on separate threads, so they get to handle\nnotifications in parallel (constrained by a thread pool, of course).","date":"2016-12-07","pretty_date":"December 07, 2016"},{"body":"A co-worker brought to my attention a new feature introduced in Java 7 to\n[catch multiple unrelated exceptions](http://docs.oracle.com/javase/7/docs/technotes/guides/language/catch-multiple.html)\nin one `catch` block.\n\n    try {\n        // Do something\n    } catch (IOException | SqlException ex) {\n        // Handle exception\n    }\n\nThe compiler still creates separate _exception handler_ attributes, but they all\nshare the same series of instructions.  With separate `catch` blocks, even if\nthey have identical code, the compilation duplicates all the instructions.  This\nnew notation is both elegant **and** more efficient.","pretty_date":"November 28, 2016","date":"2016-11-28"},{"body":"I was reading the [ThoughtWorks](https://www.thoughtworks.com/) \n[Technology Radar](https://assets.thoughtworks.com/assets/technology-radar-nov-2016-en.pdf)\nwhere they were signing the praise of [Ember.js](http://emberjs.com/).  So I\nmade my way through their quickstart tutorial.\n\nIncidentally, the technology radar also said to keep away from\n[AngularJS](https://angularjs.org/).","date":"2016-11-09","pretty_date":"November 09, 2016"},{"body":"While I was researching [Redis](http://redis.io/), I stumbled upon a Grails 3\nplugin to do JWT:\n\n- [`spring-security-rest`](https://grails.org/plugins.html#plugin/spring-security-rest)\n- `spring-security-rest` [documentation](http://alvarosanchez.github.io/grails-spring-security-rest/latest/docs/)\n- [`spring-security-rest-redis`](https://grails.org/plugins.html#plugin/spring-security-rest-redis) for Redis backing\n- general [`redis`](https://grails.org/plugins.html#plugin/redis) plugin\n\nI was able to start a Redis instance using [Docker](https://www.docker.com/)\nbut I had to make sure it exposed the right port.\n\n    $ docker run --name some-redis -d -p 6379:6379 redis\n\nI had to compile a local copy of Redis to get `redis-cli`, but after that it had\nno problem connecting to the instance in the container.\n\nI also came across an interesting\n[article on agile organizations](http://www.forbes.com/sites/stevedenning/2016/09/08/explaining-agile/)\nwhere the author argues against the hierarchical, top-down nature of traditional\norganizations, what he calls _20<sup>th</sup> century organizations_.  As he\nwalks down the history of the Agile movement, he shows how early efforts focused\non small teams and more recent efforts have been focusing on providing value to\nthe customer.  Now, we're coming to realize the impact of de-centralized\nnetworks, where collaboration is more powerful than top-down delegation.","date":"2016-09-14","pretty_date":"September 14, 2016"},{"body":"A colleague started a discussion of the\n[test pyramid](https://martinfowler.com/bliki/TestPyramid.html), with lots of\nunit tests at the bottom, fewer integration tests in the middle, and a few\nend-to-end tests at the top.  I'm afraid of the inertia that all these unit\ntests can create.  On more than one project, I've happily created many, many\nunit tests (yeah TDD).  Then, I find out much later that making one refactoring\nwill need to touch a disproportionately large number of tests, or that adding a\nvariation of some piece of code should include a whole slew of tests, like the\nother variations.  So I find myself warming up to having large end-to-end tests\nprovide a lot of coverage and keep the low-level unit tests to a minimum and\nvery closely related to the specificity of the code they are testing.  Less of a\npyramid, more like a tower?  Someone mentioned the\n[testing cupcake anti-pattern](https://www.thoughtworks.com/insights/blog/introducing-software-testing-cupcake-anti-pattern).\n\nI remember reading an article where the author advocated writing lots of unit\ntests to guide TDD but only keeping the acceptance tests in the end.  I don't\nthink he even bothered to check them into source control.  I can't seem to find\nthe article anymore.\n\nAs I was searching the web for downsides to unit tests, I came across an article\nthat was\n[critical of agile methodologies](http://mikehadlow.blogspot.cl/2014/06/heisenberg-developers.html).\nIt's main argument is that demanding predictable results kills creativity and\nserendipity in developing software.  Building software is so complex and so\ndependent on creativity that making estimates is intrinsically unreliable.  It\nreminds me of another article I had read about the tyranny of the burndown chart\nand some people's perception of Scrum as micromanagement.  This article also\ntaps into my hatred for\n[Jira](https://www.atlassian.com/software/jira) (and all things Atlassian).","pretty_date":"September 08, 2016","date":"2016-09-08"},{"date":"2016-05-30","pretty_date":"May 30, 2016","body":"Looked at using\n[GitHub Pages](https://help.github.com/categories/github-pages-basics/) to\ndocument my [Book Reviews](https://github.com/jeantessier/book-reviews) pet\nproject.\n\nIn the process, I started looking into [Jekyll](http://jekyllrb.com/), as it\nis the preferred engine for GitHub Pages.  I like how it has built-in support\nfor blogs using a filename format that's very close to my own home-grown blog.\nMaybe I should consider switching parts (or all) of my website to my GitHub User\nPages."},{"body":"[Aging in the IT industry](https://www.linkedin.com/pulse/aging-industry-miha-kralj)\nechoes some of the feelings I've been having lately.  I feel I have become\ncomplacent with my skill set and it is slowly becoming obsolete.  This is why I\nhave been tinkering with my sample Book Review app \"project\" to get myself\nfamiliar with the new wave of web-based development tools.","pretty_date":"May 19, 2016","date":"2016-05-19"},{"body":"Worked on some [MongoDB](https://www.mongodb.org/) queries to re-create the\nJSON output from `Books_json.cgi`.  So far, I have:\n\n    db.book.aggregate([\n        {$unwind: \"$reviews\"},\n        {$lookup: {\n            from: \"review\",\n            localField: \"reviews\",\n            foreignField: \"_id\",\n            as: \"review\"\n        }},\n        {$unwind: \"$review\"},\n        {$project: {\n            _id: false,\n            name: true,\n            authors: true,\n            titles: true,\n            publisher: true,\n            years: true,\n            start: \"$review.start\",\n            stop: \"$review.stop\",\n            body: \"$review.body\"\n        }},\n        {$sort: {start: -1}}\n    ]);\n\nI also tried this:\n\n    db.book.find({}, {_id: false}).map(function(book) {\n        var review = db.review.findOne({_id: {$in: book.reviews}});\n        book.start = review.start;\n        book.stop = review.stop;\n        book.body = review.body;\n        return book;\n    });\n\nBut I have a feeling that it might be inefficient with that inner lookup that\nmight lead to an \"N + 1\" problem.  Plus, the output is not neatly filtered the\nway I was able to with `$project` in the first example.\n\nI'm also looking for ways to attach a [node.js](https://nodejs.org/en/) app to\nMySQL instead of MongoDB.  So far, I've found three possible solutions:\n\n- node-mysql\n- [node-mysql2](https://github.com/sidorares/node-mysql2)\n- [hyena](https://github.com/plus3network/hyena)\n\n`hyena` seems like an ORM layer similar to `mongoose` for MongoDB, but hasn't\nbeen touched in over two years.  `node-mysql` and `node-mysql2`  are more direct\nSQL manipulations with slight differences between the two of them.","date":"2016-05-13","pretty_date":"May 13, 2016"},{"pretty_date":"May 12, 2016","date":"2016-05-12","body":"Worked out a script to take my book entries in the `data/` folder and write them\nout as `insert` statements for [MongoDB](https://www.mongodb.org/).  It splits\nthem into separate `book` and `review` collections and links them together with\na predefined `user` entry."},{"body":"Getting more familiar with [MongoDB](https://www.mongodb.org/).  I worked on\nthe schema for my sample Book Review app.  I kept the entities in separate\ncollections and used manual references to tie them together.  I could have used\nembedded sub-documents, but I wanted to experiment with resolving references\nanyway.\n\nThere is a lot of\n[decent documentation for MongoDB](https://docs.mongodb.com/master/reference/).\nI still had to do a lot of trial and error to get the queries right.  And I\nstill need to work on creating the right indices.","pretty_date":"May 11, 2016","date":"2016-05-11"},{"body":"Here's a crazy idea: I could use microservices to implement the backend for my\nsample Book Review app.  This might reduce the number of combinations I'd have\nto work with.  I'd need one microservice for users, one for books, and one for\nreviews.  Each could be in a different backend technology: Grails, Rails, Node.\nThe microservice for users could handle authentication using JWTs.  Either all\nmicroservices could share the secret to verify the JWTs, or they could call to\nthe microservice for users to validate them.\n\nI could use Sam Newman's\n[Backends For Frontends](http://samnewman.io/patterns/architectural/bff/)\npattern to further reduce the number of combinations.  Different frontends could\ntalk to slim BFFs that talk to the set of microservices.\n\nI could use [Docker](https://www.docker.com/) to manage deployment, as well as\nlearning how to _dockerize_ these technologies.  Not sure if I should run all\nthe images on the same virtual machine, and deal with port management, or set\neach one on its own virtual machine and avoid port collisions.  Grails defaults\nto port 8080, `npm` to port 5000, and Node and Rails both default to port 3000.","pretty_date":"May 08, 2016","date":"2016-05-08"},{"pretty_date":"May 03, 2016","date":"2016-05-03","body":"I'm thinking of building a sample application on a number of technology stacks\nin order to experience what it's like to develop on those stacks.  By building\nthe same app in different environments, I might better see what their strengths\nand weaknesses are.\n\nI'm thinking of using my current [book review](Books.html) for this.  Reviews\nhas a somewhat simple schema and I can add users for access control and to tie\npersistent entities together.\n\n![BookReviews_ObjectModel](BookReviews_ObjectModel.png)\n\nOne the backend:\n\n- Node + Express\n- Grails\n- Spring Boot\n- Ruby on Rails\n\nProducing a number of outputs:\n\n- HTML from templates (Jade, GSP, JSP)\n- REST API\n\nFrom a number of data sources:\n\n- MongoDB\n- MySQL\n\nWith different frontends:\n\n- HTML\n- AngularJS\n- React + ?\n\nI already have one done that is the combination of\n[Node + REST + MongoBD + AngularJS](https://afternoon-cliffs-9951.herokuapp.com/Books.html).\nOnly 47 more to go."},{"pretty_date":"April 19, 2016","date":"2016-04-19","body":"Ever since I started reading about Angular and Node, I've been wondering how to\ndo TDD in those environments.  The books keep mentioning how things are done\nthis or that way to support testing, but all the testing they do is manual.\nNever mind TDD, how can I automate any of the tests at the very least?\n\nToday, I stumbled upon\n[Express in Action](https://www.manning.com/books/express-in-action), which\nhas an entire chapter on automated testing.  There is a framework called Mocha\nthat seems the equivalent of Spock or RSpec.  There is an assertion library\ncalled Chai that looks similar to Hamcrest.  And there is SuperTest and Cheerio\nfor integration testing akin to HttpUnit and HtmlUnit respectively.\n\n[This article](http://www.techtalkdc.com/which-javascript-test-library-should-you-use-qunit-vs-jasmine-vs-mocha/)\ndescribes qUnit as the old guard, Jasmine as the principal tool in use, and\nMocha as the new kid on the block with improved support for testing\nasynchronous, or callback-based, code.  The\n[Angular documentation](https://docs.angularjs.org/guide/unit-testing) also\ncovers Jasmine, along with Karma for running the tests."},{"date":"2016-04-14","pretty_date":"April 14, 2016","body":"Learned about [JSON Web Tokens](https://jwt.io/) (JWT, pronounced \"jot\") while\nreading\n[_Getting MEAN with Mongo, Express, Angular, and Node_](Books.html#Getting_MEAN).\nIt is an emerging alternative to SAML, which is a lot more complicated, and an\nexample of what Sam Newman called a _hash-based messaging code_ (HMAC) in\n[_Building Microservices_](Books.html#Building_Microservices).\n\nThe server created the JWT and returns it to the client.  A client\n(i.e., browser) can easily decode the payload using JavaScript and return the\nJWT to the server as proof of authentication.  If the server has the secret key,\nit can validate the signature part of the JWT.  No session management require!\n\nI can see how it would be useful in a microservices architecture, where the\nbrowser gets a JWT from the _authentication_ microservice and passes that JWT to\nthe other microservices.  Either these other microservices also have the secret\nkey to validate the JWT, or they can make a secondary call to _authentication_\nto validate it."},{"date":"2016-03-04","pretty_date":"March 04, 2016","body":"Two very different articles about one-on-one meetings:\n\n- [101 Questions to Ask in One on Ones](http://jasonevanish.com/2014/05/29/101-questions-to-ask-in-1-on-1s/)\n- [A Simple Guide to Better Coaching and Feedback in Your Company](https://blog.bufferapp.com/a-simple-guide-to-better-coaching-and-feedback-in-your-company)\n\nThe first one is very condescending towards the employee.  It's really about the\nmaking the manager feel good that they are in control of the situation.  The\nmanager owns the employee and should find what works best for them.  It reads\nlike a get-rich-quick scam: do these _n_ easy steps and success will be yours.\nMany of the questions are very personal and may not be appropriate unless the\ntwo are close friends.  And what comes through is a pervasive feeling of\n_how can you be a better employee, what else can you do for the company_.\n\nThe second does a much better job of making the meeting about the employee and\nmaking sure it is empowering them.  They drive much of the interactions.  I felt\nit did a better job of treating the employee in a holistic manner, being mindful\nthat they are whole persons, and each is best qualified to deal with their\nchallenges.  This reminds me of the organizing principle for teams at Google:\nlet the contributors make the decisions, since they know best what is needed and\nthey have to live with the consequences.  Empowering the team is the best way to\nunlock its full potential.  The second article does the same thing for employees\nthrough their one-on-one meetings."},{"pretty_date":"March 02, 2016","date":"2016-03-02","body":"Discovered [Pusher](http://pusher.com), a messaging service that connects\nfrontends to backends using websockets.  The backend publishes messages to\nPusher which distribute it to clients.  They have libraries for most popular\nfrontend and backend stacks, and someone even wrote a\n[Grails plugin](https://github.com/micpango/pusher-plugin) for it.\n\nAt Directly, I built a pull mechanism using jQuery that would call a _heartbeat_\ncontroller on the server every few seconds.  The lag was annoying and making it\ntoo small created unwanted load on the server.  This solution uses websockets,\nbut Pusher's servers handle the websockets, not the servers hosting the app."},{"body":"A nice article on team dynamics:\n[What Google Learned From Its Quest to Build the Perfect Team](http://nyti.ms/20Vn3sz).\nTurns out the key ingredient is\n[_psychological safety_](https://en.wikipedia.org/wiki/Psychological_safety).\nI've been thinking a lot about notions of _trust_ and _safety_ lately, in\nvarious contexts.","pretty_date":"February 26, 2016","date":"2016-02-26"},{"body":"Continuing my exploration of the MEAN stack, I managed to write a\n[node.js](https://nodejs.org/en/) app using the\n[Express](http://expressjs.com/) framework to pull data from\n[MongoDB](https://www.mongodb.org/).  I followed the examples in\n[_Getting MEAN with Mongo, Express, Angular, and Node_](Books.html#Getting_MEAN)\nand even setup the resulting app on [Heroku](https://www.heroku.com/) and\n[MongoLab](https://mongolab.com/).\n\nYou can see the results\n[here](https://afternoon-cliffs-9951.herokuapp.com/Books.html).","date":"2016-01-02","pretty_date":"January 02, 2016"},{"pretty_date":"December 12, 2015","date":"2015-12-12","body":"Finally managed to replace some of my CGI scripts with\n[AngularJS](https://angularjs.org/) applications.  The apps get their contents\nfrom CGI scripts that read from the `data` directory and produce JSON.  I\nstarted working on them after reading\n[_AngularJS in Action_](Books.html#AngularJS_in_Action), but got stuck\nafter my code landed in an infinite loop.  I caught a break by looking at the\nAngularJS chapters of\n[_Getting MEAN with Mongo, Express, Angular, and Node_](Books.html#Getting_MEAN)."},{"body":"Today, I got to replace one of my coworkers with a very small [Python] script.\n\nWe are working on two applications that communicate via a\n[RabbitMQ](https://www.rabbitmq.com/) message bus.  I am working on one of the\napps and he is working on the other.  My app sends a signal and his app replies\nwith adjustments based on offline analysis.  In order to test my app, I needed\nto simulate his side of the conversation.  So I wrote a small Python script that\nlistens to RabbitMQ for my signals and returns some canned adjustments on the\nmessage bus.\n\nI have not replaced him definitively; we will need his fully fledged application\nwith its real data.  But it was a start.  :-)","pretty_date":"December 11, 2015","date":"2015-12-11"},{"body":"Got to pair program at work today.  It had been way too long.  I took the\nopportunity to show the new guy around the code base and explain some of the\npatterns we've been using.  And we even did a little bit of\n[ping-pong programming](http://c2.com/cgi/wiki?PairProgrammingPingPongPattern).","date":"2015-12-04","pretty_date":"December 04, 2015"},{"pretty_date":"October 29, 2015","date":"2015-10-29","body":"Someone posted a\n[cool article on distributed agile teams](https://plus.google.com/117886823273379925683/posts/FhSaF4DkqHe).\nThey propose to form teams around features instead of roles.  This gives more\nindependence to remote groups and reduces friction since as they grow more\nconfident, they can own more decisions.\n\nI wonder what would happen if instead of breaking up a classic organization to\nmake some of the parts remote, we started with an open source organization\ninstead.  Open source is much more decentralized and members can maintain\ncompletely independent schedules.  Which agile practices would make continue to\nmake sense and which ones would be irrelevant?"},{"body":"My GitHub webhook was a little too chatty with its digests, so I had to clamp\ndown on security.","date":"2015-10-27","pretty_date":"October 27, 2015"},{"date":"2015-10-26","pretty_date":"October 26, 2015","body":"Figured out how to verify, using Perl, the GitHub secret digests used to\nauthenticate webhooks.  I also move the secret key to an external file.  Now,\nwhenever I push a commit to my repo on GitHub, my website is updated\nautomatically.\n\nContinuous delivery FTW.\n\n_With a few false starts._"},{"body":"Reading on GitHub webhooks, so I can automate updating the website whenever I\npush commits to the repo.  There is some code about verifying the origin of the\nwebhook, but it is only in Ruby.  I need to find the Perl equivalent.\n\nAlso came upon a great article by Ron Jeffries on\n[getting rid of the Backlog](http://ronjeffries.com/articles/015-10/the-backlog/article.html),\nwith a capital B.  He proposes a drastic move away from long-term planning and\nkeeping everyone focused on in-the-moment discussions.  Some ideas that stood\nout: deploy before the product review meeting to show live features, the product\nreview is where it's at, the product owner keeps a personal backlog on index\ncards away from prying eyes.  It would be a tough sell to make upper management\ngive up their false sense of predictability.  I'm not ready to push things as\nfar as Ron does, but it's always a good idea to challenge your assumptions.","pretty_date":"October 23, 2015","date":"2015-10-23"},{"body":"Found a really interesting article where Richard Feynman talks about\n[integrity in scientific discourse](http://fabiusmaximus.com/2009/02/12/feynman/).\nHe emphasizes the importance of \"bending over backwards to show how you're maybe\nwrong.\"  While this kind of integrity is par for the course when I talk to\nfellow technologists, I find that it doesn't work quite as well with non-STEM\npeople.  And don't get me started on demanding it from others: challenging their\nglib statements is tantamount to calling them liars.","date":"2015-10-21","pretty_date":"October 21, 2015"},{"body":"I remembered to use Python's\n[`SimpleHTTPServer`](https://docs.python.org/2/library/simplehttpserver.html)\nto create a very simple web server that only serves a folder and its files (and\nsubfolders).  Makes debugging my AngularJS app that much easier.","pretty_date":"October 15, 2015","date":"2015-10-15"},{"body":"Tried to write my first AngularJS app.  It's a variation on this Journal.  I\nalready wrote a version of the CGI script that returns the blog contents as a\nJSON object.  Next, I want to write an AngularJS app that consumes this JSON and\nrenders it on the screen.\n\nI'm struggling to find clear, concise explanations for doing simple things.  The\nexamples and tutorials always muddy the waters with trying to do something\nuseful as the same time as they are illustrating how to do a service or use\n`$http`.\n\nI managed to get an initial version to run, with a hard-coded JSON in my\ncontroller.  Then, I tried to use a service to fetch the JSON dynamically.  At\nfirst from a file, but ran into browser limitations regarding which protocols\nare allowed to access resources in other domains.  I couldn't run it locally and\ndistributed debugging doesn't appeal to me.","date":"2015-10-14","pretty_date":"October 14, 2015"},{"date":"2015-10-08","pretty_date":"October 08, 2015","body":"Learned about [Otto](https://ottoproject.io/), a new tool to manage\ndevelopment versus deployment environments.  It uses virtualization technologies\nlike [Vagrant](https://www.vagrantup.com/) and infrastructure management\ntechnologies like [Terraform](https://terraform.io/).  Run one command to spin\nup a development environment based on current best practices (opinionated?).\nRun another command to deploy to your (opinionated?) production environment.  I\nlike the idea of automating all this configuration management.  It doesn't\nauto-detect Grails applications yet, though.  :-(\n\nOn a separate note, the [USGS](http://www.usgs.gov/) wants to use Twitter to\ndetect earthquakes, kinda like [`xkcd`](https://xkcd.com/723/) had predicted.\nHere is a\n[news report on USGS](http://www.nbcnews.com/tech/social-media/twitter-being-used-usgs-detect-earthquakes-n440976)."},{"pretty_date":"September 09, 2015","date":"2015-09-09","body":"More work on using [Tufte CSS](https://github.com/daveliepmann/tufte-css).  I\nmight be able to get away with minimal changes to the Perl script that processes\nmy wiki notation.\n\nI tried to apply it to my blog too.  Quoted paragraphs run the full width of the\npage instead of staying within the main text column because I don't wrap their\ncontents in `<p>` tags.  And the `<pre>` tags are hard to read when\nI have to scroll horizontally; code snippets run out of horizontal room very\nquickly.\n\nThere are times when I use numbered lists when the order matters, and these also\nrun the full width of the page, which looks strange.  I also use bullet lists\nwhen the ordering does not matter; but the Tufte style removes the bullets,\nturning the list into indented (short) paragraphs that are somewhat less\npowerful."},{"body":"Tried to switch my script that prints my [recent readings](Books.html) list to\n[Tufte CSS](https://github.com/daveliepmann/tufte-css).  I use some specific\nmarkup in my private wiki notation that ends up looking weird in Tufte CSS.","date":"2015-08-31","pretty_date":"August 31, 2015"},{"body":"Found [Tufte CSS](https://github.com/daveliepmann/tufte-css), an open-source\nstylesheet to make web pages in the style of\n[Edward Tufte](http://www.edwardtufte.com/)'s books and handouts.  I want to\noverhaul my website design, so why not give this a try?","pretty_date":"August 30, 2015","date":"2015-08-30"},{"body":"I found a cool plugin for the [Atom](https://atom.io/) editor that lets people\nshare a session for [pair programming](https://atom.io/packages/atom-pair).\nYou can invite others to join the session using [Slack](https://slack.com/).\nAt work, we have collaborators that live in Europe and this could help us pair\nprogram.  Or even pairing with my office coworkers when one of us is working\nfrom home.","pretty_date":"August 12, 2015","date":"2015-08-12"},{"pretty_date":"July 08, 2015","date":"2015-07-08","body":"A friend mentioned [Meteor](https://www.meteor.com/) as a JavaScript framework\nfor single page applications.  An application developed with it can manage its\nown instance of MongoDB.\n"},{"body":"Back in the days, there was LAMP (Linux, Apache, MySQL, PHP).\n\nNow, it is [MEAN](http://mean.io/) (MongoDB, Express, AngularJS, Node.js).\n\nI also found a\n[Quora question about relevant web development technologies](http://www.quora.com/What-are-the-10-most-important-things-to-learn-in-web-development-as-of-2015).\nI was a little sad that no one cared to list any Java-based technologies.  I\nneed to modernize my skillset, including to figure out\n[Docker](https://www.docker.com/).  I did find an (almost) nice\n[Docker explanation](https://www.digitalocean.com/community/tutorials/docker-explained-using-dockerfiles-to-automate-building-of-images).","pretty_date":"June 25, 2015","date":"2015-06-25"},{"date":"2015-04-20","pretty_date":"April 20, 2015","body":"Played a _little_ bit with [Pure](http://purecss.io/), a minimalist CSS\nframework."},{"pretty_date":"April 16, 2015","date":"2015-04-16","body":"We have a problem at work in that we're still using Grails 1.3.7, which is about\nfive years old.  We couldn't switch to Grails 2.0 when it came out because it\nmeant porting all of our code.  There was too much code and we couldn't stop\nshipping features for the time it would take to port all the existing code.\nThis has hampered our ability to use newer plugins that were written against\nGrails 2.0.\n\nNow, Grails 3.0.1 just came out.  The migration guide says:\n\n> The best approach to take when upgrading a plugin or application (and if your\n> application is using several plugins the plugins will need upgrading first) is\n> to create a new Grails 3.0 application of the same name and copy the source\n> files into the correct locations in the new application.\n\nSo, basically a new port all over again.  Maybe we'll be able to port our app\ndirectly from 1.3.7 to 3.0.1.  Someday.\n\nI thought this sucked pretty badly, until a came upon a discussion in the\nAngularJS world that AngularJS 2.0 is not backwards compatible and porting\napplications written with AngularJS 1.0 to the new AngularJS 2.0 will require a\nfair bit of rewrite.  So even though our situation with Grails is uncomfortable,\nat least we are not alone.  At least one other platform is forcing its\ndevelopers to do major rewrites in order to upgrade to their latest and greatest\nversion.\n\nThen, I came upon a tweet that said\n\"[One does not simply upgrade Rails](https://twitter.com/agile_memes/status/568718928345583616)\",\nas a parody of Boromir saying \"One does not simply walk into Mordor.\"\n\nAnd then, I saw this\n[keynote by Guido van Rossum where he talks about the woes of upgrading to Python 3](https://youtu.be/G-uKNd5TSBw?t=2m20s).\nOne more platform where upgrades will be difficult this year.\n\nI guess we're in great company indeed."},{"pretty_date":"April 10, 2015","date":"2015-04-10","body":"I finally switched to [GVM](http://gvmtool.net/) to manage my Grails and\nGroovy environments, instead of doing it manually in my `.bashrc` file."},{"date":"2015-04-02","pretty_date":"April 02, 2015","body":"I came upon [Showdown](https://github.com/showdownjs/showdown), a way to render\n[Markdown](http://daringfireball.net/projects/markdown/) as JavaScript embedded\nin an HTML page.  I wrote [a tiny test page](AngularShowdownTest/index.html)\nusing [AngularJS](https://angularjs.org/) to try writing markdown text in a\n`<textarea>`, convert it to HTML using Showdown, and use the generated HTML to\npopulate a `<div>`."},{"pretty_date":"April 01, 2015","date":"2015-04-01","body":"I found [a great tutorial](http://www.w3schools.com/angular/) for\n[AngularJS](https://angularjs.org/).  It is quick to get through and you can\ntry out the code snippets live in your browser.  I specially liked the part about\n[AJAX integration](http://www.w3schools.com/angular/angular_http.asp)."},{"pretty_date":"March 11, 2015","date":"2015-03-11","body":"Just as I'm in the middle of reading\n[_The Responsive Web_](Books.html#The_Responsive_Web), I get an email from\n[Google Webmaster Tools](https://www.google.com/webmasters/) to the effect\nthat my website is not mobile-friendly.  I suspected as much, but now they\nsuggest that Google will downgrade me in mobile searches because I am not\nmobile-friendly.  Their tools analyze my pages and make recommendations on how\nI can make them more responsive.\n\nThe first recommendation is to set the `viewport` meta header.  I think I want\nto get a more holistic view of responsive design, before I blindly follow\nblanket recommendations that are not taking my content into consideration.\n\nOn a separate note, I've been glancing at\n[React](http://facebook.github.io/react/) vs.\n[AngularJS](https://angularjs.org/) for a bit of fun.  I really liked this\n[comparison of the two](https://www.airpair.com/angularjs/posts/angular-vs-react-the-tie-breaker)\nwhich makes good points about what I should be looking for in a JavaScript\nframework."},{"pretty_date":"January 14, 2015","date":"2015-01-14","body":"I want to start a side project to try out the latest technologies.\n\n- Responsive frontend\n- Single page app with Ajax communication to the server\n- Grails 2 on the server\n- NoSQL database (possibly more than one, like Redis + MongoDB)\n\nI found a great link\n[comparing NoSQL databases](http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis).\n\nI'm thinking the project should have the following general steps:\n\n1. General requirements (what will it do)\n1. Wireframes (operations with very rough screens)\n1. Low-fi design (general page and panel structure)\n1. Data model (information flow between database and frontend)\n1. Wire in slices of functionality one by one (rough frontend, middleware, database)\n1. Find somewhere to host it all at no additional cost\n\nThe whole thing would have to be in\n[GitHub](http://github.com/jeantessier/jeantessier.com), of course.\n\nAn obvious candidate is to redo my website.  Or at least the blog and books read\nsections."},{"body":"By pure chance, I found [Asciidoctor](http://asciidoctor.org/), a tool that\nwraps around [AsciiDoc](http://asciidoc.org/) and provides default styling.","pretty_date":"December 18, 2014","date":"2014-12-18"},{"pretty_date":"November 29, 2014","date":"2014-11-29","body":"Installed both [MongoDB](http://www.mongodb.com) and\n[Neo4J](http://neo4j.com) just for fun.  Next, I'll be looking for a side\nproject where I can use either one of them."},{"date":"2014-09-28","pretty_date":"September 28, 2014","body":"I was reading the second edition of\n[_Grails in Action_](Books.html#Grails_in_Action_Second_Edition) and\nit has a whole chapter dealing with NoSQL.  It showcases some of the more common\nNoSQL databases and possible usage patterns.\n\n- [Redis](http://redis.io/) for key/value pairs, good for caching and stats.\n- [MongoDB](http://www.mongodb.org/) for documents, good for JSON and map/reduce.\n- [Neo4J](http://neo4j.com/) for graphs, might be useful for Dependency Finder.\n\nThese have good integration plugins for Grails."},{"body":"I found out about [AsciiDoc](http://asciidoc.org/), another tool to convert\nplain text to HTML.  At first look, it appears richer than\n[Markdown](http://daringfireball.net/projects/markdown/), and some of its\nsyntax is very close to what I've been using.  It can generate PDF in addition\nto HTML.","pretty_date":"January 23, 2014","date":"2014-01-23"},{"body":"As part of re-writing \"Books.html\", I added a piece to generate a list of books\nthat I can use as an index during navigation.  The mix of Perl and embedded HTML\nis really awkward.\n\nI also took a very first stab at combining this index with some kind of\nnavigation based on [jQuery](http://docs.jquery.com/).  It failed miserably,\nso I still have quite a bit of work to do.","date":"2014-01-12","pretty_date":"January 12, 2014"},{"date":"2014-01-11","pretty_date":"January 11, 2014","body":"I'm rewriting \"Books.html\" to generate a set of static HTML pages that I can then\nupload, instead of generating everything from scratch every time.  I will still\nneed to assemble them into some kind of navigation structure.\n\nMy Perl is rusty.  I'm only sticking with it because I don't feel like\nre-writing all the wiki-like conversions.  The are a bunch of Perl regular\nexpressions and mapping them to another language would be delicate.  It might be\nmore expedient to redo this logic in something like Groovy than stick to Perl."},{"body":"I noticed that the CGI scripts on my site are taking forever to execute.  When\nI login to the server and run them by hand, they are just fine.  But somehow,\nwhen the are executed through the web, it takes a long time to launch them.  I\nonly found an obscure reference to PHP4 vs. PHP5 on the Dreamhost pages, but I'm\nnot even using PHP!  They are just simple CGI scripts written in Perl; 20-year\nold technology.\n\nI looked into using [Markdown](http://daringfireball.net/projects/markdown/)\ninstead of my own flavor of wiki markup.  I'd have to convert my book and\njournal entries, but it would be a more standard syntax that's supported by\nsomebody else.  But the default processor only converts to what goes inside the\n`<body>` tag.  I'd still have to wrap it with additional markup and figure\nout the CSS stylesheet, based on elements that I'd have to reverse engineer from\nthe generated HTML.  Looks like a lot of work.","pretty_date":"January 10, 2014","date":"2014-01-10"},{"pretty_date":"April 19, 2013","date":"2013-04-19","body":"I was listening to a Java/Groovy podcast in French called\n[Les Cast Codeurs Podcast](http://lescastcodeurs.com/) and they mentioned a\nbenchmark of different web frameworks that included Grails.\n\n- [Framework Benchmarks](http://www.techempower.com/blog/2013/03/28/framework-benchmarks/)\n- [Frameworks Round 2](http://www.techempower.com/blog/2013/04/05/frameworks-round-2/)\n\nWe can see that, in the context of the benchmark, Grails is at 5-15% of optimal\nperformance for handling JSON (the top performer is 100% and Grails is 5-15% of\nthat), which is not very impressive.  It fared much better when making multiple\nqueries against a database, where it ranked 42-57%.  Given how much development\ntime it saves me, I'm willing to live with that.\n\nIt still vastly outperformed RoR, whether on JRuby or on a regular Ruby VM."},{"date":"2013-03-07","pretty_date":"March 07, 2013","body":"I found a cool [jQuery](http://docs.jquery.com/) plugin for doing\n[sparklines](http://omnipotent.net/jquery.sparkline/#s-about).  It reads its\ndata from a tag's contents, or it can get it passed in from JavaScript."},{"body":"A tweet by Kent Beck pointed me to this blog entry by Steve Yegge about\n[coding style](http://steve-yegge.blogspot.com/2008/02/portrait-of-n00b.html)\nand\n[loose vs. strong typing](http://steve-yegge.blogspot.com/2008/02/portrait-of-n00b.html).\nIt mentions how novice programmers try to specify everything to the utmost\ndegree whereas experts just get things done.","date":"2013-01-30","pretty_date":"January 30, 2013"},{"body":"I was listening to French programming podcast\n[Les Cast Codeurs](http://lescastcodeurs.com/) \n[episode 68](http://lescastcodeurs.com/2012/11/29/les-cast-codeurs-podcast-episode-68-devoxx-2012-et-les-putchettes/)\nabout [Devoxx 2012](http://devoxx.com/display/DV12/Home).  They asked\nattendees about their favorite session and a majority of them mentioned the\nsession on [AngularJS](http://angularjs.org/).  It was led by my good buddy\n[Mi&#353;ko Hevery](http://misko.hevery.com/) and his AngularJS co-conspirator\nIgor Minar.  I am very happy for their success with AngularJS.  I'm more geared\ntowards jQuery at the moment, but AngularJS looks like a very nice JavaScript\nframework too.","date":"2013-01-29","pretty_date":"January 29, 2013"},{"body":"Found two interesting tools.\n\n[YSlow](http://yslow.org) is a browser plugin that analyses a page and gives\nyou advise to make it better.  It looks at how the code is organized how has\nrules for HTML, CSS, and JavaScript.  It also looks at all the resources the\npage tries to load and makes recommendations on those too.\n\n[Time.is](http://time.is) shows you the current time in another city.  You can\neven show multiple timezones side-by-side so you can plan meetings and get\ntogethers.  Just append `/your_city` to the URL, like:\n\n- [Montr&eacute;al](http://time.is/montreal)\n- [Cluj](http://time.is/cluj)","date":"2013-01-18","pretty_date":"January 18, 2013"},{"date":"2013-01-16","pretty_date":"January 16, 2013","body":"Today, I was explaining stand-up meetings to a non-technical team member.  I\nremember learning about this practice while reading about eXtreme Programming.\nIt was also popularized by Scrum, but I couldn't recall if one or the other was\nthe originator.  The\n[Wikipedia entry](http://en.wikipedia.org/wiki/Stand-up_meeting) didn't say\nwhere stand-up meetings came from, but an\n[entry on freakonomics](http://www.freakonomics.com/2012/02/03/all-hail-the-stand-up-meeting/)\nquoted someone who quoted someone who claimed they went as far back as World\nWar I.  (For more on third-degree quotes, see _The Name of the Rose_ by Umberto\nEco.)\n\nThe original quote is by Allen C. Bluedorn, a college professor at the\nUniversity of Missouri, from a 1999 paper titled \"The Effects of Stand-Up and\nSit-Down Meeting Formats on Meeting Outcomes\".  The one book I could find by him is\n[The Human Organization of Time](../Books.html#The_Human_Organization_of_Time).\nThe description promises a discussion of the nature of Time and how we perceive\nit.  Seems very interesting."},{"body":"Launched [Directly.com](http://directly.com) and got a mention in\n[AllThingsD](http://allthingsd.com/20121203/directly-is-a-taskrabbit-for-online-customer-service/).\nAll this after a crazy weekend tying up loose ends and making sure the site was\ntight.  At this time last year, we had officially launched Insidr.com and gone\nthrough the pains of changing the DNS from Insidr.net to Insidr.com.  The\ninfrastructure we deployed at the time, three frontends and a DB backend, should\nbe good enough for some time, still.","pretty_date":"December 03, 2012","date":"2012-12-03"},{"body":"Move all the code for this website to\n[GitHub](http://github.com/jeantessier/jeantessier.com).  Now that the FTP\ncredentials are externalized and that I've changed the password on the server,\nI'm ready to share my code with the world.  :-)","date":"2012-03-14","pretty_date":"March 14, 2012"},{"date":"2011-10-01","pretty_date":"October 01, 2011","body":"Trying to convert my database of readings into an import file for\n[Goodreads](http://goodreads.com).  The formatting for the CSV file is giving\nme trouble.  I look at their documentation and sample, to figure out what\ncolumns to output, but is seems a little incomplete.  I end up having to write\nreview material in one sample book and looking at the Goodreads export file to\nreverse-engineer what other columns there might be.\n\nAt first, I considered writing it in Groovy, but my wiki-like logic is all in\nPerl.  My Perl is rusty.  Very rusty."},{"body":"Dropped off my Alienware PC at the recycling center.  :-(","date":"2011-05-29","pretty_date":"May 29, 2011"},{"body":"Writing some serious CSS to make dialog bubbles.  Rounded-corner boxes and\ncustom images for the bubble's tail, complete with to-the-pixel adjustments to\ntie them together seamlessly.  I've been wanting for a long time to do this\nkind of fancy layout, but I could never get the time, somehow.","date":"2011-05-26","pretty_date":"May 26, 2011"},{"date":"2011-05-25","pretty_date":"May 25, 2011","body":"Decided to go PC-less.  I picked up my broken Alienware PC from the repair shop.\nI didn't call ahead and the PC was still in pieces: heatsink, CPU, DIMMs.  No\nmatter.  I got a\n[KWI-S2](http://www.kingwin.com/products/cate/accessories/adapters/manual/kwi_s2_manual.pdf)\nSATA-to-USB converter, so I can connect my two hard drives to my Mac to get the\nfiles back.  Best $17 ever."},{"pretty_date":"May 22, 2011","date":"2011-05-22","body":"Got a call from the repair shop.  The motherboard is fried.  They don't have a\nreplacement that will fit my CPU, so I need to build a new machine.  $100 plus\nparts.  I found a replacement motherboard on the internet for around $200, but\nthe sellers are few and are unknown to me, with mixed ratings.  I'm starting to\nconsider getting rid of my PC altogether.  We use the Macs almost exclusively\nnowadays anyway."},{"body":"Still haven't heard back from the local at-home repair crew.  I dropped off my\nAlienware PC at the repair shop.  They want $70 to diagnose the problem.","pretty_date":"May 14, 2011","date":"2011-05-14"},{"pretty_date":"May 13, 2011","date":"2011-05-13","body":"Wrote my first non-toy bit of [jQuery](http://docs.jquery.com/) for work.\nIt's a small voting exercise, making AJAX calls to the back-end and changing CSS\nclasses and counters to reflect the latest votes."},{"pretty_date":"April 29, 2011","date":"2011-04-29","body":"Emailed a local PC repair outfit to see if they can make a house call."},{"pretty_date":"April 22, 2011","date":"2011-04-22","body":"My Alienware PC is making a weird two-tone siren sound and won't start anymore."},{"date":"2010-12-15","pretty_date":"December 15, 2010","body":"Getting a little more familiar with [jQuery](http://docs.jquery.com/) and some\nJavaScript.  I have solid backend skills, and my HTML is pretty good.  I can do\nsome straightforward CSS but my JavaScript is still my weak point.  I just hate\nhaving to write and maintain multiple versions of the same code for different\nplatforms.  In all my current languages (Java, Ruby, etc.), the code is the same\non all platforms.  With JavaScript's uneven support in various browsers, it's\nhard to do something non-trivial that will work cleanly across all browsers.\nThis has been a real demotivator for me trying to learn this stuff so far."},{"body":"Moved some of my local tinkering projects to [GitHub](http://github.com/).\n\n- [`jeantessier/Mocking`](http://github.com/jeantessier/Mocking)\n- [`jeantessier/TwoStageGuiceProvider`](http://github.com/jeantessier/TwoStageGuiceProvider)\n\nAnd only **after** I had uploaded them did I realize that the `build.xml` file in\neach project contained my account password.  Drats!  I had to go and change it\nsuper quickly.","date":"2010-12-09","pretty_date":"December 09, 2010"},{"date":"2010-12-06","pretty_date":"December 06, 2010","body":"Started new job at [INSIDR](http://insidr.net/).\n[ShopWell](http://shopwell.com) is owned in part by\n[Social Ventur.es](http://socialventur.es).  They brought be on board their\nnew venture INSIDR because of my Grails knowledge and overall engineering\nskills.\n\nSetup [my profile](http://about.me/jeantessier) at\n[about.me](http://about.me/).  A friend showed it to me back in October and\nit's taken this long for me to get an invite to their invitation-only beta.\nWell, actually, I received the invite over two weeks ago but only acted on it\nnow."},{"pretty_date":"November 30, 2010","date":"2010-11-30","body":"Last day at [ShopWell](http://shopwell.com/)."},{"body":"So far, I've been managing the files for my website by hand, with only Emacs to\nedit the files.  Aside from CSS, each file contains everything it needs.  One\nupside is that I can open them locally with a browser.  The downside is that\nthere is a fair bit of code duplication between the files.\n\nI started to partition things a bit more.  I host my site on Dreamhost, which\nruns Apache and supports server-side includes.  I extracted some of the common\nnavigation into partials.  I also extracted the Google Analytics tracking code\nto its own `.js` file.  I know this defeats the purpose of Google's Asynchronous\nSnippet, which is to not delay the loading of the page by including other\nscripts synchronously.  But if it's the only one being loaded, the delays are\nbarely noticeable.  I timed it using Chrome's developer tools and the time to\nload a typical page went from just under 100ms to about 170ms.  A large increase\nbut still _fast enough_.","date":"2010-11-24","pretty_date":"November 24, 2010"},{"date":"2010-10-12","pretty_date":"October 12, 2010","body":"Found some more free fonts,\n[Fontin](http://www.josbuivenga.demon.nl/fontin.html) and\n[Fontin Sans](http://www.josbuivenga.demon.nl/fontinsans.html), that include\nbold and italics.  Fontin Sans even has bold-italics.  Both also include small\ncaps variations, but for some reason I couldn't get that part to work.  But I\nused the others successfully on my book blogs and on my home page."},{"body":"A friend of mine is participating in\n[24 Hour Comics Day](http://www.24hourcomicsday.com/), trying to write a\n24-page comic book in 24 hours.  Comic writer\n[Erik Larsen](http://en.wikipedia.org/wiki/Erik_Larsen) gave the participants\nthe following piece of advice:\n\n> Don't try to make it <u>beautiful</u>--try to make it <u>finished</u>.\n> \n> <u>Don't</u> do unnecessary drawing--<u>don't</u> do thumbnails--<u>don't</u>\n> do character design--do minimal pencils and plow through it.\n> \n> Your primary goal is to <u>get done</u>.  Make it bare bones--do rough\n> outlines--and plan to render and sweeten it AFTER you have 24-pages finished\n> in some form.  If you run out of time because you decided to make every page\n> awesome--you've failed.  It's okay to do shitty work.  People expect them to\n> be shitty--they always look pretty sloppy--the bigger shame is failing to\n> finish.  So plan on doing 24-rough, barebone pages.  Anything more is gravy.\n> I suggest that you work on it all as one piece--don't tackle it page by page\n> or it'll deteriorate as you go--don't stop for anything--if a panel is giving\n> you grief--move on and come back to it--keep your hands moving at all times.\n> \n> Use tools that allow you to work fast. You may think using a proper dip pen\n> and brush would be fine but you'll lose a lot of time dipping&mdash;you're\n> better off using markers (I used a Pentel Rolling Writer and a Sharpie to fill\n> in blacks&mdash;the originals are pretty ugly 15-years later but what the\n> hell).\n\nNow, this advice is for a very specific task: writing a 24-page comic in 24\nhours.  I suspect that it might be slightly different when working on a\nmasterpiece.  But the general idea of going for breadth before depth is still a\ngood idea to keep you on track and make sure you produce _some_ value before you\ntry to maximize that value.\n\nThis is eerily similar to a piece of advice in software development regarding\npremature optimization:\n\n> Make it run.  Make it right.  Make it fast.\n\nThat is, get something running first, however ugly it might be.  Once you have\nthat first step, you can go back over it to clean it up and design it a little\nbetter.  Only then should you consider optimizations to make it run faster,\nwith performance metrics to justify the need to optimization and to tell you\nwhen you've done enough.  I even found a fourth part on the web:\n_Make it small._\n\nTest-Driven Development applies the same principle: write a test that breaks,\nthen writes the simplest code to make the test pass.  That's _making it run_.\nAfter that, you have to immediately refactor the code mercilessly.  Make the\nintent clear, remove duplication, all the various ways you can _make it right_.\nAll the tests written so far make up a safety harness that allows you to\nrefactor without breaking anything.  If you want to optimize the code\nafterwards, you need metrics to drive it and the tests again guard you against\nbreaking something.\n\nThe first part, _making it run_, is similar Larsen's advice.  At that stage, do\nnot focus on esthetic concerns.  It is fast and furious.  And while you can get\na lot done this way, it is short-lived.  Larsen's comics\n_are pretty ugly 15 years later_.  Code that's quickly hacked together is hard\nto maintain and increasingly difficult to extend.\n\nThe second part, _making it right_, is there to ensure longevity of the work.\nThis is where you clean it up, so it will last a long time.  This is where you\nmake the code easy to maintain and extend.  This is where attention to detail is\nreally important, where craftsmanship really shows.  It is also the part that is\nhardest to convey to the uninitiated.  Especially in software, the code where\nEngineering spends all of its time is hidden from the Product Development\nstakeholders.  If you only show them outputs from _making it run_, they might\nnot understand why you cannot do everything at that speed.  But that code rots\npretty fast.  Time and time again I've seen projects grind to a halt under the\nweight of their technical debt.  _Making it run_ is incurring the debt but\n_making it right_ is managing it.  You don't have to pay the entire balance\neverytime, but you cannot ignore it for too long either.  If you want the\nproduct owners to stay happy for the long run, don't skimp on _making it right_.","pretty_date":"October 02, 2010","date":"2010-10-02"},{"body":"I found a few places when I could try web fonts on the site, starting with this\nblog's dates.","pretty_date":"September 04, 2010","date":"2010-09-04"},{"pretty_date":"September 02, 2010","date":"2010-09-02","body":"I played a bit with downloadable fonts using the `@font-face` support in CSS.\nI got some free fonts from\n[exljbris Font Foundry](http://www.josbuivenga.demon.nl/) and tried them on\nmy reading list.  The free fonts don't come with italics and bold versions.  I\nuse italics for quotations and I sometimes use bold for emphasis.  All that goes\naway if I limit myself to these free fonts.  (And no, I'm not going to start\npaying for fonts for personal use on my personal website.)  Fertigo Pro looks\nnice, if it weren't for the lack of styling."},{"pretty_date":"September 01, 2010","date":"2010-09-01","body":"Kent Beck tweeted:\n\n> [**KentBeck**](http://twitter.com/KentBeck)  \n> trying out the Anonymous Pro font for source code:\n> [http://www.ms-studio.com/FontSales/anonymouspro.html](http://www.ms-studio.com/FontSales/anonymouspro.html)\n> clear and readable\n\nI've been interested in fonts lately.  At work, we started using\n[Museo](http://www.josbuivenga.demon.nl/museo.html) for the\n[website](http://shopwell.com).  It got me thinking that I could spruce up\nthis blog (and my reading reviews) with some clever use of fonts.\n\nI try not to customize my environment too much anymore, because then it gets\nstrange when I have to work on a non-customized machine.  Managing long lists\nof fonts has always been problematic.  It's even worse on the web since you\ncannot assume what's gonna be available in the user's browser.  That's why so\nfar, I've been relying solely on the lowest possible common denominator when\ndoing web work, which means the\n[generic font families](http://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#generic-font-families)\nin CSS.\n\nBut now, there are all kinds of web fonts becoming available.  Browsers can\ndownload them from the web as needed and use them to render text.  This opens up\na whole new world of possibilities.  Now, the problem becomes choosing the best\nfont among the thousands that are available.  And making sure that the terms of\nusage let me use them for free.\n\nFor now, I'm experimenting with a simple `\"font-family: cursive\"` until I can\nfind time for more exploration.  I also installed Anonymous Pro in my IDE to try\nit out.  So far, it looks a little clearer than the default _monospaced_.  Other\nfixed-width alternatives looked good too, but the code highlighting was not as\neffective.  This new font looks well calibrated.\n\nInteresting links regarding fonts on the web:\n\n- [Web Fonts](http://www.w3.org/standards/techs/webfonts)\n- [MyFonts](http://myfonts.com/)\n- [typekit](http://typekit.com)"},{"body":"I went to lunch at Google today.  A friend of mine is leaving Google and he\ninvited me over to catch up.  It was a little strange to set foot in the place\nafter ten months.  Thank goodness, it is still Nerd Mecca.  I saw a few familiar\nfaces around the cafeteria.  One guy hadn't even realized I was gone.","pretty_date":"August 24, 2010","date":"2010-08-24"},{"date":"2010-08-12","pretty_date":"August 12, 2010","body":"I worked through the turorial for [Hadoop](http://hadoop.apache.org/).  I had\nto turn on remote login on my MacBook Pro to get the pseudo-distributed mode\nrunning.  It was really cool to see MapReduce running.\n\nI got an [Amazon Web Services](http://aws.amazon.com/) account when I read\nabout [Amazon Elastic MapReduce](http://aws.amazon.com/elasticmapreduce/).  It\nis an on-demand Hadoop cluster for running MapReduce jobs.  Cool!  You pay only\nfor what you use, by the hour.  Unfortunately, there is no way for developers\nto run small jobs on it for free either to get more familiar with the technology\nor developing a new job.  The minimum cost appears to be $0.10, but these can\naccumulate quickly.  And while you can do test runs on your local machine, it\ndoesn't take into account all the other provisioning that you might need to do\nto run on the Elastic MapReduce.  Amazon's pricing information hints at separate\nEC2 and S3 charges, so there might be more to running a Hadoop job on Amazon."},{"body":"Refresher look at the [Hadoop project](http://hadoop.apache.org/).  I see a\nnumber of sub-projects that look a lot like the parts of Google's MapReduce\nstack.\n\n<div class=\"table-wrapper\">\n<table class=\"centered-triplet\">\n    <thead>\n        <tr><th>Hadoop</th><th width=\"33%\"></th><th>Google</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>HBase</td><td>&DoubleRightArrow;</td><td>Bigtable</td></tr>\n        <tr><td>HDFS</td><td>&DoubleRightArrow;</td><td>GFS</td></tr>\n        <tr><td>Hive</td><td>&DoubleRightArrow;</td><td>???</td></tr>\n        <tr><td>Pig</td><td>&DoubleRightArrow;</td><td>Sawzall</td></tr>\n    </tbody>\n</table>\n</div>\n\nWhen I saw the brief description of [Pig](http://hadoop.apache.org/pig/) on\nthe Hadoop home page, I immediately thought of Google's\n[Sawzall](http://labs.google.com/papers/sawzall.html) language which you can\ndescribe as scripting for MapReduce.  Sawzall is extremely powerful.  You can\nexpress fairly involved analysis logic in very few lines of code.  I was hoping\nfor something as powerful in Pig, but the sample code seems a lot more verbose\n(and obtuse) than Sawzall.\n\nAlso, Hive reminded me of Google's cluster for running Sawzall scripts on log\ndata.  But Hive looks to be applicable beyond just log processing.\n\nI was pleased to see that Hadoop claims great support for the Amazon EC2 and S3\nstack.  That could come in handy if we ever start to use it at ShopWell.","date":"2010-06-03","pretty_date":"June 03, 2010"},{"pretty_date":"May 26, 2010","date":"2010-05-26","body":"Funny exchange on Twitter between two of my favorite software people:\n\n> [**KentBeck**](http://twitter.com/KentBeck)  \n> .@[cirillof](http://twitter.com/cirillof) sciosciamento is just such an\n> awesome concept that it stuck.  it also says a lot about italian culture that\n> there's a word for it.  \n> <span style=\"font-size: smaller\">10:27 AM May 26th</span>\n> \n> [**martinfowler**](http://twitter.com/martinfowler)  \n> @[KentBeck](http://twitter.com/KentBeck) ok - you've got me interested. So\n> what does it mean (in 140 chars ;-)  \n> <span style=\"font-size: smaller\">10:39 AM May 26th</span>\n> \n> [**KentBeck**](http://twitter.com/KentBeck)  \n> .@[martinfowler](http://twitter.com/martinfowler) ian italian, but i\n> understand sciosciamento to mean the feeling of wind in your hair as you drive\n> a convertible in the sun  \n> <span style=\"font-size: smaller\">10:51 AM May 26th</span>\n> \n> [**martinfowler**](http://twitter.com/martinfowler)  \n> @[KentBeck](http://twitter.com/KentBeck) ah yes that needs a word. And it\n> seems fitting that it would be Italian.  \n> <span style=\"font-size: smaller\">10:57 AM May 26th</span>\n> \n> [**KentBeck**](http://twitter.com/KentBeck)  \n> @[martinfowler](http://twitter.com/martinfowler) although for us it's more a\n> term of nostaligia :-)  \n> <span style=\"font-size: smaller\">11:03 AM May 26th</span>\n> \n> [**martinfowler**](http://twitter.com/martinfowler)  \n> @[KentBeck](http://twitter.com/KentBeck) you're lucky. I lost my hair before\n> ever being in a convertible.  \n> <span style=\"font-size: smaller\">11:05 AM May 26th</span>\n\nLater, @[cirillof](http://twitter.com/cirillof) offered some more explanation.\nHe is Francesco Cirillo, the originator of the\n[Pomodoro technique](http://www.pomodorotechnique.com/).\n\n> [**cirillof**](http://twitter.com/cirillof)  \n> &num;sciosciamento is a mood. you're sitting still and let the wind caress you.\n> and the wind embraces you. it is better not to move...  \n> <span style=\"font-size: smaller\">1:43 AM May 27th</span>\n> \n> [**cirillof**](http://twitter.com/cirillof)  \n> ...otherwise the wind would go elsewhere... #sciosciamento is a Neapolitan\n> philosophical practice. you have to practice a lot to be a master  \n> <span style=\"font-size: smaller\">1:47 AM May 27th</span>\n\nThe whole thing reminds me of some of the banter between two of my favorite\nscience-fiction authors: Arthur C. Clarke and Isaac Asimov."},{"date":"2010-05-12","pretty_date":"May 12, 2010","body":"[Martin Fowler](MartinFowler.html) was in town for a \"ThoughtWorks'\nTechnologist Forum\".  It was a free event hosted by ThoughtWorks, I just had to\nattend.\n\nI got there early, hoping to meet some familiar faces.  I worked with\nThoughtWorkers at Google and there's a Google office nearby, maybe someone\nwould be there too.  I met [Jonny Leroy](http://www.digitaldimsum.co.uk/),\na ThoughtWorker who was an agile coach with me at Google and I got to show him\nShopWell and we got to catch up a bit.  I immediately recognized him and\nremembered what we had worked on together, but I drew a blank with regard to\nhis name.  I remembered the guy but couldn't recall the name.  I had to\nsurreptitiously grep through my notes from back then, which I had on my laptop,\nto get at this missing piece.\n\nBack to Martin Fowler.  The talk had three parts: continuous integration and\ndeployment, selected questions fielded by the audience, and domain specific\nlanguages, his latest thing.\n\nThe first part started about continuous integration and how it helps reduce\npainful integrations.  \"If it hurts, do it more often,\" as they say.  This\npart was probably aimed at laggards who still don't get continuous integration.\nFowler mentioned the book\n[_Continuous Integration_](Books.html#Continuous_Integration), part of his\nSignature Series at Addison Wesley.  It is a good book if you're not\ntechnical and want to learn about software practices.  But any developer worth a\ndime only needs a single figure out of that book.  The talk got more interesting when\nhe moved past this into \"continuous delivery\" territory.  He talked about build\npipelines and introduced terminology to help communication about the various\nstages (commit, acceptance, performance, deploy) and the degrees of automation\nrequired by each.  There is a new book in the works,\n[_Continuous Delivery_](http://amzn.com/0321601912),\ndue out later this year.\n\nFor the second part of the evening, Fowler answered some questions\nsubmitted by attendees when they registered for the talk.  I was happy that he\npicked my question: whether it is better to hire people already familiar\nwith your platform or to hire talented individuals who will learn it as they\ngo.  I stole it from one of the presentations at\n[Startup Lessons Learned](http://sllconf.com).  His take on it is to hire\ncandidates with solid design skills, they will thrive in any environment.  It\nhelps to have one platform expert on hand to answer questions.  Jonny also\ntold me about ThoughtWorks' system of T's: broad skill sets with one or two deep\nareas of knowledge.  Just make sure the T's on your team don't all line up\nexactly, so you have appropriate coverage.  Other questions dealt with how to\nwrite stories (strict templates are for process weenies), planning defect fixes\n(beware of _broken windows_), and active objects (use lazy loading at first and\noptimize only as needed).\n\nThe last part was about domain specific languages (DSLs).  Fowler has been\nblogging and tweeting about this for the past couple years, so it was to be expected.\nHe has a book coming out on the topic,\n[_Domain Specific Languages_](http://amzn.com/0321712943).\nHe talked about the _Unix tradition_ of creating a new language and writing a\nparser for it, using `yacc` or `YAML`, what he calls _external DSLs_.  He\ncompared to the Lisp tradition of writing languages as flavors of Lisp and\nrunning them using the Lisp environment, a tradition picked up by\nthe Ruby community.  He calls these _internal DSLs_ or _embedded DSLs_ since\nthey live inside a host language.\n\nThe evening concluded with some mild Q&amp;A.\n\nAfter the talk, I got Martin to sign my copy of\n[_Planning Extreme Programming_](Books.html#Planning_Extreme_Programming),\nwhich was already signed by co-author Kent Beck.  Afterwards, he came to say hi\nto Jonny, at which point Jonny introduced me to Martin Fowler.  I've been\nintroduced now, I'm no longer just a nerd in line after a talk.  :-)\n\nUnrelated to this, but today I came upon a\n[great talk by Steve Freeman](http://www.infoq.com/presentations/Sustainable-Test-Driven-Development)\n(of [jMock](http://jmock.org/) fame).  It is about writing good tests that are\neasy to maintain, as opposed to record-replay types that are very brittle.  It\ncovers material from his new book:\n[_Growing Object-Oriented Software, Guided by Tests_](Books.html#Growing_Object_Oriented_Software)."},{"pretty_date":"May 05, 2010","date":"2010-05-05","body":"Today, at [ShopWell](http://shopwell.com/), we released the code from our\nlatest sprint.  This release is very personal to me because of the new\ningredient highlighting feature.\n\nA few sprints ago, we built the grade explanation feature that shows some of\nthe good and not-so-good things about each product.  At the time, I came up with\nthe idea to highlight the elements of the page that relate to these judgments.\nI pitched it to the product manager, discussed it with the graphic designer and\nfront-end developer, but there was no room in the schedule at the time.  Until\nnow.  We collaborated really well to make it happen.  The graphic designer,\n[@k4rl](http://twitter.com/k4rl), made it look so much better than what I had\npictured in my mind.  The front-end developer\n[@mepetestuart](http://twitter.com/mepetestuart), used his JavaScript magic\nto make it super dynamic.  I coded all the back-end work to figure out what\nneeded to be highlighted and whether it was good or bad.  It all came together\nbeautifully and I hope you enjoy it too.\n\nGo look up products on [ShopWell](http://shopwell.com/) and hover above some\nof the characteristics it lists for them."},{"pretty_date":"April 26, 2010","date":"2010-04-26","body":"Kent Beck tweeted:\n\n    [**KentBeck**](http://twitter.com/KentBeck)\n    my [#sllconf](http://twitter.com/search?q=%23sllconf) talk was widely misinterpreted.\n    presentation: [http://www.slideshare.net/KentBeck/to-agility-and-beyond](http://www.slideshare.net/KentBeck/to-agility-and-beyond)\n    video: [http://www.justin.tv/startuplessonslearned/b/262656520](http://www.justin.tv/startuplessonslearned/b/262656520)\n\nAfter watching the video, I understand better what he meant.  He is taking a\nwider view of software development, especially in the context of a startup.\nTying in to the other talks at the conference, startups are where we search for\nworking business models.  We have to maximize learning, sometimes at the\nexpense of perfect engineering.  But we cannot sacrifice engineering so much\nthat it jeopardizes future learning.  We have to still do enough engineering,\nbut not more.  This is not a _carte blanche_ for hacking, merely a reminder\nnot to lose sight of the real goal.\n\nSee also\n[Steve Freeman's review](http://www.m3p.co.uk/blog/2010/04/25/not-a-charter-for-hackers/)."},{"date":"2010-04-23","pretty_date":"April 23, 2010","body":"I watched [Startup Lessons Learned](http://sllconf.com) through their live\nbroadcast.  Here are my takeaways from the sessions I watched.\n\n_Kent Beck_: His beliefs in keeping the code clean at all times are eroding.  In\na startup context, you want to keep the code clean enough that it doesn't slow\nyou down but you don't want to waste time making things perfect.\n\n_Ash Maurya_: Continuous deployment is the new cool thing.  They deploy code in\nsmall chunks as soon as it is passes the tests.  They deploy all the code for a\nfeature over time.  Code deployment is automated, but feature deployment is\nstill managed.  I suppose they have a large switchboard somewhere that says\nwhich features are turned on for which class of users.\n\n_Farb Nivi_:  At Grockit, they use\n[Pivotal Tracker](http://www.pivotaltracker.com/) to manage their stories.\nThey try to keep them as narratives of what the user does and not as dry\nspecifications for the engineers.  They hire smart developers regardless of\nwhich language they know and expect to pick up Grockit's language and\nidiosyncrasies as part of ramping up.  Interviews consist of pairing for a day.\nFarb was using\n[Prezi](http://prezi.com/) for his presentation, which was very cool (except\nit was hard to read the text on the broadcast).\n\n_IMVU_: They push code multiple times a day, which can be a difficult adjustment\nfor new hires that come from large institutions that used to push code only once\na year.  Things that are \"everybody's job\" quickly become \"nobody's job\", so\nit's good to make sure each task has a champion.  They do post mortems all the\ntime and don't punish failure, assuming you learned something, at least.\n\n_Dave McClure_: He led a panel discussion on the role of design.  You should try\nto get an emotional response from the user.  Have them either love it or hate\nit, stay away from the middle of mediocrity.  If someone hates your product,\nthat gives you a concrete actionable item.  He pointed to Kathy Sierra and her\nblog [Creating Passional Users](http://headrush.typepad.com/), it shows good\nuse of simple graphics to carry a point across.  A panelist brought up that\nagile is well entrenched in the world of coding now, but waterfall is still\nstrong in the world of design.\n\n_Randy Komisar_: There was a nice interview with Randy Komisar, a VC with\nKleiner Perkins, where he talked about his latest book,\n[Getting to Plan B](http://amzn.com/1422126692),\nabout a company's ability to _pivot_, or realize what they are currently doing\nis not going to lead to success and they need to start going in a new direction.\nHe mentioned working with [Pinger](http://pinger.com), the VP Eng there is a\nvery good friend of mine so there was a nice personal connection there.\nSuccessful companies pivot many, many times.  You could say they never really\nstop pivoting.\n\n_Aardvark_: They did a lot of \"Wizard of Oz testing\", where a live operator is\npretending to be the software, before they wrote their first code.  It allowed\nthem to test lots of ideas quickly before making an investment in code.  They\nwere eventually acquired by Google.\n\n_Flowtown_: A startup is a sinking ship from day 1.  You will have to make hard\ndecision and you will piss off users.  Get used to it and grow a thicker skin.\nYou shouldn't be afraid to anger your first few users if it lets you learn how to\nsatisfy all the ones that come after them.  Prototype fast and furiously.  Pivot\nhard and take no prisoners.\n\n[_Steve Blank_](http://steveblank.com/): This session is well worth watching,\nif you can find the video.  He presented a model where a startup is meant to\nsearch for a business model that works as opposed to a large enterprise that is\nmeant to execute a business model efficiently.  Startups are small and nimble\nand staffed by entrepreneurs.  Creativity is key to look for new models and try\nthem out.  Large enterprises have a model and they scale it up with professional\nmanagement.  There is a transition step in the middle where the founders usually\ndepart or are thrown out.  That's when you've found a working business model and\nyou have to become less creative and more managed.  Entrepreneurs constantly\nstart new startups, they don't become captains of large industry.\n\nThanks to Troy Angrignon who posted\n[detailed notes on Startup Lessons Learned](http://docs.google.com/View?id=atp5cgp89zw_396dqk483hd)\nin a public Google document."},{"pretty_date":"April 16, 2010","date":"2010-04-16","body":"Martin Fowler and Alistair Cockburn have posted their views on\n[SEMAT](http://www.semat.org/).  They are more eloquent than me, so go read\ntheir posts.  I agree with them that SEMAT is a lost cause.\n\n- [Martin Fowler on SEMAT](https://martinfowler.com/bliki/Semat.html)\n- [Alistair Cockurn on SEMAT](http://alistair.cockburn.us/A+Detailed+Critique+of+the+SEMAT+Initiative)"},{"pretty_date":"March 03, 2010","date":"2010-03-03","body":"I started a page where I hope to illustrate\n[why I like programming in Groovy](WhyILikeGroovy.html)."},{"body":"Today, we launched [ShopWell](http://shopwell.com/).  I posted\n[some pictures of the launch party](http://picasaweb.google.com/dependencyfinder/ShopWellLaunch#)\non Picasa Web Albums.","pretty_date":"February 05, 2010","date":"2010-02-05"},{"date":"2010-01-19","pretty_date":"January 19, 2010","body":"Here is the\n[patent that was awarded to Google for MapReduce](http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7,650,331.PN.&OS=PN/7,650,331&RS=PN/7,650,331).\n\nHere is an\n[article that discusses some of the ramifications](http://arstechnica.com/open-source/news/2010/01/googles-mapreduce-patent-what-does-it-mean-for-hadoop.ars?utm_source=microblogging&utm_medium=arstch&utm_term=Main%20Account&utm_campaign=microblogging)\nof Google's patent for others who were inspired by MapReduce, including the\n[Hadoop project](http://hadoop.apache.org/)."},{"body":"A friend made me realize that I didn't mention leaving Google in this blog.  I\nretro-actively corrected the mistake.  By the way, I **loooove** my new job at\nShopWell.\n\nI don't have much time for Dependency Finder, though.","date":"2010-01-03","pretty_date":"January 03, 2010"},{"body":"A really nice article on\n[the origins of mock objects](http://mockobjects.com/2009/09/brief-history-of-mock-objects.html)\nand [jmock](http://jmock.org/).  It is really nice to see how the concepts\nevolved naturally from doing TDD, using dependency injection, and keeping the\ncode clean.","pretty_date":"December 11, 2009","date":"2009-12-11"},{"body":"Interesting overview of the\n[Go language](http://www.engineyard.com/blog/2009/ready-set-go/) by my good\nfriend Dave Astels.  I like how it can deduce the type of things by itself in\nmany cases.  I also like its use of interfaces.  It is still a little too\nlow-level for me, though.","pretty_date":"December 09, 2009","date":"2009-12-09"},{"pretty_date":"October 19, 2009","date":"2009-10-19","body":"First day at [ShopWell](http://shopwell.com/).  It's an early\nstartup, still in stealth mode, so I cannot say too much about what we're doing,\nyet.  It's got to do with health and nutrition.  We work with Groovy and Grails."},{"pretty_date":"October 16, 2009","date":"2009-10-16","body":"Last day at [Google](http://google.com/).  After four years, it is time for\nme to seek greener pastures elsewhere.  An old colleague from Vignette is now\nlooking for developers for a new startup.  Looks interesting."},{"pretty_date":"September 30, 2009","date":"2009-09-30","body":"Read a little bit about [Groovy](http://groovy.codehaus.org/) and\n[Grails](http://grails.org/).  From what little I saw, Grails has **a lot** in\ncommon with Ruby on Rails.\n\nLooked into [Hadoop](http://hadoop.apache.org/), a Java implementation of\n[MapReduce](http://en.wikipedia.org/wiki/Mapreduce).  I was able to run a\nsimple example on one machine, straight out of the box.  MapReduce is very cool\ntechnology."},{"body":"Going through the [Groovy](http://groovy.codehaus.org/) tutorial.  It is a\nnice scripting language, a cool extension of Java.  You can name closure\nparameters, just like Ruby, but the closure can get a single default parameter\nnamed `it` if you don't specify any parameters, an interesting shortcut.","date":"2009-09-16","pretty_date":"September 16, 2009"},{"body":"A friend mentioned the [Groovy](http://groovy.codehaus.org/) language.  It is\na scripting language built on top of Java.  It compiles to bytecode and runs on\nthe JVM.\n\nVideos on Groovy:\n\n- [Guillaume Laforge at Google](http://www.youtube.com/watch?v=FnIGnMMpn6c)\n- [Guillaume Laforge on AppEngine](http://www.youtube.com/watch?v=NEnniZTdOYk)\n\nThere are a few books on Groovy out there.  I don't know which ones are worth it\njust yet.","date":"2009-09-14","pretty_date":"September 14, 2009"},{"pretty_date":"March 19, 2009","date":"2009-03-19","body":"Bumped into [John Brewer](http://www.jera.com/jbrewer/) in the train on the\nway home.  I knew him from [BayXP](http://tech.groups.yahoo.com/group/bayxp/)\nand also from when he worked at Google.  It turns out he's been doing iPhone\ndevelopment and improv in the year since he left Google."},{"body":"I signed the\n[Manifesto for Software Craftsmanship](http://manifesto.softwarecraftsmanship.org/main).\nIt is in the same spirit as the\n[Agile Manifesto](http://agilemanifesto.org/), which I also signed.  It is a\nstatement of values for professional software developers.","date":"2009-03-18","pretty_date":"March 18, 2009"},{"body":"We had a visit from\n[Donald Knuth](http://www-cs-faculty.stanford.edu/~knuth/things.html) at\nwork.  The title of the talk was \"Faith and Science\" and meant to give his\nperspective on the interplay of religion and science.  I missed the beginning,\nbut I have to admit the open questions portion I attended was pretty horrible.\nAttendees would ask some fundamental questions of reconciling elements of faith\nand science; Knuth would dance around the question nervously for multiple\nminutes before finally admitting that _he didn't know_.  Now, don't get me\nwrong.  I have great respect for a man who knows his limitations and admits he\ndoesn't know something.  But not after leading us on for five minutes.\n\nHe quickly introduced his\n[Project 3:16](http://www-cs-faculty.stanford.edu/~knuth/316.html), where he\nis studying a vertical slice of the Bible.  Here, he is taking chapter 3, verse\n16 of each book of the Bible and researching what commentators and theologians\nhave written about it.  He picked 3:16 because of\n[John 3:16](http://en.wikipedia.org/wiki/John_3_16).  So far, he's only done\nthat one slice.  It would be very interesting to see what shows up for other\nslices.\n\nAside from that, he had nothing original to say.  When you're someone of this\ncaliber and you have nothing to say, don't make a one hour lecture out of it.\n\nThe talk might make its way onto [YouTube](http://youtube.com/) eventually.","date":"2009-03-16","pretty_date":"March 16, 2009"},{"pretty_date":"February 25, 2009","date":"2009-02-25","body":"I play sudoku online with [Count to Nine](http://counttonine.com/).  It turns\nout that one of the site's owner, Wayne Crosby, is a coworker of mine.  I was\nplaying a quick game during a game when he dropped by and asked me if I liked\nthat site.  He then mentioned that it was his site.  I was pleasantly\nsurprised."},{"date":"2009-01-29","pretty_date":"January 29, 2009","body":"It turns out the Guice people were already working on\n[something along the lines of the pattern](http://code.google.com/p/google-guice/issues/detail?id=231)\nI documented yesterday.  With my solution, you can repeat it over and over,\nwith different qualifiers, into an arbitrarily long chain.  The `@New`\nannotation that Guice is considering is a one-shot deal.\n\nI added my tests to the write up.  I wrote the code tests first, so I figured\nthe write up should reflect that."},{"date":"2009-01-28","pretty_date":"January 28, 2009","body":"Wrote a full description of my\n[2-stage Guice provider pattern](TwoStageGuiceProvider.html)."},{"body":"Stumbled upon a way to split the initialization of an object across multiple\n_providers_ when doing dependency injection in Java with\n[Guice](http://code.google.com/p/google-guice/).  I will document it more\nfully on a separate page.\n\nI wrote some sample code and gave JUnit 4.5 a try.  In the past, I have always\nbeen limited to JUnit 3 for one reason or another.  But now, I got to write\nsome tests using annotations and the new `assertThat()` with Hamcrest matchers.\nIt was nice, except that I couldn't really inherit from `MockObjectTestCase`\nanymore, and I have to explicitly declare the jMock `context` in my tests.","date":"2009-01-27","pretty_date":"January 27, 2009"},{"date":"2009-01-10","pretty_date":"January 10, 2009","body":"Added an Atom feed for this Journal.  It forced me to correct many errors in\npast entries, from well-formedness to proper escaping of control characters."},{"date":"2009-01-05","pretty_date":"January 05, 2009","body":"Trying [Twitter](http://twitter.com/).  Here is\n[my feed](http://twitter.com/jeantessier)."},{"body":"Played with [RSpec](http://rspec.info/) today and wrote my first unit tests\nin Ruby.  I even played with\n[Spec::Mocks](http://rspec.info/documentation/mocks/) to do some mocking\nwhile I was at it.","date":"2008-11-07","pretty_date":"November 07, 2008"},{"body":"Started learning about JavaScript today.","date":"2008-10-31","pretty_date":"October 31, 2008"},{"body":"Started looking into [Mockito](http://code.google.com/p/mockito).  It is\nquite different from jMock or EasyMock.  In Mockito, the default is to allow\neverything and not complain about anything.  In jMock or EasyMock, the default\nis to allow nothing and complain about every interaction.\n\nThis has an impact when working with legacy code.  When you write a test with\nMockito, you create mocks and pass them to the SUT.  Your test is green and you\nadd focused verification to keep it green.  When you write a test with jMock or\nEasyMock against legacy code, you create mocks and pass them to the SUT.  Your\ntest is now red and you add all kinds of expectations to cover all interactions\nand eventually make the test go green.  So with Mockito, you start with\nsomething that works and refine it.  With jMock and EasyMock, you start with\nsomething that is broken and repair it.\n\nSo it is a little easier to write the tests after the fact using Mockito.  But\nonce those tests are written, Mockito will not detect new interactions that\nhappen on the mocks, whether they are wanted or not.","date":"2008-06-01","pretty_date":"June 01, 2008"},{"pretty_date":"May 29, 2008","date":"2008-05-29","body":"I wrote a [more complete comparison](Mocking.html) of\n[jMock](http://jmock.org)\nand [EasyMock](http://easymock.org).  Someone also suggested I should include\n[Mockito](http://code.google.com/p/mockito)."},{"pretty_date":"May 25, 2008","date":"2008-05-25","body":"I looked for some corresponding features between [jMock](http://jmock.org)\nand [EasyMock](http://easymock.org).\n\n| Feature                           | jMock                            | EasyMock                               |\n|:----------------------------------|:---------------------------------|:---------------------------------------|\n| Default return value              | `one (myMock).getFoo()`          | _n/a_                                  |\n| Ignoring a method                 | `ignoring (myMock).someMethod()` | `expect(myMock.someMethod()).asStub()` |\n| Intercept mocked method           | `Action` and `CustomAction`      | `IAnswer<T>`                           |\n| Access arguments to mocked method | `invocation.parameterValues`     | `EasyMock.getCurrentArguments()`       |\n\nIt looks like everything I can do with jMock, I can do with EasyMock too.\nAll, that is, except returning innocuous values automatically.  I'll need to\nlook into the `andStub...()` methods further."},{"date":"2008-05-22","pretty_date":"May 22, 2008","body":"Got into an argument of [jMock](http://jmock.org) versus\n[EasyMock](http://easymock.org).  I like jMock better.  I find its syntax\nmore expressive and it lets me do more things with less typing.  I really like\nhow it can return \"innocuous values\" by default.  0 for numbers, &quot;&quot; for\nStrings, ignored mocks for any class, etc.  If I don't care about a given\nreturn value, I can let jMock handle it and not worry about it.  It's really\nnice.  I often hear from people who don't like jMock that they looked at it a\nlong time ago and didn't like what they were seeing.  Early versions of jMock\nhad severe limitations, but jMock 2 is much, much better.\n\nI wrote a Ruby script to parse some _grep_ output to help me ascertain which is\nmost popular at work.  I essentially did this:\n\n    $ find . -name \"*.java\" -print | xargs grep -R -l org.easymock | wc -l\n    _X_\n    $ find . -name \"*.java\" -print | xargs grep -R -l org.jmock | wc -l\n    _Y_\n\nAnd got that _X_ was much larger than _Y_.  Bummer.  Then, I started thinking.\nIf I have one project using EasyMock with 1000 files and one project using\njMock with only 50 files, my grep output would make it look like EasyMock is\nused 20:1 compared to jMock, whereas in fact, it's more like 1:1; one project\non one side, one project on the other side.  So I wrote a quick Ruby script to\ncapture the projects instead of just files.  By project, I mean the third word\nin package names like `com.<company>.<project>`.  I wrote my script\nas:\n\n```ruby\n$!/usr/bin/env ruby -w\n\nprojects = Hash.new(0)\n\nARGF.each do |line|\n    if (line =~ /src\\/com\\/\\w+\\/(\\w+)\\//)\n        projects[$1] += 1\n    end\nend\n\nprojects.sort.each {|pair| puts \"#{pair[0]} -> #{pair[1]}\"}\n```\n\nI paired with Dave Astels to tap into his immense knowledge of Ruby.  His style\nis more in tune with functional programming than mine, but we ended up with\nsomething that was both liked.  I learned a bit about `puts`, he learned about\n`ARGF`.\n\nThis script lets me see what the \"projects\" are and how many files are in each.\n\n    $ find . -name \"*.java\" -print | xargs grep -R -l org.easymock | collect_projects.rb | wc -l\n    _X'_\n    $ find . -name \"*.java\" -print | xargs grep -R -l org.jmock | collect_projects.rb | wc -l\n    _Y'_\n\nThis time, the ratio of _X'_ to _Y'_ is 4:1.  A little better.  At work, we\nstill use EasyMock predominantly, but I can still make a case for using jMock.\n:-)\n\nWhich is what I did in the afternoon, as I was pairing with someone.  I got\nthem to start using jMock to test some specific piece of behavior.  As we went\nalong, we came upon a nasty situation: the class under test creates a structure\nand then passes it to a collaborator that knows how to populate it.  The\nbehavior we wanted to exercise then depends on the structure having been\nproperly populated.  But we are mocking the collaborator!  I can write an\nexpectation that the `populate()` method got called, but how can I have the\nmock modify the structure that was passed in as one of the parameters?  This is\nhow I learned about jMock's `CustomAction` and how to stub side-effects in my\nexpectations.  It looks ugly, but it allowed us to write a test quickly instead\nof having to embark on a lengthy refactoring right on the spot.  It was kind of\nnice.  I learned something today!"},{"body":"I wrote my first [PyUnit](http://pyunit.sourceforge.net/) tests today.  I'm\nnot in love with the Python syntax for running the tests or for importing\nclasses.  Or maybe there's just something I'm not getting.","pretty_date":"May 21, 2008","date":"2008-05-21"},{"body":"I colleague pointed me to these great\n[motivational posters](http://www.flickr.com/photos/sebastian_bergmann/sets/72157603983743793/)\nthat blend [Demotivators](http://despair.com/) and testing and Star Wars\nvery nicely.","date":"2008-03-26","pretty_date":"March 26, 2008"},{"pretty_date":"March 19, 2008","date":"2008-03-19","body":"For my new language for 2008, I decided to learn Ruby.  I finished reading the\nfirst two parts of the [Pick Axe](http://amzn.com/0974514055).\nLast year, I learned Python and I stopped using Perl in order to force myself\nto focus on Python.  One thing I really missed from Perl are the command-line\nswitches `-p`, `-n`, and `-i`; I could use them for quick one-off operations on\nfiles.  In Python, I have to write a script for the simplest task.  I'm glad to\nreport that Ruby also has `-p`, `-n`, and `-i` switches that behave exactly as\nin Perl."},{"pretty_date":"September 21, 2007","date":"2007-09-21","body":"It's alive!\n\nMy Alienware computer is alive again!\n\nI put in the new drive, but the computer wouldn't start.  I needed to use the\nfloppy drive in a pinch, so I decided to re-install Windows again so at least\nI could copy a file from my USB thumbdrive to a floppy.  So I put the old\nhard-drive in and ran the Windows recovery CD.  Somehow, that fixed the boot\nsequence and next thing I know the computer is booting from the image on the\nhard-disk.  All the drivers are setup correctly.  Oh joy!  Now, I bought a\n250GB hard-drive for nothing.  Ah well, maybe I can find a way to make it work\nas a secondary drive or something.\n\nAll I have left to do is reinstall everything: games, apps, patches, data..."},{"body":"The new hard-drive has arrived.  I ordered a `WD2500JD` and they sent me a\n`WD2500JS`.  Everything seems the same except it uses SATA II instead of plain\nold SATA.  Searching the web indicates that they should be compatible.","pretty_date":"September 20, 2007","date":"2007-09-20"},{"date":"2007-09-17","pretty_date":"September 17, 2007","body":"Ordered a replacement drive.  I'm going for exact duplication of the hardware,\nso I need a `WD2500JD`.  After 2.5 years, they are getting hard to find."},{"body":"Copied all remaining data to the external drive.  Ran Alienware Respawn to\nghost the machine, but it failed.  When I reboot, I get a blue screen to flash\nfor one moment and then it tries to reboot again.  I guess the crash actually\ndamaged the drive and some sectors are now bad.  The Respawn tried to restore\nthese sectors to what they had been but failed.  It looks like I will have to\nreinstall Windows again and figure out all the drivers.  One good thing: just\nbefore running Respawn, I got the sound card to work again.","date":"2007-09-15","pretty_date":"September 15, 2007"},{"pretty_date":"September 14, 2007","date":"2007-09-14","body":"Bought an external 500GB drive with USB 2.0 and FireWire.  That should last me\na while."},{"pretty_date":"September 12, 2007","date":"2007-09-12","body":"Borrowed a FireWire cable so I can copy data out of my Alienware onto my\nMacBook Pro.  I needed MacDrive so Windows could write to the MacOS-formatted\ndrive.  It works pretty well, but it was slow work copying everything.  And I\nran out of space on my MacBook Pro; I only got to copy 75GB and I still have\nanother 50GB to go."},{"pretty_date":"September 11, 2007","date":"2007-09-11","body":"I have an Alienware Respawn CD to set it all back the way it was when they\nshipped it to me.  This will erase the harddrive, though.  I need to copy all\nmy important files out of there first.  But, it should solve all my driver\nissues."},{"body":"Got a technician to come and install my new motherboard.  When we booted up the\nmachine, it flashed a blue screen and tried to reboot again.  The technician\nthinks the crash corrupted the OS files and I will have to reinstall Windows.\nWhen I did, all the driver configuration was wrong.  I can't get to 1600x1200\nwith 32-bit graphics, I can't get sound, and I can't get on the network.  I\nhave a CD with drivers, but it has drivers for all Alienware hardware and I\ncan't figure out which ones are the ones I need.","pretty_date":"September 10, 2007","date":"2007-09-10"},{"body":"New motherboard arrived.","date":"2007-09-04","pretty_date":"September 04, 2007"},{"pretty_date":"August 29, 2007","date":"2007-08-29","body":"New motherboard shipped."},{"date":"2007-08-27","pretty_date":"August 27, 2007","body":"I won the auction for my new motherboard."},{"date":"2007-08-25","pretty_date":"August 25, 2007","body":"My Alienware machine is dead.  It won't start.  I can't even get a hardware\nsplash screen to show.  I talked with a technician who said my motherboard is\nprobably dead.\n\nI bid on a new motherboard on eBay.  It comes with a slightly better processor\nand 4GB of RAM.  That would be a nice upgrade."},{"pretty_date":"January 25, 2007","date":"2007-01-25","body":"I just realized that I've been working with Alex Martelli, author of some of the\nmost popular books on Python, for the past six months and I didn't even\nrealize it.  He wrote or co-wrote:\n\n- [Python in a Nutshell, 2nd Edition](http://amzn.com/0596100469)\n- [Python Cookbook](http://amzn.com/0596007973)\n\nWhat a small world."},{"date":"2007-01-11","pretty_date":"January 11, 2007","body":"I volunteered to read\n[Agile Software Development, 2nd Edition](http://amzn.com/0321482751).\nI have only one week to read it and do a report.  I had to stop by a booktore\non my way home to buy a copy.  I had read the first edition and done a\npresentation back when I was at Vignette, I should be able to reuse a lot of\nthat material."},{"body":"I attended a BayXP meeting with guest speaker Alistair Cockburn.  It was hosted\nat Google.  He covered many of the ideas in his latest book:\n[Agile Software Development, 2nd Edition](http://amzn.com/0321482751).\nHis latest interests have taken him in an interesting direction: maybe the\nexpression _software engineering_ isn't so bad after all, as long as you adjust\nyour definition of _engineering_.\n\nHe proposes that engineering has always been a collaborative game of invention\nand communication.  It is only in the second half of the 20th Century that some\nstarted to think of it in terms of hard, empirical science.  If you look at how\nengineers work from day to day, it looks very much like what we do with\nsoftware: discuss, model, compare idea, make prototypes, iterate, etc.\n\nCockburn is working on a framework to help define software engineering.  His\nframework is based on three _legs_:\n\n1. craft\n1. cooperative game of invention and communication\n1. theory of constraints\n\nThe crafts are skills that all practitioners must learn and refine continuously.\nHis list of crafts for software engineering includes:\n\n- Deciding what to build (what some might call _requirements_)\n- Managing\n- Modeling\n- Designing the external view (what some might call _UI_)\n- Architecting (large-scale design)\n- Programming (small-scale design)\n- Validating decisions (what some might call _testing_)\n\nHe eschews words like _requirements_, _UI_, and _testing_ because they carry too\nmuch baggage and it keeps people from looking beyond their preconceptions.\n\nThe game aspects means it's a team effort and there are many factors that come\ninto consideration for every decision.\n\nFinally, we can learn from _lean manufacturing_ by replacing units of production\nby decisions and then optimizing the flow of decisions throughout the process.\n\nCockburn also brought up the latest acronym: `XXD` or \"Dos Equis\"-Driven\ndevelopment.  Just like TDD is not about testing, XXD is not about beer.  Really,\nthe tests are eXecutable eXamples, hence the name.  Funny.\n\nCockburn closed with some quotes from a NATO conference that was held in 1968\nand was where they coined the tern \"software engineering\".  He found it\ninteresting that they recommended heavyweight procedures, but in practice they\nwere doing things in a very agile way.\n\n- While they aim for a process people are interchangeable, they would rather work with teams of close friends and wouldn't consider a contract without knowing the people on the team.\n- People who spend 90% of the project time to produce paper confuse the menu with the meal.\n- Write flow charts until you think you understand the problem.  Write code until you realize that you do not.  Repeat.\n\nIt's easy to take quotes out of context and spin them however you like.  I would\nhave liked a little more context about the NATO conference, who the participants\nwere, who held what position, etc.  I guess I'll have to find and read the\ntranscript.","pretty_date":"January 10, 2007","date":"2007-01-10"},{"body":"Met Guido Van Rossum's wife and son at the park.  They are nice people.  I was\nout playing with my kids when this lady saw my Google jacket.  She was wearing\nthe same.  She mentioned that her husband worked at Google, \"doing things with\nPython.\"  When I mentioned that I was just learning Python myself, she said:\n\"My husband wrote Python.\"  I said: \"Guido?\"  She answered yes and we had a\ngood laugh.","pretty_date":"January 06, 2007","date":"2007-01-06"},{"body":"Python won't let me write \"`i++`\".  So far, the only explanation I could find\nwas that Guido didn't like the `++`/`--` operators.  Lame.  For a moment, I\nthought I'd be stuck writing super-long \"`i = i + 1`\" until a friend pointed\nout \"`i += 1`\" worked too.  I guess this will have to do.\n\nThere is an FTP module in Python, but it looks pretty useless.  It is little\nmore than writing explicit commands to a socket and parsing the response\nyourself.  I was hoping for a _list_ or _dir_ operation that would return a\ndirectory structure, but I guess I will have to keep on searching.","date":"2007-01-04","pretty_date":"January 04, 2007"},{"body":"Got Python for my PCs from [python.org](http://python.org/).\n\nI found some good candidates for books on Python:\n\n- [Python in a Nutshell, 2nd Edition](http://amzn.com/0596100469)\n- [Learning Python](http://amzn.com/0596002815)\n- [Programming Python](http://amzn.com/0596009259)\n- [Python Cookbook](http://amzn.com/0596007973)\n- [Python Essential Reference, 3rd Edition](http://amzn.com/0672328623)\n\nObviously, they modeled _Learning Python_ and _Programming Python_ on the very\npopular titles for Perl.  But whereas _Programming Python_ is much more popular\nthan _Learning Perl_, it appears to be the reverse with Python and\n_Learning Python_ gets more stars on Amazon than _Programming Python_.  Curious.\n\nThere is also a pretty cool\n[online tutorial](http://docs.python.org/tut/tut.html).","pretty_date":"January 03, 2007","date":"2007-01-03"},{"body":"New Year resolution: learn Python.  We use a lot of Python at work to write\nscripts and small applications.  Learning it will make me more efficient.  If I\nwrite my own scripts in Python, someone else is more likely to be able to\nmaintain them than if they were written in Perl.\n\nSo I am quitting Perl cold-turkey.  From now on, I will use only Python for\nscripting (besides Bash scripts).  Quitting Perl will force me to go through\nthe effort of finding what I need from Python rather than falling back on Perl\nout of expediency.  So far, I have not found an equivalent to `perl -p/-n` to\nquickly process a file.  :-(\n\nI borrowed some books from a colleague until I can get my own (his are a little\nout of date):\n\n- [Python in a Nutshell](http://amzn.com/0596001886)\n- [Python Essential Reference](http://amzn.com/0735710910)","date":"2007-01-02","pretty_date":"January 02, 2007"},{"pretty_date":"November 08, 2006","date":"2006-11-08","body":"Latest chapter in my quest for a job title: _Software Designer_.  I was\nlooking at a job description from Qu&eacute;bec, where you cannot call yourself\nan engineer unless you are a member of their professional organization.  Since\nI got my degree in Computer Science and not in Engineering, I could not call\nmyself a software engineer, but a software designer would work just fine."},{"body":"Played with Selenium.\n\nLooked at [TestNG](http://testng.org).  Noticed how they use annotations to\nearmark the tests and fixture methods.\n\nTook another at [Junit 4.1](http://junit.org).  Played with it a bit in order\nto try using annotations.  It was not so easy since they actually removed many\nof the familiar trappings of JUnit 3.  Gone is the Swing `TestRunner`.  All\nthat is left is the text runner and now it is called\n`org.junit.runner.JUnitCore`.  Go figure.\n\nI remember being fairly disappointed that JUnit had gone the route of\nannotations.  It makes life harder for tool makers.  :-)","date":"2006-09-19","pretty_date":"September 19, 2006"},{"body":"I used to keep my blog in a static HTML file and write it all by hand, markup\nand all.  That was tedious.\n\nToday, I wrote a CGI script in Perl to break it up into individual text files,\none per day, and use my pseudo-wiki processor from Dependency Finder to\ngenerate the page dynamically.  This way, when I want to add an entry, I simply\nadd a text file with a much easier notation than fullblown HTML.","date":"2006-09-07","pretty_date":"September 07, 2006"},{"date":"2006-09-05","pretty_date":"September 05, 2006","body":"I assisted at a presentation by Ken Schwaber on Scrum and got a free copy of\nhis book: Agile Project Management with Scrum.  He is a very good speaker.  He\nsounded very honest and he shared his experience freely.  Later in the day, he\nhad a more intimate session with the agile user group.  The organizer had asked\nfor questions ahead of time but Ken completely highjacked the meeting and took\nit where he wanted to take it.  It was very interesting.  He basically forced us\nto question why we care about agile processes and what our goals are and what\nare we doing to make track against them."},{"date":"2006-08-18","pretty_date":"August 18, 2006","body":"Finally launched Reporting for Google Base.  On the UI, it's just three\ncolumns of numbers, but there was quite a bit of backend work to do.  I got my\nname in the official Google Base blog!"},{"pretty_date":"August 04, 2006","date":"2006-08-04","body":"A friend sent me these\n[hilarious posters](http://www.duggmirror.com/programming/Extreme_Programming_Motivational_Posters_sarcastic/)\nabout eXtreme Programming."},{"body":"I assisted at a presentation by Mike Cohn and got a free copy of his book:\nAgile Estimating and Planning.  He has another book out on user stories that is\nwell liked on Amazon.  I'm thinking of getting it, but I might read this one\nfirst.","pretty_date":"March 13, 2006","date":"2006-03-13"},{"date":"2006-03-10","pretty_date":"March 10, 2006","body":"I finished reading an updated version of [Martin Fowler](MartinFowler.html)'s\n[The New Methodology](https://martinfowler.com/articles/newMethodology.html),\nhis article on agile processes.  In it, he talks about how they distinguish\nthemselves by focusing on the iterative nature of development and being\npeople-centric.\n\nI have been thinking about this lately.  To me, agile processes are first\nand foremost about feedback.  They try to make you close the feedback loop and\nkeep it real short, so you can get a lot of good information in a timely manner\nand better steer the project especially in the face of changing\nrequirements.\n\nA friend of mine keeps mixing methodologies and individual practices.  He\ntalks of the Test-Driven Development methodology or the Pair Programming\nmethodology.  I don't know that it's really worth my time to try to set him\nstraight, that these are just practices in a larger context, not ends in and of\nthemselves.  For what he needs, his concerns are of a higher nature: get the\nsoftware done and answer customer needs.  His interests do not lie in knowing\nthe finer details of this methodology versus that methodology.  And it's OK.\nHe focuses on figuring out what needs to be done and he can let the developers\nworry about the details of which methodology and which practices to put in\nplace to do it."},{"body":"I learned today, quite by accident, that John Vlissides passed away a few\ndays ago.  He was one of the \"Gang of Four\", the writers of\n[Design Patterns](http://amzn.com/0201633612).\nI was fortunate enough to meet him, once, at PLoP '96.  He was on my workgroup\nand he was a very positive influence.  He was very nice and he liked my paper\na lot.  :-)\n\nI was presenting the patterns from my MSc work.  The one about\n[Remote Operation](http://www.iro.umontreal.ca/~keller/Layla/remote.pdf)\ncaught his eye and I remember him saying he wished he had had it\nwhen they were writing the Proxy pattern.  I was quite awed that one of\nsoftware's great would appreciate my work.  During the workshop sessions, he\nwas just one of us, looking at papers and commenting constructively on them.\nI fell very fortunate for these few moments spent in his company back then.\n\nJohn Vlissides died on November 24, 2005, after a long fight with cancer.\nThere is a [memorial](http://www.c2.com/cgi/wiki?JohnVlissides) on\nWard Cunningham's original Wiki.","date":"2005-11-30","pretty_date":"November 30, 2005"},{"pretty_date":"October 25, 2005","date":"2005-10-25","body":"Google Base was leaked today.  Screenshots showed up on various blogs less\nthan one hour after the site was briefly open to public access.  It is quite a\nchange to work for a company where everything is under a very powerful\nmicroscope."},{"body":"Had a discussion at work about how comments lie and you shouldn't rely on\nthem too much.  Of course, eXtreme Programming advocates actually recommend you\ndon't even bother with comments.  My coworkers don't agree.  And they wish all\nthis _nonsense_ would just end.\n\nIn my opinion, comments rely on human nature to stay current, which is\nhighly unreliable.  Eventually, as the team grows and the complexity increases\nand the release pressure builds, the effort required to maintain the comments\nexceeds their ROI.  It is in the fundamental nature of comments to lie, no\nmatter how hard you fight it.  In the end, entropy will win.\n\nMy colleagues' counter-argument is that you don't really come upon such bad,\n_lying_ comments all that often.  And it is already hard enough to get\nprogrammers to write comments, we don't need to discourage them further.  One\ncould say that yes, it is hard, and they should be spending their energy\nwriting code instead.\n\nThis discussion is far from over.","pretty_date":"October 19, 2005","date":"2005-10-19"},{"date":"2005-09-15","pretty_date":"September 15, 2005","body":"Looked into [WebWork](http://www.opensymphony.com/webwork/), a\nweb application framework based on MVC-2.  I've always been unclear about the\ndistinction between MVC-1 and MVC-2, but reading through it finally drove the\npoint home.  In MVC-1, the navigation between controllers and views is embedded\nin the JSPs (views) themselves.  In MVC-2, the navigation is encapsulated in a\ncentral dispatcher and usually driven declaratively by a configuration file.\nWebWork also uses an Inversion of Control framework to inject dependencies into\ncomponents that make up the MVC-2 structure.\n\nI have been considering for some time to redo the Dependency Finder web app\nwith some kind of MVC structure.  Right now, all the logic is embedded into the\nJSPs themselves as large scriplets.  While this is not maintainable on  large\nscale project, in the case of Dependency Finder it kept things simple and kept\nthe size of the WAR file down.  At one point, I thought of using Struts, but\nthe libraries it requires were too big and I didn't want to ship them with\nDependency Finder.  I'll have to see if it's the same for WebWork.\n\nIt feels nice to learn something new and on the cutting edge.  It had been\na while."},{"pretty_date":"September 13, 2005","date":"2005-09-13","body":"I realized I'm working with the author of [JsUnit](http://www.edwardh.com/jsunit/),\n[Edward Hieatt](http://www.edwardh.com/).  He leads a small group\nthat does eXtreme Programming and it is quite refreshing to have somebody else\npush for XP practices, for a change.  He and the rest of his group are pretty\nsmart and it is a joy to work with them.  We share many points of view when it\ncomes to developing software.\n\nHe has a nice sideline going on at [agilestuff.com](http://www.agilestuff.com)."},{"pretty_date":"September 01, 2005","date":"2005-09-01","body":"I learned today that people are spreading nasty rumors about me at my old\njob.  Apparently, someone accused me of having badmouthed the company during my\nlast days there; which is simply not true.  It is a great company with a great\nproduct and I wish them all the success in the world (I own stock in the\ncompany, after all).  And then, someone else questioned my behavior after I'd\ngiven my notice.  I continued working to the best of my ability and even\nvolunteered for a task that took most of my last week and involved training a\nnewbie at the same time.  If this is reprehensible, I hope everyone is just as\nbad as me when they leave their job.\n\nA friend told me to forget about it and not let it get to me.  But I feel\nhurt and it cast a shadow on what had otherwise been a great week at my new job.\nI'll heed the advice and not pursue the matter any further.  It's just\ndisappointing when you work hard to preserve relationships and one bad apple\ncan undo it all and there's not much you can do about it.  I can only hope that\nthe people there will see this for what it is."},{"pretty_date":"August 29, 2005","date":"2005-08-29","body":"Started work at [Google](http://www.google.com/)."},{"body":"Last day at [LinkedIn](https://www.linkedin.com/).","pretty_date":"August 26, 2005","date":"2005-08-26"},{"pretty_date":"August 16, 2005","date":"2005-08-16","body":"Gave my two week notice at [LinkedIn](https://www.linkedin.com/)."},{"date":"2005-05-27","pretty_date":"May 27, 2005","body":"Again with Skowronski.  This time, it's Warren Keuffel and my beloved\n[Software Development Magazine](SoftwareDevelopmentMagazine.html)\nthat are at it.  In the June 2005 issue, Keuffel picks up Skowronski's rant and\nconcludes with an ominous prediction that by focusing on agility, we might be\ndriving innovation out of our field.  To me, it looks like Keuffel fell in the\nsame trap of seeing everything as a zero-sum game.  I still humbly disagree, as\nyou can read below."},{"body":"I was finally able to attend a BayXP meeting again.  I missed quite a few in\na row due to working late those particular evenings at the office or other\ndistractions.  I was able to make it to the\n[ThoughtWorks](http://www.thoughtworks.com/us/) offices in San\nFrancisco at watch a presentation on [Fitnesse](http://fitnesse.org/).\nExposed brick walls, exposed old wood rafters, the place had character\ndespite the earthquake retrofitting.\n\nThe talk was pretty lively and was a nice introduction to working with\nFitnesse and its place in the development process than a nuts and bolts view\ninto writing fixtures.  Details of the talk are\n[here](http://agileworks.blogspot.com/2005/05/joy-and-pain-with-fitnesse.html).\n\nI met with two former colleagues from my days at Epicentric and Vignette\nwho were at the meeting.  We all work for separate startups now.","pretty_date":"May 18, 2005","date":"2005-05-18"},{"pretty_date":"February 04, 2005","date":"2005-02-04","body":"Maybe Test-Driven Development is really _MDA in Java_ in the way that\n_tests_ are really an executable specification and writing them first is\nreally a way to do design rather than testing."},{"body":"Got a new Alienware PC.  Ultimate gaming machine.  :-)","date":"2005-02-02","pretty_date":"February 02, 2005"},{"pretty_date":"February 01, 2005","date":"2005-02-01","body":"Follow up on Victor Skowronski from readers' letters in the December 2004\nIEEE Computer magazine.  Readers comment on how Skowrowski either doesn't\nreally understand agile processes or doesn't give them a fair chance.  Agile\nmethods promote adaptability, adjusting themselves to their surroundings and\nfinding what works best for each individual team.  This point was completely\nlost on Skowronski.\n\nOf course, Skowronski had to respond.  When he is not dismissive of the\ncritique, he simply repeats himself.  He really sees the problem-solver /\npeople skill relationship as a zero-sum game.  If you try to better skills on\none side, it can only be at the expense of the other.  Poppycock!  I thought\nwe'd moved past this idea in our understanding of personalities a long time\nago.\n\nOne of the readers and Skowronski worry that agile methods keep putting off\nworking on hard problems in favor of delivering features.  As a result, they\ncan let prevent a project from discovering fatal flaws until a lot of resources\nhave been spent already.  They must had skipped some pages when reading on\nagile methods.  My understanding has always been that you tackle risk early on\nagile projects, precisely to ferret out risk and identify those possibly fatal\nflaws as quickly as possible.  Such flaws may very well include the team not\nbeing able to come up with a solution to a particular problem.  But the agile\nteam makes sure that the customer gets the most out of the project before they\npossibly decide to cancel it.  And the customer, _in discussion with the agile team_,\ncontrols priorities and decides which risks to tackle in which order.  The\ncustomer holds the strings of the purse and gets to steer the project.  He or\nshe does not do so blindly, but informed by the regular and frequent feedback\nfrom the developers."},{"pretty_date":"December 11, 2004","date":"2004-12-11","body":"Somebody on the TDD Yahoo! group suggested that advocates of test-driven\ndevelopment use a logo to tell the world.  Someone put a few on\n[testdriven.com](https://www.testdriven.com/media-kit/) and I put one of them\non my website.\n\n[![https://testdriven.com](https://testdriven.com/programs/imtd2.gif)](https://testdriven.com)"},{"pretty_date":"December 03, 2004","date":"2004-12-03","body":"A colleague showed me an article in the October 2004 IEEE Computer magazine\nby Victor Skowronski.  The title says it all:\n_Do Agile Methods Marginalize Problem Solvers?_  In it, he says that great\nproblem solvers work alone, at their own pace, and make progress in quantum\nleaps that cannot be rationalized or predicted.  Since agile methods focus on\ncollaboration and teamwork and small iteration that track progress, they make\nit hard for the solitary problem solvers to contribute effectively.  The\nauthor argues that problem solvers are the best programmers, so an\norganization that adopts agile methods effectively cuts itself from its best\nelements.\n\nThat's a whole lot of baloney!\n\nHe is saying that entire organizations should jump through hoops in order to\naccomodate prima donas.  It's OK if everbody else is miserable and morale is\nvery low.  The exceptional and unpredictable talent of the prima dona will\nmake up for it and pull the organization through.  When you find a business\nmanager that buys this, let me know.\n\nThe reality of modern day software development is that it is a team effort.\nThe biggest challenge is managing the development itself and making sure that\nthe business side will get what they need in time.  There are still hard\nproblems that require lots of intellectual work, but there are many more\nprojects that are mundane and require a large amount of less hard work.  On the\ntypical corporate project, you need teamwork and predictability which is what\nagile methods give you.\n\nThe author also contends that hard problems can only be solved by solitary\nlabor, where the problem solver must reflect on the problem and will eventually\nreceive illumination.  I am not ready to admit that this is the only way to go.\nThere are many examples of really hard problems tackled successfully by large\nteams: the space programs, the Panama Canal, modern computers.  For large teams\nto work, you need good communication within the team and the ability to tap\neveryone's potential.  Making everyone miserable and resting all your hopes on\none miracle worker is irresponsible."},{"body":"Today, I attended a\n[developer testing forum](http://www.agitar.com/events/000104.html)\nhosted by [SDForum](http://sdforum.org/) and\n[Agitar](http://www.agitar.com/).  The highlight was a keynote by\nKent Beck himself.\n\nThe event started with Sriram Sankar giving a talk about extreme programming\nat Google and how it fits well with their culture of empowering developers.  But\ngiven their scale, they need a little more process with some degree of initial\ndegree and peer reviews both of design and before checkin.  There is also a\nlarge body of mandatory rules that go beyond coding style to include testing\npractices.  They have the good sense of providing initiation and training for\nnew employees.  They introduced XP as a grassroot, viral-growth effort and it\nseems to be catching on slowly.  They have been able to have stable builds and\ncan ensure backward compatibility thanks to a large body of tests.  They also\nuse live monitoring of production logs to drive projectors.  I once saw a\nsimilar setup at Schwab, it's pretty neat.  \"Great code comes from happy XP\nengineers;\" suddely I feel like a [cow](http://www.realcaliforniacheese.com/).\n\nNext was a disussion panel with Rob Mee (Pivotal Computer Systems), Russell\nGold (Oracle and HttpUnit), Sri Muthu (Wells Fargo), and David Vydra\n([testdriven.com](https://testdriven.com/)).  The main message was\nthat the business side has always assumed that the development side was doing\nappropriate testing, even though it was not always true.  But lately, they have\nstarted to ask for the artifacts of our testing.  Since they always assumed we\nwere testing, they won't be giving us more time, so we can start doing it now.\nThere was even a suggestion that it is tantamount to professional negligence\nfor today's programmers not to do TDD.  They have seen a roughly 30% adoption\nrate among programmers; much stronger with junior developers that senior ones\nthat are already set in their ways.\n\nWhich brings us to the final keynote given by Kent Beck.  The talk centered\naround the word _accountability_.  Not as who gets the blame, but rather\nas being able to render account, why and how you did what you did.  TDD helps\nus do this by recording our assumptions at the time we did the development.  A\nnew edition of his book,\n[eXtreme Programming Explained](http://amzn.com/0201616416),\nis due out soon, with updated practices and more feedback from real life\nexperience.\n\nI got him to sign my copy of _Planning eXtreme Programming_, which I had\njust finished reading the day before.\n\nThe forum closed with a demo of Agitar's flagship product: Agitator.  It\nanalyzes your Java code and automatically generates test batteries that try to\nget 100% branch coverage.  It was very impressive, the way they use all the\nconstants in your code to generate test data and can automatically detect\nassertions in your code, which you can instantly turn into method or class\ninvariants.\n\nClosed the day with a [BayXP](http://www.jera.com/bayxp/)\nmeeting with Jeff McKenna.  We discussed the planning game.  He mentioned how\nyou can use the release plan to provide a bound context for the iterations, so\nit doesn't look like an endless succession of work.  He found that for him, it\nwas not worth the effort to estimate individual tasks to refine the estimates.\nWhether or not he does it, he gets the same accuracy.  You still need to break\ndown stories into tasks, but don't waste too much time estimating them.  A lot\nof the talk was reinforcement of the contents of _Planning eXtreme Programming_\nand _Waltzing with Bears_, two books I just read very recently.  Nice\ncoincidence.\n\nWe started doing planning with index cards at work, so this will be\nhelpful.  I actually got a coworker to come to the meeting too.","pretty_date":"November 17, 2004","date":"2004-11-17"},{"date":"2004-08-16","pretty_date":"August 16, 2004","body":"Started working at [LinkedIn](https://www.linkedin.com/)."},{"body":"Volunteered to get laid off from [Vignette](http://www.vignette.com/).","date":"2004-07-30","pretty_date":"July 30, 2004"},{"body":"Accepted a job offer from [LinkedIn](https://www.linkedin.com/).","pretty_date":"July 29, 2004","date":"2004-07-29"},{"pretty_date":"June 25, 2004","date":"2004-06-25","body":"A friend asked me how I saw myself in the realm of software development.\nAs I retold my earlier musings about engineering and craftsmanship, he\nmentioned that French carmaker [Renault](http://www.renault.fr) came\nup with a new slogan: \"_Cr&eacute;ateur d'Automobiles_\", which loosely\ntranslate to \"Creator of Cars.\"  He suggested that I might consider myself a\n\"creator of tools\" or a \"software creator.\"  It suggests a certain part of\ninnovation and care for one's work.  It does not sound as quaint as \"craftsman\"\nand laypeople would get the gist of it immediately."},{"body":"I don't care much for the work ethics in software that make it cool for\nsomeone to sacrifice their personal life to the company.  Why would you give up\neverything that makes you a balanced individual to benefit a faceless\ncorporation that will throw you away like a used towel the moment you are no\nlonger worth their while?  I've seen it with large corporations and I've seen\nit with startups.  What you put into your personal life will come back to you\nthroughout your life.  What you put into a company will most likely never come\nback to you, unless you happen to own the company, and I don't mean owning a\nfew thousand shares.\n\nIf you don't look out for yourself, nobody else will.\n\nIt's OK to go beyond the call of duty on occasion, as long as you stand to\nbenefit from it in some remote fashion.  But don't lose sight of your own best\ninterest, don't let it get to a point where you are just being used.  The\nothers are in it for themselves, not for you.  Stay with them only for as long\nas your goals lie in the same direction as theirs.","pretty_date":"June 22, 2004","date":"2004-06-22"},{"body":"Read a\n[chapter on Taylorism](http://pup.princeton.edu/books/rochlin/chapter_04.html)\nby Prof. Rochlin.  It is interesting that I am currently reading\nPete McBreen's _Software Craftsmanship_ where he advocates that we turn away\nfrom modern, neo-Taylorist, deskilled software engineering and return to the\ntraditional ways of craftsmen.\n\nThe premise looks tempting, that software engineering should be driven like\na craft, where masters lovingly guide and mold their apprentices, passing on\ntheir hard-earned experience.  But I'm not sure this return to the ways of the\npast is really the answer.  There is something to be said for the industrial\nrevolution and the achievements of our modern technological society: longer\nlife expectancy, more leisure time, etc.  The sentimental attachment to\nidealized master-apprentice relationships and artisans who take pride in their\nwork was a small price to pay, considering what society as a whole gained in\nreturn.\n\nI'm sure I would enjoy my job a whole lot more under a craftsmanship model\nthen the proposed software engineering roles where every task has been\ndeconsructed and optimized.  I would gain a lot in enjoying my life.  But I'm\nnot sure that it is in the society's best interest to have the entire\nprofession go back in time like that.\n\nWhile Rochlin lists the profound transformations to the workplace triggered\nby neo-Taylorism and its negative impact on the workers, he says we don't know\nwhat the longterm effect on society will be.  It possibly will be negative,\nbut it could also turn out to be positive.  Industrialization has made the\nWestern Hemisphere the dominant force on the planet.  Would you go back to\n19th Century living conditions just so blue-collar workers can feel better?\nRemember that back then, living was hard, with little leisure for most; child\nmortality rates were high.  People didn't live quite that old.  Do we really\nwant to go back to _that_?\n\nI don't have any answers for now, just a bunch of questions and things to\nponder for a while.  More later.","date":"2004-05-27","pretty_date":"May 27, 2004"},{"pretty_date":"May 20, 2004","date":"2004-05-20","body":"Someone reacted to my suggestion for [Martin Fowler](MartinFowler.html)'s\narticle yesterday by mentioning Pete McBreen's _Software Craftsmanship_.\nHe said how it got him away from calling himself a\n\"software engineer\" and changing to a \"software craftsman\" instead.  I went\nthrough some of the same questioning myself a while ago, and I also feel closer\nto a software craftsman than an engineer.  But the reality of it is that the\naverage person sees all software professionals as _software engineers_\nwithout distinguishing between the finer points.  So I need to adjust my\nmessage according to my audience, what else is new."},{"date":"2004-05-19","pretty_date":"May 19, 2004","body":"Attended tonight's BayXP meeting with guest Eric Evans.  During the talk,\nthere were some comments about what _software architecture_ really means\nand it brought back memories of [Martin Fowler](MartinFowler.html)'s\narticle on the topic:\n[Who Needs an Architect?](https://martinfowler.com/ieeeSoftware/whoNeedsArchitect.pdf)\n\nEric's talk was very enlightening.  He discussed his book\n_Domain-Driven Development_ and how it applies to extreme programming.\nHis approach focuses on taking a careful look at the problem domain and\nderiving the vocabulary of the project from it.  This helps keep the\ncustomer on board.\n\nI also met a former colleague who is now doing eXtreme Programming at his\nnew place of work.  He described his\n[experience in his blog](http://slesinsky.org/brian/code/starting_xp.html?seemore=y).\nReading it brought back fond memories of my first experiments\nwith pair programming, and how I felt exhausted at the end of the day; but it\nwas a good exhaustion, coming from knowing we had accomplished a lot that day.\nI'm glad Brian is enjoying his experience just as I did mine."},{"pretty_date":"May 18, 2004","date":"2004-05-18","body":"Dragged my direct coworkers (3 + my direct report) to a rehearsal for a talk\nI have to give tomorrow to the full Engineering department.  They were very\nreluctant at first to have me waste a whole 3 minutes of their time.  They even\nenquired if attending tomorrow's was necessary after having been through the\nrehearsal.  Now it's not like I only see these people once a week.  I go to\nlunch with them almost everyday, we sit in a bullpen together.  We complain\nabout the same things together.  By now you should get it that we're fairly\nclose to each other.  And yet they would not lend me a hand when I asked for a\ntest audience for my talk.  It depressed me a little."},{"body":"Played with Visio and Pavel's UML 2.0 templates.  I really like the\n_ball and socket_ notation for showing that a class uses an interface\nof another class.  It is aesthetically very pleasing.","date":"2004-05-17","pretty_date":"May 17, 2004"},{"pretty_date":"May 14, 2004","date":"2004-05-14","body":"Forword to Domain-Driven Design.  I really like how\n[Martin Fowler](MartinFowler.html) says that domain modelers should\nbe able to talk to customers in the domain language and talk with developers in\nthe implementation language, e.g., Java.  Do you think he means by\n_domain modeler_ what our current analysts should be doing?  I, for one think so,\nwhich makes the current situation that much more depressing."},{"body":"Presentation judo.  Very funny.","date":"2004-05-13","pretty_date":"May 13, 2004"},{"body":"I just love it when I read about a new pattern only to find out that it\ndescribes something I was already doing for some time.  This happened today,\nas a discussion on a mailing list pointed me to the Unit of Work pattern.  It\nis described in a lot of details in [Martin Fowler](MartinFowler.html)'s\nbook _Patterns of Enterprise Application Architecture_ and is at the heart\nof the [Hibernate](http://hibernate.org/) framework.\n\nThe basic idea is to have an object, the unit of work, keep track of all\nchanges to a group of objects you've read from the database (or created or\ndeleted).  When you are done manipulating these objects, you commit the unit of\nwork object, which saves all changes to the database simultaneously.  It does\nnot address distributed databases and two-phase commit issues, but these could\nbe orthogonal concerns, handled within the unit of work object itself, I\nguess.\n\nIt turns out that I did something similar on my own  few years back, where\nindividual changes to existing objects were persisted immediately but creations\nand deletions were accumulated in a _Transaction_ object and committed\ntogether.  It may very well be that by reading a lot about patterns and\ndatabase mapping, I unconsciously absorbed the patterns and then recalled it\nwhen a need arose.  It's just cool that I now come across this documented piece\nof knowledge that validates my decision from back then.","date":"2004-05-07","pretty_date":"May 07, 2004"},{"body":"Mary Poppendieck presentation on raising productivity in software\ndevelopment.  This is related to her work on lean software development.  I've\nput my notes on a [separate webpage](bayxp.20040315.html).","pretty_date":"March 15, 2004","date":"2004-03-15"},{"pretty_date":"March 12, 2004","date":"2004-03-12","body":"Last month, a coworker and I got into an argument regarding the use of\ninterfaces versus abstract base classes.  We came to the realization that my\ncoworker wants to expose the minimum API possible, taking into account issues\nof backward compatibility, whereas I want to grant maximum freedom to our\ncustomers.  These two goals are not always easy to reconcile.  Today, I found\na [bliki entry](https://martinfowler.com/bliki/SoftwareDevelopmentAttitude.html)\non [Martin Fowler](MartinFowler.html)'s website that sums\nit up pretty well.  He calls it the directing attitude (my cowoker) versus the\nenabling attitude (me)."},{"date":"2004-03-05","pretty_date":"March 05, 2004","body":"I checked and they fixed my name on\n[Software Development](http://www.sdmagazine.com/) magazine's\nwebsite.\n"},{"pretty_date":"February 20, 2004","date":"2004-02-20","body":"I just noticed that the article in\n[Software Development](http://www.sdmagazine.com/) magazine\nmisspelled my name as \"Tessler\" instead of the correct \"Tessier\" with an \"i\".\nDarn!  I've sent email to the writer, maybe they can fix the online version at\nleast.  Here's hoping."},{"body":"OK, I was a little rash.  Most of them are actually OK.  It turns out that\nthe first ones to answer were the one who took the least time to read what I\nhad to say.  After them, the other replies were very useful.","pretty_date":"February 12, 2004","date":"2004-02-12"},{"date":"2004-02-11","pretty_date":"February 11, 2004","body":"XPers are a just bunch of hackers.\n\nI sent a message to a couple of mailing lists regarding a design issue I've\nbeen having at work, and they completely missed the point.  I described the\nsituation in a few classes and two alternatives, inquiring which one looked\nbest.  Their first reaction: this reeks of big design upfront, too much\ncomplexity, this is all bogus.  It never occurred to them that there might\nexist situations where that is the simplest design that might work.  They\nimmediately went into a frenzy about only custom code is good enough.  It never\noccured to them that I might have ended up there by refactoring some simple\nsolution already.  There was no benefit of the doubt, I was labelled a BDUFer\nthe moment I set foot in there.\n\nIt just makes me mad."},{"body":"[Software Development](http://www.sdmagazine.com/) magazine\npublished a piece on open source software in which they mention Dependency\nFinder.  It is listed right alongside heavy hitters like LAMP (Linux, Apache,\nMySQL, PHP), Perl, and JUnit.  My name is listed with the likes of Richard\nStallman, Larry Wall, Linus Torvalds, Yukihiro Matsumoto, Kent Beck, ...\n\n... eh! ... wait a minute! ...\n\n... all these guys are &uuml;bergeeks! ...\n\nThey've put me in with a bunch of geeks!  Args!!!\n\n`:-)`\n\nOr more precisely: `:-D`","date":"2004-02-06","pretty_date":"February 06, 2004"},{"pretty_date":"February 04, 2004","date":"2004-02-04","body":"For some time, I've been saying that if you can't communicate your ideas to\nothers successfully, it is just as if you hadn't had them in the first place.\nWhat I mean by this is that the onus is on **you** to get the stuff out of\nyour head and it is your responsibility to get the message across to your\naudience.  Not everybody agrees with me, but that's what I say anyway.\n\nNow, don't you just hate it when you come to some great conclusion after a\nlong and thorough reflexion, only to find out that someone from the Antiquities\nbeat you to it by thousands of years?  Today I came upon this quote attributed\nto Thucydides, allegedly over 2,300 years ago:\n\n> A man who has the knowledge but lacks the power to express it is no better off\n> than if he never had any ideas at all.\n\nA little more research showed that Thucydides was a historian.  The quote is\npart of a speech by Pericles to the Athenian assembly, shortly before he died\nin 429 B.C.\n\nI found the quote in\n[How to Get a Paper Accepted at OOPSLA](http://www.acm.org/sigplan/oopsla/oopsla96/how93.html).\nIt is now at the top of my list of favorite quotes."},{"date":"2004-02-03","pretty_date":"February 03, 2004","body":"I read\n[a paper by Allan Shalloway](http://www.netobjectives.com/ezines/ezine_2004_01.pdf),\nof _Design Patterns Explained_ fame, on the\nusefulness of design patterns.  Again, he warns not focus too much on the\nparticular solution, but rather on the forces at play in the pattern and how\nthey are resolved.  That's where the true value of design patterns is.  Some of\nit boils down to the usual \"program to an interface, not an implementation\" and\n\"favor composition over inheritance\".  As always, you want to encapsulate what\nchanges to limit the impact of these changes to the rest of the code."},{"body":"I saw that [ThoughtWorks](http://www.thoughtworks.com/) is hiring.\nSomeone posted on the `pragprog` list that they were applying there\nand wanted a little more information regarding their hiring process.  Now,\n[Martin Fowler](MartinFowler.html) works there and I like him very\nmuch.  At UML 2000, he had talked about the place and seemed very ecstatic about\nit.  He is big on XP, and Alistair Cockburn referred to some of Fowler's\nexperiences with XP at ThoughtWorks.  So I took a look at their website, and it\nturns out they have a office right here in San Francisco.  My commute wouldn't\neven have to change, their office is right by the train station.  Now it\nremains for me to see if I'm ready to move on and if I'd like to work as a\nconsultant.  I'm still far from decided on either count.","date":"2004-01-18","pretty_date":"January 18, 2004"},{"body":"I attended a webcast by Robert C. Martin on\n[the intersection of agility, objects, and UML](http://webevents.broadcast.com/cmp/wcs/detail.asp?event_id=11483).\nHe was his usual perky self and a lot of his material was the usual stuff\nabout OO principles and dependency management.  He threw in some updated\nadditions, mentioning Model-Driven Architecture (MDA) and aspects.  I was at\nwork with some coworkers.  They expressed some skepticism about the feasibility\nof fully automated acceptance tests and whether or not his approach to\ndocumentation (or lack thereof) is realistic.  For my part, I was pleased with\nthe talk.  The tone was relaxed and the contents very informative.","pretty_date":"January 15, 2004","date":"2004-01-15"},{"body":"I read an\n[article by Martin Fowler on accessors](https://martinfowler.com/ieeeSoftware/dataAccessRoutines.pdf).\nIt reiterated some of the ground rules regarding an object's state and how\nyou expose it to other objects.\n\nHis [bliki](https://www.martinfowler.com/bliki/) also had a\nreference to a\n[Bill Caputo](http://www.williamcaputo.com/archives/000053.html)\npiece on XP.  It's a reaction to a criticism of XP from\n[Gerold Keefer](http://www.stickyminds.com/sitewide.asp?ObjectId=3248&Function=DETAILBROWSE&ObjectType=ART).\nThe whole thing seemed overinflated, but Gerold Keefer did\nraise some valid questions to make you apply some critical thinking before you\nimplement XP in your workplace.  Fowler and Caputo are quick to remind people\nthat agility's focus is on people and finding ways to let a team do its work.\n\nJavaPro also had an article on \"interface-driven development\".  It would\nhave been good, if not for the fact that I've been hearing this message ever\nsince I opened the GoF book on design patterns.  Since then, it has been one\nof my most important design rules: code to interfaces.  I guess it needs\nrestating every once in a while, to make sure everyone is aware of it.","pretty_date":"January 13, 2004","date":"2004-01-13"},{"pretty_date":"December 02, 2003","date":"2003-12-02","body":"I read a\n[nice article on Test-Driven Development](http://www.sys-con.com/story/?storyid=37795&DE=1)\nin JDJ.  It's a nice, concise description of TDD.  I like TDD.\nI try to use it as much as I can now."},{"body":"I attended a webinar by Barbara Warthen where she tried to compare software\ndevelopment with software engineering.  She's a process consultant and she\nbasically exhorted the virtues of heavy-weight processes.  She used the usual\ncomparison of building a doghouse as opposed to a skyscraper and how the degree\nof complexity in software has shot up since the '50s.  One nice thing is that\nshe did provide updated data from the Standish Group on project success rates.\nThings haven't changed much since the '70s.\n\nShe tried to compare current project management practices to buying a car,\nsaying the current state of affair was more like getting only half the\nfeatures: no brakes, no steering, etc.  Actually, I think the analogy works\npretty well indeed.  The advertisement says \"starting at $9,999.99\" but they\nshow you the $20,000 model with all options.  If you want the car on display,\nyou're gonna have to pay a lot more in the end, or if you stick the price, you\nwon't get what you were expecting.  I was kinda happy to see this one backfire\non her.  :-)\n\nShe described software engineering as applying common sense to solving\nproblem.  To her, that's the essence of engineering in general.  The fact that\nsoftware is not a physical entity was irrelevant.  I don't fully agree.  The\nfact that software is not physical changes the whole economics of producing\nsoftware.\n\nShe talked a little bit about IEEE software engineering standards and\n[SWEBOK](http://www.swebok.org/).  She also touched on the\n[SEI](http://www.sei.cmu.edu/)'s CMM level.  All sources that\nadvocate very heavy processes.  She did touch on agile methodologies toward the\nend, quoting common sense things like don't do documentation for the sake of\ndocumentation or don't follow your process for the sake of jumping through\nhoops.  But she didn't go to any great length about this.\n\nIn the end, she claimed a good process and big design up front paid for\nthemselves by reducing programming time.  Since all the decision are made\nduring analysis and design, the coding phase is drastically simplified.  The\nway I understand this is that the analysts and designers call all the shots and\nvalidates their decisions using vaporware.  Coding is reduced to mindless\ndrivel for code monkeys to do.  I don't care much to work in that kind of\nenvironment.  Life is short, I want to enjoy it and find fun and fulfillment in\nmy work.  I don't care for being someone else's code monkey.\n\nSo overall, the webinar was useful and informative.  It provided a lot of\ngood and useful information.  But in the end, I choose to disagree with her\nabout the usefulness of heavyweight processes.","date":"2003-11-20","pretty_date":"November 20, 2003"},{"body":"I read two useful articles.\n\nThe first one was by Eric S. Raymond of open source fame.  He talked about\nhow the open-source movement and agile programming have a lot in common.  One\nthing is for sure, Mr. Raymond does not suffer from too much humility.  But he\ngoes about showing how the open source practitioners have been following agile\npractices for years but didn't have words to describe what they were doing.  So\nboth sides benefit from each other.  Open source validates agile practices in\nreal world development and agile methodologies provide a formal framework to\ndiscuss _hacking_, as Raymond calls it.  You can read article at:\n[http://www.artima.com/weblogs/viewpost.jsp?thread=5342](http://www.artima.com/weblogs/viewpost.jsp?thread=5342).\n\nThe second article was much more enlightening.  It was about ethics and\nprofessionalism for software people.  A lot of people think of professional\nbehavior as dressing sharp and not offending anyone.  But author, Philip\nGreenspun, argues that real professionalism should promote and advance the\nprocession.  Professional programmers should dedicate themselves to high\nquality work, innovation, and sharing what they learn with others.  You can\nread the article at:\n[http://tinyplanet.ca/projects/professionalism.html](http://tinyplanet.ca/projects/professionalism.html).","date":"2003-11-17","pretty_date":"November 17, 2003"},{"body":"I attended this month's meeting of the [BayXP](http://www.jera.com/bayxp/).\n[Ron Jeffries](http://xprogramming.com/) was talking about some of\nthe things that are on his mind lately.\n\nFirst, let's talk about the speaker.  He reminded me very strongly of a\nformer coworker who acted as a mentor to me when I entered the workforce.  It\nwas a little uncanny.\n\nThe talk was lively as he led us through some of his latest thoughts on the\nsubject of planning.  Through his teaching exercises, he has had some insights\ninto the dynamics of planning.  Students with no real knowledge of the tasks'\nvalue or difficulty can still generate pretty good schedules.  Even random\nschedules can still work out pretty good.  So how can we apply this knowledge\nto real projects?  No definitive answers yet, but some interesting questions.\nMore to come later, I guess.","date":"2003-10-08","pretty_date":"October 08, 2003"},{"date":"2003-10-07","pretty_date":"October 07, 2003","body":"I have come to realize that the essential skill for anyone who wants to do\nany kind of convincing or mentoring is _empathy_.  You just have to be\nable to put yourself in the other person's place and understand things from\n_their_ point of view.  Not just how you would understand things if, like\nthem, you didn't know what you now know, but how _they_ might try to\nunderstand things, how _they_ think, how _they_ might go about trying\nto solve a problem.  The issue is not how you would do in their place, but\nrather how _they_ go about it.\n\nThis came about after I discussed some complex piece of software with a\ncoworker.  We are both good at what we do, but I still had a hard time grasping\nsome of the concepts he was trying to convey.  Not because of their utmost\ncomplexity; some of them were pretty simple.  It had more to do with how he\nchose to present them to me, in a manner that made a lot of sense to him but\nwas quite unfamiliar to me.  I eventually got what he meant, but I had to do\nquite a bit of work to get it.  If I hadn't been in need of that information, I\nwould not have bothered trying to understand what he was saying.\n\nNow he could come back to me and say that I should have told him I didn't\nunderstand what he was talking about.  But I really believe that it is the\nresponsibility of the communicator to get the message across.  You cannot count\non your audience to go the extra mile.  If it is important to you that your\nmessage gets across, then it behooves you to take the steps necessary for this\nto happen and communicate with your audience in a way that _they_\nunderstand."},{"body":"More about this script I was talking about the other day.  It scans code to\ncollect lookup keys and generate a resource file with them.  I have been using\nthis script to verify that my resource file has all the keys needed by the\napplication, but my coworker justs wants to use it when he's done with his\napplication to generate the resource file automatically.\n\nSo today I took the script public within our development organization.\nSomeone complained that we should not use the script and that everyone should\nmaintain their resource file manually; to try an automated script is lazy and\nerror-prone.  **Error-prone**???  Synchronizing keys across\nmultiple files and doing it manually is error-prone.  Anything to automate that\nis a step up!  And lazy?  Why,\n[laziness](http://c2.com/cgi/wiki?LazinessImpatienceHubris) is the\nfirst virtue of a good programmer, according to Perl creator Larry Wall.  Of\ncourse, he's talking about the kind of laziness that makes you do a lot of work\n**now** so you don't have to do quite as much later.\n\nI was tempted to start a flame war over this, but in the end my better\njudgement prevailed.  In the process, I reacquainted myself with\n[Godwin's Law](http://c2.com/cgi/wiki?GodwinsLaw).  I suggest you\ndo the same.","date":"2003-09-29","pretty_date":"September 29, 2003"},{"body":"When I write software, I care about doing a good job and writing well\nstructured code that will be easy to maintain.  Maybe I am not a computer\nscientist but more of a _software craftsman_.  What kind of title would\nthat make?  I think it conveys a feeling of coming up with individual\nsolutions adapted to the problem at hand, not applying rote techniques from a\ncode book.  It rings of taking pride in one's work, of being highly skilled at\nsolving problems.  That sounds good to me.","pretty_date":"September 18, 2003","date":"2003-09-18"},{"pretty_date":"September 17, 2003","date":"2003-09-17","body":"I had a chat with a coworker about agile processes, which turned into a\ndiscussion of XP versus CMM.  While many consider them two extremes of one\nspectrum, I don't think it is the case.  I think CMM has more to do with how\nyou look at your process, whatever that process is.  It could even be XP.  CMM\nis more about how you monitor your process and look for ways to improve it.  I\ndo realize that most people take that as a license to have more paper and more\nbureaucracy, but it doesn't have to be that way.\n\nWith that same coworker, we worked on a quick Perl script to automate this\none tedious task.  He asked me to look at his first draft, clean it up and\nadd two somewhat simple features.  Later, when I showed him my result, we got\ninto a discussion of the features and how they work.  It took me a while to\nrealize that I had assumed one way of using it and he had assumed another.  It\nwould be easy to make the script support both usage patterns, but we had to\nspend some time convincing each other that both were valid use cases.  We\nmanaged to work it out, but it was unexpectedly hard.  We are coworkers who\nwork together all the time, we know each other, we work on the same problems,\nand still it took us a while to understand that the other could also be right.\nOn one hand, I can't help thinking that if it is this hard when we know each\nother, what must it be between strangers?  And what if they don't even share\nthe same culture?  On the other hand, maybe it was harder because we had high\nexpectations of each other, since we are so close to one another.\n\nI attended this month's meeting of the [BayXP](http://www.jera.com/bayxp/).\n[John Levy](http://www.johnlevyconsulting.com/) was presenting the\n[Sustainable Computing Consortium](http://www.sustainablecomputing.org/).\n\nFirst, let's talk about the speaker.  The invitation to the meeting made\nLevy sound like an old timer who had seen it all.  He had been on large\nprojects throughout his lengthy career and would have great insights into\nproject management.  I was expecting a wizened old man of the old school, with\nhard-earned knowledge about the nature of the beast.  It would be great to hear\nwhy someone whom you would think more on the heavyweight side of process is\ncoming down instead on the side of eXtreme Programming.  Well, the guy is\nbarely fifty.  His resume looks fine, he's been around and on many projects,\nbut so have Scott Ambler and Martin Fowler and the other advocates for agile\nprocesses.\n\nAnd now for the Sustainable Computing Consortium.  This was recently started\nby CMU, creators of SEI and the CMM levels.  Not quite a crowd pleaser at XP\nmeetings.  Then, there is the list of founding members: Microsoft, Oracle, and\na few others from pharmaceutical and financial outfits.  Not exactly the first\nnames to pop when you think agile development.  More like the purveyors of\nbloated software and lovers of big process.  Someone said this might turn out\nlike CORBA, or another CMM-like excuse for throwing more process at problems.\nFinally, the membership cost of $25,000 kinda threw people off.\n\nSo while the goals might seem laudable, time will tell if the execution\nlives up to expectations."},{"body":"At the office, most developers use\n[IntelliJ](http://www.intellij.com/) to write Java and JSP code.  I\nuse Emacs.\n\nI have to admit that IntelliJ that I almost switched, some time back, when\nI saw the support for refactoring and the \"Find Usages\" function, which mirrors\nDependency Finder.  Fortunately, a friend mentioned\n[Xrefactory](http://www.xref-tech.com/), an emacs add-on that does\nrefactorings and some \"find usages\"-like functionality (and more).  All for the\nsmall price of $29.00.  So I have not jumped on the IntelliJ bandwagon, yet.\n\nThe main reason I want to stay with Emacs is so I can have the same\ndevelopment environment at home and at work.  I can't afford the $500.00 to buy\nIntelliJ for myself.  With Emacs and Xrefactory, I have the same environment at\nwork and at home for Dependency Finder.  That is, until you factor in that at\nwork, I have a Win2k machine that is relatively robust, while at home I have a\nWin98 box that is very flaky.  I cannot install Linux on it because I need\nWin98 for games, both for the kids and for myself.  :-)\n\nBut these past few days, I have had to work on some JSPs that use custom\ntags developed by the company.  Everyone is laughing at me as I struggle with\nthem in Emacs, while they are having a good time with very extensive support by\nIntelliJ.  Tag name auto-completion, automatic attribute detection, the works.\nSomeone actually challenged me to find equivalent support for JSPs in Emacs.\n\nI found references to\n[MMM mode](http://mmm-mode.sourceforge.net/) at SourceForge.  This\nallows multiple major modes to coexist in the same buffer, so HTML chunks can\nuse `html-mode` and scriptlets can use `java-mode` or\n`jde-mode`.  From messages out there, it seems to require some\ndegree of adjustment to work correctly.  And the last release dates back to\nFebruary 2001.  Hasn't anyone done anything since?\n\nOther references use\n[multi-mode.el](ftp://archive.cis.ohio-state.edu/pub/emacs-lisp/old-archive/misc/),\na GNU package that is almost 10 years old!\n\nIs there no hope for me to find a decent Emacs add-on for JSPs?  Will I\nhave to give up my beloved Emacs and succumb to IntelliJ?\n\nOn another note, I rediscovered\n[Half-Life](http://www.gameoftheyear.com/).  I have been playing\nmost evenings instead of thinking about Dependency Finder.  I even reinstalled\nOpposing Force and managed to make some progress in it too.","date":"2003-09-16","pretty_date":"September 16, 2003"},{"date":"2003-09-15","pretty_date":"September 15, 2003","body":"Shared some thoughts with a colleage on what it means to be a software\nengineer versus the other designations.  We did not come to any conclusion,\nexcept that in real life, the distinction does not matter all that much."},{"date":"2003-09-12","pretty_date":"September 12, 2003","body":"I'm catching blog fever.  I need to start expressing my views too.\n\nI started a [reading journal](Books.html) to keep track of the books I read\nand what I think of them.  I need to do the same for articles, somehow.\n\nI have been struggling lately with how to define myself.  My web page starts\nwith \"I am a software engineer,\" but is that really what I want to project?\nWhat do people read in this?  Here are some alternatives and what I think of\neach:\n\n<dl>\n    <dt><b>programmer</b></dt>\n    <dd>\n        I write code.  That's what I do.  And I am very good at it,\n        writing complex code that is highly flexible.  But some people think\n        that programmers are nothing more than code monkeys, and that's not\n        how I want to be perceived.  So I need something a little more fancy.\n        Plus, when I write code, I do a lot of design too.  The two activities\n        go hand in hand: do a little design, write a little code, repeat.\n        This is not captured in most definitions of _programmer_.\n    </dd>\n    <dt><b>software developer</b></dt>\n    <dd>\n        Not quite the code monkey, but still quite low in the food chain.\n        In people's mind, this is the new term for _programmer_, with all\n        the baggage.\n    </dd>\n    <dt><b>software designer</b></dt>\n    <dd>\n        Feels a little pigeonholed.  People who usually care about this\n        level of distinction also believe in rigid job segregation.  The\n        analyst analyzes.  The designer designs.  The programmer codes.  I\n        don't see it that way.  I do any of the above at one time or\n        another, depending on the need of the moment.\n    </dd>\n    <dt><b>software engineer</b></dt>\n    <dd>\n        Am I an engineer?  I majored in computer science.  In some places,\n        that actually makes it illegal for me to use a title that includes the words\n        _engineer_ or _engineering_.  And when I was in college,\n        there was some competition between the computer science department and\n        the engineering school, so I don't even _want_ to be called an\n        engineer.  :-)\n    </dd>\n    <dt><b>software architect</b></dt>\n    <dd>\n        A lot of people say this is just title inflation.  Maybe it is a\n        little pretentious.\n    </dd>\n    <dt><b>computer scientist</b></dt>\n    <dd>\n        I did major in computer science.  But to most people, computer\n        scientists belong in academia and are disconnected from reality.\n    </dd>\n</dl>\n\nRobert Grady, in\n[Practical Software Metrics for Project Management and Process Improvement](http://amzn.com/0137203845),\nsays engineers are after solutions, whereas scientists are after knowledge.  I\ntried to look into it a little further and found a debate going on regarding the\nnature of programming.  Is it an art?  A craft?  A science?  Engineering?\nHere's my take on it:\n\n<div class=\"table-wrapper\">\n<table class=\"centered-triplet\">\n    <thead>\n        <tr><th>endeavour</th><th width=\"33%\"></th><th>... what they're after</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>art</td><td>&DoubleRightArrow;</td><td>beauty, esthetics</td></tr>\n        <tr><td>craft</td><td>&DoubleRightArrow;</td><td>skill, well built</td></tr>\n        <tr><td>engineering</td><td>&DoubleRightArrow;</td><td>practical solution</td></tr>\n        <tr><td>science</td><td>&DoubleRightArrow;</td><td>knowledge</td></tr>\n    </tbody>\n</table>\n</div>\n\nBased on this, I'd say I'm a computer scientist.  But I am not formal enough to\nbelong in academia.  And I need to share my what I know a little more.\n\nI visited Martin Fowler's website and read his latest articles on architecture\nand architects.  He has some good insights into what one should look for in an\n_software architect_.  I would like to think it fits me.\n\nAlso found [John Levy](http://www.johnlevyconsulting.com/)'s website and read\nsome of his thoughts on process.  He's obviously given the topic a lot of\nthought.  It is nice to see someone with his vast experience who believes in\neXtreme Programming.  I always have the impression that high level managers from\nlarge firms are more of waterfall type."},
    {
      body: "I went to Alan Shalloway's talk on \"Transitioning to Agile\".  It was in a\nsmall room in a community center in Palo Alto.  The walls had kids' artwork.\nIt was very simple settings, which I didn't mind at all.  It brought a very\nhuman dimension to the event.  Alan apologized profusely about the facilities.\nGranted they did not scream \"professional\", but I liked them nonetheless.  The\ntalk was instructive, even though I already knew most of the material from\nreading Alistair Cockburn's _Agile Software Development_.  It dwelt more\non what agile _is_ than really transitioning, but that was OK given it\nwas a free seminar.\n\nI started to read Alan's book, _Design Patterns Explained_, on the\ntrain before going to the seminar.  He described the epiphany he had while\nlearning about design patterns, that you should try to encapsulate the part\nthat changes.  This is what I learned when I read Wolfgang Pree's book on\nmeta-patterns.  Alan mentioned at the seminar that he thought _Design Patterns_\nby the Gang of Four had been hard to read.  Pree's book is much\nharder still; it reads more like the guy's Ph.D. thesis.  But the core material\nabout hooks and hot spots in frameworks is so important that I think everyone\nshould read it to really understand the essence of building flexible software.\nBut it is not easily accessible to everyone, I must concede.",
      date: "2003-09-11",
      pretty_date: "September 11, 2003",
    },
  ],
}
